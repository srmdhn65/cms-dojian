{"version":3,"file":"static/js/6446.a25ef386.chunk.js","mappings":"qOAoBA,MAmEA,EAnEoBA,IAIK,IAJJ,MACnBC,EAAK,eACLC,EAAc,iBACdC,GACiBH,EACjB,OACEI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,UAAWN,EAAeI,UAC3BL,GAAS,IAAIQ,KAAI,CAACC,EAAMC,KAEtBP,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACC,GAAI,EAAEP,UACTF,EAAAA,EAAAA,KAACU,EAAAA,EAAI,CACHN,UAAWO,IACT,eACA,CACE,2BAA4BL,EAAKM,eAEnCb,GACAG,UAEFW,EAAAA,EAAAA,MAACH,EAAAA,EAAKI,KAAI,CAACV,UAAU,cAAaF,SAAA,EAChCF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,gDAA+CF,SACzDI,EAAKS,QAERf,EAAAA,EAAAA,KAAA,QACEI,UAAWO,IACT,oBACAL,EAAKM,cAAgB,aAAe,gBACpCV,UAEFF,EAAAA,EAAAA,KAAA,KAAGI,UAAWE,EAAKU,UAErBH,EAAAA,EAAAA,MAAA,MACET,UAAWO,IAAW,qBAAsB,CAC1C,aAAcL,EAAKM,gBAClBV,SAAA,CACJ,IACGI,EAAKW,MAAM,KAACJ,EAAAA,EAAAA,MAAA,QAAAX,SAAA,CAAM,KAAGI,EAAKY,gBAE9BlB,EAAAA,EAAAA,KAAA,MAAII,UAAU,wBAAuBF,UACjCI,EAAKa,UAAY,IAAId,KAAI,CAACe,EAASC,KAC5BrB,EAAAA,EAAAA,KAAA,MAAAE,SAAgBkB,GAAPC,QAGpBrB,EAAAA,EAAAA,KAAA,UACEI,UAAWO,IACT,MACA,eACA,cACA,OACA,OACA,WACAL,EAAKM,cAAgB,YAAc,eACnCV,SACH,kBA5CUK,QAqDtB,ECOP,EAlFgBe,KAqDZT,EAAAA,EAAAA,MAACU,EAAAA,SAAc,CAAArB,SAAA,EACbF,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CACRC,gBAAiB,CACf,CAAEC,MAAO,cAAeC,KAAM,kBAC9B,CAAED,MAAO,UAAWC,KAAM,iBAAkBC,QAAQ,IAEtDC,MAAO,aAGT7B,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,UAAU,yBAAwBF,UACrCW,EAAAA,EAAAA,MAACL,EAAAA,EAAG,CAACsB,GAAI,GAAG5B,SAAA,EACVW,EAAAA,EAAAA,MAAA,OAAKT,UAAU,cAAaF,SAAA,EAC1BW,EAAAA,EAAAA,MAAA,MAAIT,UAAU,OAAMF,SAAA,CAAC,QACfF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,cAETF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,yBAAwBF,SAAC,sHAOxCF,EAAAA,EAAAA,KAAC+B,EAAW,CAAClC,MA1EW,CAC9B,CACEmC,GAAI,EACJjB,KAAM,oBACNC,KAAM,WACNC,MAAO,GACPC,SAAU,QACVC,SAAU,CACR,gBACA,mBACA,YACA,SACA,gBACA,gBAEFP,eAAe,GAEjB,CACEoB,GAAI,EACJjB,KAAM,gBACNC,KAAM,WACNC,MAAO,GACPC,SAAU,QACVC,SAAU,CACR,gBACA,mBACA,WACA,UACA,gBACA,gBAEFP,eAAe,GAEjB,CACEoB,GAAI,EACJjB,KAAM,kBACNC,KAAM,cACNC,MAAO,GACPC,SAAU,QACVC,SAAU,CACR,iBACA,sBACA,YACA,kBACA,gBACA,gBAEFP,eAAe,IA2BgBd,eAAgB,gB","sources":["components/PricingCard.tsx","pages/other/Pricing.tsx"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nexport interface PlanItemsTypes {\n  id: number;\n  name: string;\n  icon: string;\n  price: number;\n  duration: string;\n  features: Array<string>;\n  isRecommended: boolean;\n}\n\ninterface PricingCardProps {\n  plans: PlanItemsTypes[];\n  containerClass?: string;\n  pricingCardClass?: string;\n}\n\nconst PricingCard = ({\n  plans,\n  containerClass,\n  pricingCardClass,\n}: PricingCardProps) => {\n  return (\n    <>\n      <Row className={containerClass}>\n        {(plans || []).map((plan, idx) => {\n          return (\n            <Col md={4} key={idx}>\n              <Card\n                className={classNames(\n                  \"card-pricing\",\n                  {\n                    \"card-pricing-recommended\": plan.isRecommended,\n                  },\n                  pricingCardClass\n                )}\n              >\n                <Card.Body className=\"text-center\">\n                  <p className=\"card-pricing-plan-name fw-bold text-uppercase\">\n                    {plan.name}\n                  </p>\n                  <span\n                    className={classNames(\n                      \"card-pricing-icon\",\n                      plan.isRecommended ? \"text-white\" : \"text-primary\"\n                    )}\n                  >\n                    <i className={plan.icon}></i>\n                  </span>\n                  <h2\n                    className={classNames(\"card-pricing-price\", {\n                      \"text-white\": plan.isRecommended,\n                    })}\n                  >\n                    ${plan.price} <span>/ {plan.duration}</span>\n                  </h2>\n                  <ul className=\"card-pricing-features\">\n                    {(plan.features || []).map((feature, idx1) => {\n                      return <li key={idx1}>{feature}</li>;\n                    })}\n                  </ul>\n                  <button\n                    className={classNames(\n                      \"btn\",\n                      \"waves-effect\",\n                      \"waves-light\",\n                      \"mt-4\",\n                      \"mb-2\",\n                      \"width-sm\",\n                      plan.isRecommended ? \"btn-light\" : \"btn-primary\"\n                    )}\n                  >\n                    Sign Up\n                  </button>\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </>\n  );\n};\n\nexport default PricingCard;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport PricingCard, { PlanItemsTypes } from \"../../components/PricingCard\";\n\n// Pricing component\nconst Pricing = () => {\n  const plans: PlanItemsTypes[] = [\n    {\n      id: 1,\n      name: \"Professional Pack\",\n      icon: \"fe-users\",\n      price: 19,\n      duration: \"Month\",\n      features: [\n        \"10 GB Storage\",\n        \"500 GB Bandwidth\",\n        \"No Domain\",\n        \"1 User\",\n        \"Email Support\",\n        \"24x7 Support\",\n      ],\n      isRecommended: false,\n    },\n    {\n      id: 2,\n      name: \"Business Pack\",\n      icon: \"fe-award\",\n      price: 29,\n      duration: \"Month\",\n      features: [\n        \"50 GB Storage\",\n        \"900 GB Bandwidth\",\n        \"2 Domain\",\n        \"10 User\",\n        \"Email Support\",\n        \"24x7 Support\",\n      ],\n      isRecommended: true,\n    },\n    {\n      id: 3,\n      name: \"Enterprise Pack\",\n      icon: \"fe-aperture\",\n      price: 39,\n      duration: \"Month\",\n      features: [\n        \"100 GB Storage\",\n        \"Unlimited Bandwidth\",\n        \"10 Domain\",\n        \"Unlimited Users\",\n        \"Email Support\",\n        \"24x7 Support\",\n      ],\n      isRecommended: false,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Extra Pages\", path: \"/pages/pricing\" },\n          { label: \"Pricing\", path: \"/pages/pricing\", active: true },\n        ]}\n        title={\"Pricing\"}\n      />\n\n      <Row className=\"justify-content-center\">\n        <Col xl={10}>\n          <div className=\"text-center\">\n            <h3 className=\"mb-2\">\n              Our <b>Plans</b>\n            </h3>\n            <p className=\"text-muted w-50 m-auto\">\n              We have plans and prices that fit your business perfectly. Make\n              your client site a success with our products.\n            </p>\n          </div>\n\n          {/* pricing cards */}\n          <PricingCard plans={plans} containerClass={\"my-3\"} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Pricing;\n"],"names":["_ref","plans","containerClass","pricingCardClass","_jsx","_Fragment","children","Row","className","map","plan","idx","Col","md","Card","classNames","isRecommended","_jsxs","Body","name","icon","price","duration","features","feature","idx1","Pricing","React","PageTitle","breadCrumbItems","label","path","active","title","xl","PricingCard","id"],"sourceRoot":""}