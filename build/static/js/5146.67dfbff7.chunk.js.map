{"version":3,"file":"static/js/5146.67dfbff7.chunk.js","mappings":"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","sources":["pages/auth/ForgetPassword.tsx","../node_modules/react-bootstrap/esm/Alert.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button, Alert, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n//actions\nimport { resetAuth, forgotPassword } from \"../../redux/actions\";\nimport { RootState, AppDispatch } from \"../../redux/store\";\n\n// components\nimport { VerticalForm, FormInput } from \"../../components/\";\n\nimport AuthLayout from \"./AuthLayout\";\n\ninterface UserData {\n  username: string;\n}\n\n/* bottom link */\nconst BottomLink = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className=\"mt-3\">\n      <Col className=\"text-center\">\n        <p className=\"text-white-50\">\n          {t(\"Back to\")}{\" \"}\n          <Link to={\"/auth/login\"} className=\"text-white ms-1\">\n            <b>{t(\"Log in\")}</b>\n          </Link>\n        </p>\n      </Col>\n    </Row>\n  );\n};\n\nconst ForgetPassword = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  const { loading, passwordReset, resetPasswordSuccess, error } = useSelector(\n    (state: RootState) => ({\n      loading: state.Auth.loading,\n      user: state.Auth.user,\n      error: state.Auth.error,\n      passwordReset: state.Auth.passwordReset,\n      resetPasswordSuccess: state.Auth.resetPasswordSuccess,\n    })\n  );\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      username: yup.string().required(t(\"Please enter Username\")),\n    })\n  );\n\n  /*\n   * handle form submission\n   */\n  const onSubmit = (formData: UserData) => {\n    dispatch(forgotPassword(formData[\"username\"]));\n  };\n\n  return (\n    <>\n      <AuthLayout\n        helpText={t(\n          \"Enter your email address and we'll send you an email with instructions to reset your password.\"\n        )}\n        bottomLinks={<BottomLink />}\n      >\n        {resetPasswordSuccess && (\n          <Alert variant=\"success\">{resetPasswordSuccess.message}</Alert>\n        )}\n\n        {error && (\n          <Alert variant=\"danger\" className=\"my-2\">\n            {error}\n          </Alert>\n        )}\n\n        {!passwordReset && (\n          <VerticalForm onSubmit={onSubmit} resolver={schemaResolver}>\n            <FormInput\n              label={t(\"Username\")}\n              type=\"text\"\n              name=\"username\"\n              placeholder={t(\"Enter your username\")}\n              containerClass={\"mb-3\"}\n            />\n\n            <div className=\"d-grid text-center\">\n              <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n                {t(\"Reset Password\")}\n              </Button>\n            </div>\n          </VerticalForm>\n        )}\n      </AuthLayout>\n    </>\n  );\n};\n\nexport default ForgetPassword;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});"],"names":["BottomLink","t","useTranslation","_jsx","Row","className","children","Col","_jsxs","Link","to","ForgetPassword","dispatch","useDispatch","useEffect","resetAuth","loading","passwordReset","resetPasswordSuccess","error","useSelector","state","Auth","user","schemaResolver","yupResolver","yup","shape","username","required","_Fragment","AuthLayout","helpText","bottomLinks","Alert","variant","message","VerticalForm","onSubmit","formData","forgotPassword","resolver","FormInput","label","type","name","placeholder","containerClass","Button","disabled","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","show","transition","Fade","closeLabel","React","uncontrolledProps","ref","_useUncontrolled","useUncontrolled","bsPrefix","closeVariant","onClose","dismissible","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","Transition","alert","_objectSpread","role","undefined","classNames","concat","CloseButton","onClick","unmountOnExit","in","Object","assign","Heading"],"sourceRoot":""}