{"version":3,"file":"static/js/1376.c15965c8.chunk.js","mappings":"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","sources":["layouts/Horizontal/Menu.tsx","layouts/Horizontal/Navbar.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// helpers\nimport { findAllParent, findMenuItem } from \"../../helpers/menu\";\n\n// constants\nimport { MenuItemTypes } from \"../../constants/menu\";\n\n// utils\nimport { splitArray } from \"../../utils/\";\n\n// custom hook\nimport { useViewport } from \"../../hooks/useViewPort\";\n\ninterface MenuItems {\n  item: MenuItemTypes;\n  tag?: string;\n  linkClassName?: string;\n  className?: string;\n  subMenuClassNames?: string;\n  activeMenuItems?: string[];\n  toggleMenu?: (item: any, status: boolean) => void;\n}\n\nconst MenuItemWithChildren = ({\n  item,\n  tag,\n  linkClassName,\n  className,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}: MenuItems) => {\n  const Tag: any = tag;\n  //\n  const { width } = useViewport();\n\n  const [open, setOpen] = useState<boolean>(\n    activeMenuItems!.includes(item.key)\n  );\n\n  const showMenu = width <= 768 && open;\n\n  const hasChild =\n    item.children &&\n    (item.children || []).filter(\n      (child) => child.children?.length && child.children\n    );\n\n  const hasGrandChild =\n    !(hasChild!.length > 0 && hasChild) && item.children!.length >= 15;\n\n  let chunks: any[] = hasGrandChild ? splitArray(item.children!, 7) : [];\n\n  useEffect(() => {\n    setOpen(activeMenuItems!.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  /**\n   * toggles the menu\n   */\n  const toggleMenuItem = (e: any) => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  //\n  return (\n    <Tag\n      className={classNames(\n        className,\n        activeMenuItems!.includes(item.key) ? \"manuitem-active\" : \"\"\n      )}\n    >\n      <Link\n        to=\"/#\"\n        onClick={toggleMenuItem}\n        data-menu-key={item.key}\n        className={classNames(\"menu-link\", linkClassName, {\n          active: activeMenuItems!.includes(item.key),\n        })}\n        // className='menu-link'\n        id={item.key}\n        role=\"button\"\n        data-bs-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded={open}\n      >\n        {item.icon && (\n          <span className=\"menu-icon\">\n            <FeatherIcon icon={item.icon} className=\"hori-icon me-1\" />\n          </span>\n        )}\n        <span className=\"menu-text\"> {item.label} </span>\n        <span className=\"menu-arrow\"></span>\n      </Link>\n\n      {item.children &&\n        (hasGrandChild ? (\n          <div\n            className={classNames(subMenuClassNames, \"collapse collapse-lg\", {\n              show: showMenu,\n            })}\n            aria-labelledby={item.key}\n          >\n            <Row>\n              {(chunks || []).map((child, i) => {\n                return (\n                  <Col key={i} lg={4}>\n                    <MegaMenu item={child} activeMenuItems={activeMenuItems!} />\n                  </Col>\n                );\n              })}\n            </Row>\n          </div>\n        ) : (\n          <ul\n            className={classNames(\"collapse sub-menu\", subMenuClassNames, {\n              show: showMenu,\n            })}\n            aria-labelledby={item.key}\n          >\n            {(item.children || []).map((child, i) => {\n              return (\n                <React.Fragment key={i}>\n                  {child.children ? (\n                    <>\n                      {/* parent */}\n                      <MenuItemWithChildren\n                        item={child}\n                        tag=\"li\"\n                        linkClassName={classNames(\n                          \"dropdown-item\",\n                          activeMenuItems!.includes(child.key)\n                            ? \"menuitem-active\"\n                            : \"\"\n                        )}\n                        activeMenuItems={activeMenuItems}\n                        className=\"menu-item\"\n                        subMenuClassNames=\"dropdown-menu\"\n                        toggleMenu={toggleMenu}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      {/* child */}\n                      <MenuItemLink\n                        item={child}\n                        className={classNames(\"dropdown-item\", {\n                          active: activeMenuItems!.includes(child.key),\n                        })}\n                      />\n                    </>\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </ul>\n        ))}\n    </Tag>\n  );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: MenuItems) => {\n  return (\n    <li className={classNames(\"menu-item\", className)}>\n      <MenuItemLink item={item} className={linkClassName} />\n    </li>\n  );\n};\n\nconst MenuItemLink = ({ item, className }: MenuItems) => {\n  //\n\n  return (\n    <li className={classNames(\"menu-item\", className)}>\n      <Link\n        to={item.url!}\n        target={item.target}\n        className=\"menu-link\"\n        data-menu-key={item.key}\n      >\n        {item.icon && (\n          <span className=\"menu-icon\">\n            <FeatherIcon icon={item.icon} className=\"hori-icon me-1\" />\n          </span>\n        )}\n        <span className=\"menu-text\"> {item.label} </span>\n      </Link>\n    </li>\n  );\n};\n\ninterface MegaMenuProps {\n  item: MenuItemTypes[];\n  activeMenuItems: string[];\n}\n\nconst MegaMenu = ({ item, activeMenuItems }: MegaMenuProps) => {\n  return (\n    <>\n      {item.map((child, i) => {\n        return (\n          <MenuItemLink\n            key={i}\n            item={child}\n            className={classNames(\"dropdown-item\", {\n              active: activeMenuItems!.includes(child.key),\n            })}\n          />\n        );\n      })}\n    </>\n  );\n};\n\n/**\n * Renders the application menu\n */\n\ninterface AppMenuProps {\n  menuItems: MenuItemTypes[];\n}\n\nconst AppMenu = ({ menuItems }: AppMenuProps) => {\n  let location = useLocation();\n  const menuRef = useRef(null);\n\n  const [topnavMenuItems] = useState<MenuItemTypes[]>(menuItems);\n  const [activeMenuItems, setActiveMenuItems] = useState<string[]>([]);\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem: MenuItemTypes, show: boolean) => {\n    if (show)\n      setActiveMenuItems([\n        menuItem[\"key\"],\n        ...findAllParent(topnavMenuItems, menuItem),\n      ]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"main-side-menu\");\n    let matchingMenuItem = null;\n\n    if (div) {\n      let items: any = div.getElementsByTagName(\"a\");\n      for (let i: number = 0; i < items.length; ++i) {\n        let trimmedURL = location?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\");\n        if (trimmedURL === items[i]?.pathname?.replaceAll(process.env.PUBLIC_URL, \"\")) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        //\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(topnavMenuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([\n            activeMt[\"key\"],\n            ...findAllParent(topnavMenuItems, activeMt),\n          ]);\n        }\n      }\n    }\n  }, [location.pathname, topnavMenuItems]);\n\n  useEffect(() => {\n    if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n  }, [activeMenu, topnavMenuItems]);\n\n  return (\n    <>\n      <ul className=\"menu\" ref={menuRef} id=\"main-side-menu\">\n        {(topnavMenuItems || []).map((item, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              {item.children ? (\n                <MenuItemWithChildren\n                  item={item}\n                  tag=\"li\"\n                  className=\"menu-item\"\n                  subMenuClassNames=\"dropdown-menu\"\n                  activeMenuItems={activeMenuItems}\n                  linkClassName=\"nav-link\"\n                  toggleMenu={toggleMenu}\n                />\n              ) : (\n                <MenuItem\n                  item={item}\n                  className={classNames({\n                    \"menuitem-active\": activeMenuItems.includes(item.key),\n                  })}\n                  linkClassName={classNames({\n                    \"menuitem-active\": activeMenuItems.includes(item.key),\n                  })}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default AppMenu;\n","import React from \"react\";\n// import { Collapse } from 'react-bootstrap';\n// import classNames from 'classnames';\n// import SimpleBar from 'simplebar-react';\n\n// helpers\nimport { getHorizontalMenuItems } from \"../../helpers/menu\";\n\n// components\nimport AppMenu from \"./Menu\";\n\ninterface NavbarProps {\n  isMenuOpened?: boolean;\n}\n\nconst Navbar = ({ isMenuOpened }: NavbarProps) => {\n  // change the inputTheme value to light for creative theme\n  // const inputTheme = 'light';\n\n  return (\n    <React.Fragment>\n      <div className=\"app-menu\">\n        <AppMenu menuItems={getHorizontalMenuItems()} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Navbar;\n"],"names":["MenuItemWithChildren","_ref","item","tag","linkClassName","className","subMenuClassNames","activeMenuItems","toggleMenu","Tag","width","useViewport","open","setOpen","useState","includes","key","showMenu","hasChild","children","filter","child","_child$children","length","hasGrandChild","chunks","splitArray","useEffect","_jsxs","classNames","Link","to","onClick","e","preventDefault","status","active","id","role","icon","_jsx","FeatherIcon","label","show","Row","map","i","Col","lg","MegaMenu","React","_Fragment","MenuItemLink","MenuItem","_ref2","_ref3","url","target","_ref4","_ref5","menuItems","location","useLocation","menuRef","useRef","topnavMenuItems","setActiveMenuItems","menuItem","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByTagName","_location$pathname","_items$i","_items$i$pathname","pathname","replaceAll","process","mid","getAttribute","activeMt","findMenuItem","ref","idx","isMenuOpened","AppMenu","getHorizontalMenuItems"],"sourceRoot":""}