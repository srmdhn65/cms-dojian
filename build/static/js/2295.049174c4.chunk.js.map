{"version":3,"file":"static/js/2295.049174c4.chunk.js","mappings":"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","sources":["components/Portlet.tsx","components/StatisticsWidget2.tsx","components/StatisticsWidget3.tsx","components/StatisticsWidget4.tsx","components/ChatList.tsx","components/TodoList.tsx","components/MessageList.tsx","components/MessageItem.tsx","components/Messages.tsx","components/SalesChart.tsx","components/IncomeChart.tsx","components/UsersChart.tsx","components/StatisticsChartWidget.tsx","components/StatisticsChartWidget2.tsx","pages/uikit/Widgets.tsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { Card, Collapse } from \"react-bootstrap\";\n\ninterface PortletProps {\n  className?: string;\n  children?: any;\n  cardTitle?: string;\n  titleClass?: string;\n  headerClass?: string;\n}\n\n/**\n * Portlet\n */\nconst BasicPortlet = (props: PortletProps) => {\n  const children = props[\"children\"] || null;\n  const cardTitle = props[\"cardTitle\"] || \"Card Title\";\n\n  const [collapse, setCollapse] = useState<boolean>(true);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [hidden, setHidden] = useState<boolean>(false);\n\n  /**\n   * Toggle the body\n   */\n  const toggleContent = () => {\n    setCollapse(!collapse);\n  };\n\n  /**\n   * Reload the content\n   */\n  const reloadContent = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 500 + 300 * (Math.random() * 5));\n  };\n\n  /**\n   * remove the portlet\n   */\n  const remove = () => {\n    setHidden(true);\n  };\n\n  return (\n    <>\n      {!hidden ? (\n        <Card className={classNames(props[\"className\"])}>\n          {loading && (\n            <div className=\"card-disabled\">\n              <div className=\"card-portlets-loader\"></div>\n            </div>\n          )}\n\n          <Card.Body>\n            <div className=\"card-widgets\">\n              <Link to=\"#\" onClick={reloadContent}>\n                <i className=\"mdi mdi-refresh\"></i>\n              </Link>\n              <Link to=\"#\" onClick={toggleContent}>\n                <i\n                  className={classNames(\"mdi\", {\n                    \"mdi-minus\": collapse,\n                    \"mdi-plus\": !collapse,\n                  })}\n                ></i>\n              </Link>\n              <Link to=\"#\" onClick={remove}>\n                <i className=\"mdi mdi-close\"></i>\n              </Link>\n            </div>\n\n            <h5 className={classNames(\"mb-0\", props[\"titleClass\"])}>\n              {cardTitle}\n            </h5>\n\n            <Collapse in={collapse}>\n              <div>\n                <div className=\"pt-3\">{children}</div>\n              </div>\n            </Collapse>\n          </Card.Body>\n        </Card>\n      ) : null}\n    </>\n  );\n};\n\nconst PortletWithHeader = (props: PortletProps) => {\n  const children = props[\"children\"] || null;\n  const cardTitle = props[\"cardTitle\"] || \"Card Title\";\n\n  const [collapse, setCollapse] = useState<boolean>(true);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [hidden, setHidden] = useState<boolean>(false);\n\n  /**\n   * Toggle the body\n   */\n  const toggleContent = () => {\n    setCollapse(!collapse);\n  };\n\n  /**\n   * Reload the content\n   */\n  const reloadContent = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 500 + 300 * (Math.random() * 5));\n  };\n\n  /**\n   * remove the portlet\n   */\n  const remove = () => {\n    setHidden(true);\n  };\n\n  return (\n    <>\n      {!hidden ? (\n        <Card className={classNames(props[\"className\"])}>\n          {loading && (\n            <div className=\"card-disabled\">\n              <div className=\"card-portlets-loader\"></div>\n            </div>\n          )}\n\n          <Card.Header className={classNames(props[\"headerClass\"])}>\n            <div className=\"card-widgets\">\n              <Link to=\"#\" onClick={reloadContent}>\n                <i className=\"mdi mdi-refresh\"></i>\n              </Link>\n              <Link to=\"#\" onClick={toggleContent}>\n                <i\n                  className={classNames(\"mdi\", {\n                    \"mdi-minus\": collapse,\n                    \"mdi-plus\": !collapse,\n                  })}\n                ></i>\n              </Link>\n              <Link to=\"#\" onClick={remove}>\n                <i className=\"mdi mdi-close\"></i>\n              </Link>\n            </div>\n\n            <h5 className={classNames(\"mb-0\", props[\"titleClass\"])}>\n              {cardTitle}\n            </h5>\n          </Card.Header>\n          <Collapse in={collapse} className=\"pt-3\">\n            <Card.Body>{children}</Card.Body>\n          </Collapse>\n        </Card>\n      ) : null}\n    </>\n  );\n};\n\nexport { BasicPortlet, PortletWithHeader };\n","import React from \"react\";\nimport { Card, Row, Col, ProgressBar } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport CountUp from \"react-countup\";\n\ninterface StatisticsWidgetProps {\n  variant: string;\n  description: string;\n  stats: string;\n  icon: string;\n  progress: number;\n  counterOptions?: any;\n}\n\nconst StatisticsWidget2 = (props: StatisticsWidgetProps) => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Row>\n            <Col className=\"col-6\">\n              <div\n                className={classNames(\n                  \"avatar-sm\",\n                  \"rounded\",\n                  \"bg-\" + props[\"variant\"]\n                )}\n              >\n                <i\n                  className={classNames(\n                    props[\"icon\"],\n                    \"avatar-title font-22 text-white\"\n                  )}\n                ></i>\n              </div>\n            </Col>\n            <Col className=\"col-6\">\n              <div className=\"text-end\">\n                <h3 className=\"text-dark my-1\">\n                  <span>\n                    <CountUp\n                      duration={1}\n                      end={props[\"stats\"]}\n                      {...props[\"counterOptions\"]}\n                    />\n                  </span>\n                </h3>\n                <p className=\"text-muted mb-1 text-truncate\">\n                  {props[\"description\"]}\n                </p>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"mt-3\">\n            <h6 className=\"text-uppercase\">\n              Target <span className=\"float-end\">{props[\"progress\"]}%</span>\n            </h6>\n\n            <ProgressBar\n              now={props[\"progress\"]}\n              className=\"progress-sm m-0\"\n              label={`${props[\"progress\"]}% Complete`}\n              visuallyHidden\n              variant={props[\"variant\"]}\n            />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsWidget2;\n","import React from \"react\";\nimport { Card, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport CountUp from \"react-countup\";\n\ninterface StatisticsWidgetProps {\n  title: string;\n  stats: string;\n  trend: {\n    label: string;\n    value: string;\n    icon: string;\n    trendStats: string;\n    variant: string;\n  };\n  counterOptions?: any;\n}\n\nconst StatisticsWidget3 = (props: StatisticsWidgetProps) => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <OverlayTrigger\n            placement=\"bottom\"\n            overlay={<Tooltip id={props[\"title\"]}>More Info</Tooltip>}\n          >\n            <i className=\"fa fa-info-circle text-muted float-end\"></i>\n          </OverlayTrigger>\n\n          <h4 className=\"mt-0 font-16\">{props[\"title\"]}</h4>\n          <h2 className=\"text-primary my-3 text-center\">\n            <span>\n              <CountUp\n                duration={1}\n                end={props[\"stats\"]}\n                {...props[\"counterOptions\"]}\n              />\n            </span>\n          </h2>\n          <p className=\"text-muted mb-0\">\n            {props[\"trend\"][\"label\"]}: {props[\"trend\"][\"value\"]}{\" \"}\n            <span className=\"float-end\">\n              <i\n                className={classNames(\n                  \"me-1\",\n                  \"fa\",\n                  props[\"trend\"][\"icon\"],\n                  \"text-\" + props[\"trend\"][\"variant\"]\n                )}\n              ></i>\n              {props[\"trend\"][\"trendStats\"]}\n            </span>\n          </p>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsWidget3;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\ninterface StatisticsWidgetProps {\n  avatar: string;\n  name: string;\n  position: string;\n}\n\nconst StatisticsWidget4 = (props: StatisticsWidgetProps) => {\n  return (\n    <>\n      <Card className=\"widget-rounded-circle\">\n        <Card.Body>\n          <div className=\"row align-items-center\">\n            <div className=\"col-auto\">\n              <div className=\"avatar-lg\">\n                <img\n                  src={props.avatar}\n                  className=\"img-fluid rounded-circle\"\n                  alt=\"\"\n                />\n              </div>\n            </div>\n            <div className=\"col\">\n              <h5 className=\"mb-1 mt-2 font-16\">{props.name}</h5>\n              <p className=\"mb-2 text-muted\">{props.position}</p>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsWidget4;\n","import React, { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n//components\nimport { FormInput } from \"../components/\";\n\nimport profilePic from \"../assets/images/users/user-1.jpg\";\n\n/* Chat Item Avatar */\nconst ChatItemAvatar = ({\n  userAvatar,\n  postedOn,\n}: {\n  userAvatar: string;\n  postedOn: string;\n}) => {\n  return (\n    <>\n      <div className=\"chat-avatar\">\n        <img src={userAvatar} alt={userAvatar} />\n        <i>{postedOn}</i>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item Text */\nconst ChatItemText = ({\n  userName,\n  text,\n}: {\n  userName: string;\n  text: string;\n}) => {\n  return (\n    <>\n      <div className=\"conversation-text\">\n        <div className=\"ctext-wrap\">\n          <i>{userName}</i>\n          <p>{text}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item */\nconst chatItemDefaultProps = {\n  placement: \"\",\n  children: PropTypes.object,\n  className: \"\",\n};\n\nconst ChatItem = ({\n  children,\n  placement,\n  className,\n}: {\n  children: any;\n  placement: string;\n  className: string;\n}) => {\n  return (\n    <li\n      className={classNames(\n        \"clearfix\",\n        { odd: placement === \"left\" },\n        className\n      )}\n    >\n      {children}\n    </li>\n  );\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n\n/**\n * ChatForm\n */\n\ninterface FormValues {\n  newMessage: string;\n}\n\n/**\n * Renders the ChatForm\n */\nconst ChatForm = ({\n  onNewMessagesPosted,\n}: {\n  onNewMessagesPosted: (message: string) => void;\n}) => {\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  const methods = useForm<FormValues>({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Handle valid form submission\n   */\n  const handleValidMessageSubmit: SubmitHandler<FormValues> = (values) => {\n    const message = values[\"newMessage\"];\n    onNewMessagesPosted(message);\n    reset();\n  };\n\n  return (\n    <>\n      <form\n        name=\"chat-form\"\n        id=\"chat-form\"\n        onSubmit={handleSubmit(handleValidMessageSubmit)}\n      >\n        <Row>\n          <Col>\n            <FormInput\n              type=\"text\"\n              name=\"newMessage\"\n              className=\"form-control chat-input\"\n              placeholder=\"Enter your text\"\n              register={register}\n              key=\"newMessage\"\n              errors={errors}\n              control={control}\n            />\n          </Col>\n          <Col className=\"col-auto\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger chat-send waves-effect waves-light\"\n            >\n              Send\n            </button>\n          </Col>\n        </Row>\n      </form>\n    </>\n  );\n};\n\n/**\n * ChatList\n */\n\ninterface MessageItem {\n  id: number;\n  userPic?: string;\n  userName: string;\n  text: string;\n  postedOn: string;\n}\n\ninterface ChatListProps {\n  className?: string;\n  messages: Array<MessageItem>;\n}\n\n/**\n * Renders the ChatList\n */\nconst ChatList = (props: ChatListProps) => {\n  const [messages, setMessages] = useState<Array<MessageItem>>(props.messages);\n\n  /**\n   * Handle new message posted\n   */\n  const handleNewMessagePosted = (message: string) => {\n    // save new message\n    setMessages(\n      messages.concat({\n        id: messages.length + 1,\n        userPic: profilePic,\n        userName: \"Dominic\",\n        text: message,\n        postedOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n      })\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer card-drop p-0 shadow-none\"\n            >\n              <i className=\"mdi mdi-dots-vertical\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>Refresh</Dropdown.Item>\n              <Dropdown.Item>Settings</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4 className=\"header-title mb-3\">Chat</h4>\n\n          <div className=\"chat-conversation\">\n            {/* chat messages */}\n            <SimpleBar style={{ maxHeight: \"370px\", width: \"100%\" }}>\n              <ul className={classNames(\"conversation-list\", props.className)}>\n                {(messages || []).map((message, i) => {\n                  return (\n                    <ChatItem\n                      key={i}\n                      placement={\n                        message.userName === \"Dominic\" ? \"left\" : \"right\"\n                      }\n                    >\n                      {message.userPic && (\n                        <ChatItemAvatar\n                          userAvatar={message.userPic}\n                          postedOn={message.postedOn}\n                        />\n                      )}\n                      <ChatItemText\n                        userName={message.userName}\n                        text={message.text}\n                      />\n                    </ChatItem>\n                  );\n                })}\n              </ul>\n            </SimpleBar>\n\n            {/* chat form */}\n            <ChatForm onNewMessagesPosted={handleNewMessagePosted} />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatList;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Row, Col, Card, Dropdown, Button } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport classNames from \"classnames\";\n\n// components\nimport { FormInput } from \"./\";\n\ninterface TodoListProps {\n  addTodo?: boolean;\n  height?: string;\n}\n\ninterface TodoDataItems {\n  id: number;\n  text: string;\n  done: boolean;\n}\n\nconst TodoList = ({ addTodo, height }: TodoListProps) => {\n  const addTodos = addTodo ? addTodo : false;\n\n  // default todo data\n  const [todoData, setTodoData] = useState<Array<TodoDataItems>>([\n    {\n      id: 1,\n      text: \"Design One page theme\",\n      done: false,\n    },\n    {\n      id: 2,\n      text: \"Build a js based app\",\n      done: true,\n    },\n    {\n      id: 3,\n      text: \"Creating component page\",\n      done: true,\n    },\n    {\n      id: 4,\n      text: \"Testing??\",\n      done: true,\n    },\n    {\n      id: 5,\n      text: \"Hehe!! This looks cool!\",\n      done: false,\n    },\n    {\n      id: 6,\n      text: \"Create new version 3.0\",\n      done: false,\n    },\n    {\n      id: 7,\n      text: \"Build an angular app\",\n      done: true,\n    },\n    {\n      id: 8,\n      text: \"Vue Admin & Dashboard\",\n      done: false,\n    },\n  ]);\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newTodo: yup.string().required(\"Please enter your task name\"),\n    })\n  );\n\n  /*\n   * form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Saves the todo\n   */\n  const saveTodo = (e: any, values: any) => {\n    const newTodo = {\n      id: todoData.length + 1,\n      text: values.target[0].value,\n      done: false,\n    };\n    setTodoData([newTodo, ...todoData]);\n    reset();\n  };\n\n  /**\n   * Returns the remaining todos\n   */\n  const getInprogressTodos = () => {\n    return todoData.filter((item) => item.done === false);\n  };\n\n  /**\n   * Archives the todos\n   */\n  const archiveTodos = () => {\n    setTodoData(todoData.filter((item) => item.done !== true));\n  };\n\n  /**\n   * Toggle the status\n   * @param todoItem todo item\n   */\n  const toggleTodo = (todoItem: TodoDataItems, index: number) => {\n    const newTodoData = (todoData || []).map((todo, i) => {\n      return index === i ? Object.assign(todo, { done: !todoItem.done }) : todo;\n    });\n    setTodoData(newTodoData);\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle as=\"a\" className=\"card-drop cursor-pointer\">\n              <i className=\"mdi mdi-dots-vertical\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>Settings</Dropdown.Item>\n              <Dropdown.Item>Action</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4\n            className={classNames(\"header-title\", addTodos ? \"mb-3\" : \"mb-2\")}\n          >\n            Todo\n          </h4>\n\n          <div className=\"todoapp\">\n            {addTodos ? (\n              <>\n                <Row>\n                  <Col>\n                    <h5 id=\"todo-message\">\n                      <span id=\"todo-remaining\">\n                        {getInprogressTodos().length}\n                      </span>{\" \"}\n                      of <span id=\"todo-total\">{todoData.length}</span>{\" \"}\n                      remaining\n                    </h5>\n                  </Col>\n                  <Col className=\"col-auto\">\n                    <Button\n                      className=\"float-end btn-sm\"\n                      variant=\"light\"\n                      id=\"btn-archive\"\n                      onClick={archiveTodos}\n                    >\n                      Archive\n                    </Button>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <SimpleBar style={{ maxHeight: height }}>\n                      <ul\n                        className=\"list-group list-group-flush todo-list\"\n                        id=\"todo-list\"\n                      >\n                        {(todoData || []).map((todo, index) => {\n                          return (\n                            <li\n                              key={index}\n                              className=\"list-group-item border-0 ps-0\"\n                            >\n                              {todo.done ? (\n                                <div className=\"form-check mb-0\">\n                                  <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input todo-done\"\n                                    id={String(todo.id)}\n                                    checked={todo.done}\n                                    onChange={() => toggleTodo(todo, index)}\n                                  />\n                                  <label\n                                    className=\"form-check-label\"\n                                    htmlFor={String(todo.id)}\n                                  >\n                                    <s>{todo.text}</s>\n                                  </label>\n                                </div>\n                              ) : (\n                                <div className=\"form-check mb-0\">\n                                  <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input todo-done\"\n                                    id={String(todo.id)}\n                                    checked={todo.done}\n                                    onChange={() => toggleTodo(todo, index)}\n                                  />\n                                  <label\n                                    className=\"form-check-label\"\n                                    htmlFor={String(todo.id)}\n                                  >\n                                    {todo.text}\n                                  </label>\n                                </div>\n                              )}\n                            </li>\n                          );\n                        })}\n                      </ul>\n                    </SimpleBar>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <form\n                      name=\"todo-form\"\n                      id=\"todo-form\"\n                      onSubmit={handleSubmit(saveTodo)}\n                      className=\"mt-3\"\n                    >\n                      <Row>\n                        <Col>\n                          <FormInput\n                            type=\"text\"\n                            name=\"newTodo\"\n                            className=\"form-control\"\n                            placeholder=\"Add new todo\"\n                            register={register}\n                            key=\"newTodo\"\n                            errors={errors}\n                            control={control}\n                          />\n                        </Col>\n                        <Col className=\"col-auto\">\n                          <button\n                            type=\"submit\"\n                            className=\"btn btn-primary waves-effect waves-light\"\n                          >\n                            Add\n                          </button>\n                        </Col>\n                      </Row>\n                    </form>\n                  </Col>\n                </Row>\n              </>\n            ) : (\n              <Row>\n                <Col>\n                  <SimpleBar style={{ maxHeight: height }}>\n                    <ul\n                      className=\"list-group list-group-flush todo-list\"\n                      id=\"todo-list\"\n                    >\n                      {(todoData || []).map((todo, index) => {\n                        return (\n                          <li\n                            key={index}\n                            className=\"list-group-item border-0 ps-0\"\n                          >\n                            {todo.done ? (\n                              <div className=\"form-check mb-0\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input todo-done\"\n                                  id={String(todo.id)}\n                                  checked={todo.done}\n                                  onChange={() => toggleTodo(todo, index)}\n                                />\n                                <label\n                                  className=\"form-check-label\"\n                                  htmlFor={String(todo.id)}\n                                >\n                                  <s>{todo.text}</s>\n                                </label>\n                              </div>\n                            ) : (\n                              <div className=\"form-check mb-0\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input todo-done\"\n                                  id={String(todo.id)}\n                                  checked={todo.done}\n                                  onChange={() => toggleTodo(todo, index)}\n                                />\n                                <label\n                                  className=\"form-check-label\"\n                                  htmlFor={String(todo.id)}\n                                >\n                                  {todo.text}\n                                </label>\n                              </div>\n                            )}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </SimpleBar>\n                </Col>\n              </Row>\n            )}\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\nimport classNames from \"classnames\";\n\ninterface MessageListProps {\n  className?: string;\n  children?: Object;\n}\n\n/**\n * MessageList\n */\nconst MessageList = (props: MessageListProps) => {\n  const children = props.children || null;\n\n  return (\n    <SimpleBar style={{ maxHeight: \"407px\" }}>\n      <div className={classNames(\"inbox-widget\", props.className)}>\n        {children}\n      </div>\n    </SimpleBar>\n  );\n};\n\nexport default MessageList;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\ninterface MessageItemProps {\n  className?: string;\n  children?: any;\n}\n\n/**\n * MessageItem\n */\nconst MessageItem = (props: MessageItemProps) => {\n  const children = props.children || null;\n\n  return (\n    <div className={classNames(\"inbox-item\", props.className)}>{children}</div>\n  );\n};\n\nexport default MessageItem;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n//components\nimport MessageList from \"./MessageList\";\nimport MessageItem from \"./MessageItem\";\n\nimport profileImg from \"../assets/images/users/user-2.jpg\";\nimport avatar1 from \"../assets/images/users/user-3.jpg\";\nimport avatar2 from \"../assets/images/users/user-4.jpg\";\nimport avatar3 from \"../assets/images/users/user-5.jpg\";\nimport avatar6 from \"../assets/images/users/user-6.jpg\";\n\nconst Messages = () => {\n  const messages = [\n    {\n      id: 1,\n      avatar: profileImg,\n      sender: \"Tomaslau\",\n      text: \"I've finished it! See you so...\",\n    },\n    {\n      id: 2,\n      avatar: avatar1,\n      sender: \"Stillnotdavid\",\n      text: \"This theme is awesome!\",\n    },\n    {\n      id: 3,\n      avatar: avatar2,\n      sender: \"Kurafire\",\n      text: \"Hyper is awesome theme!\",\n    },\n    {\n      id: 4,\n      avatar: avatar3,\n      sender: \"Shahedk\",\n      text: \"This theme is awesome\",\n    },\n    {\n      id: 5,\n      avatar: avatar6,\n      sender: \"Adhamdannaway\",\n      text: \"Dojian theme is awesome\",\n    },\n    {\n      id: 6,\n      avatar: avatar1,\n      sender: \"Stillnotdavid\",\n      text: \"This theme is awesome!\",\n    },\n    {\n      id: 7,\n      avatar: avatar2,\n      sender: \"Kurafire\",\n      text: \"Nice to meet you\",\n    },\n  ];\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n            <i className=\"mdi mdi-dots-vertical\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Settings</Dropdown.Item>\n            <Dropdown.Item>Action</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h4 className=\"header-title mb-3\">Inbox</h4>\n\n        <MessageList>\n          {(messages || []).map((message, i) => {\n            return (\n              <MessageItem key={i}>\n                <div className=\"inbox-item-img\">\n                  <img src={message.avatar} className=\"rounded-circle\" alt=\"\" />\n                </div>\n                <p className=\"inbox-item-author\">{message.sender}</p>\n                <p className=\"inbox-item-text\">{message.text}</p>\n                <p className=\"inbox-item-date\">\n                  <Link\n                    to=\"#\"\n                    className=\"btn btn-sm btn-link text-info font-13\"\n                  >\n                    {\" \"}\n                    Reply{\" \"}\n                  </Link>\n                </p>\n              </MessageItem>\n            );\n          })}\n        </MessageList>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Messages;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\n// components\nimport { BasicPortlet } from \"./Portlet\";\n\nimport ChartStatistics from \"./ChartStatistics\";\n\nconst SalesChart = () => {\n  const options: ApexOptions = {\n    chart: {\n      type: \"line\",\n      toolbar: {\n        show: false,\n      },\n    },\n    stroke: {\n      curve: \"straight\",\n      width: 1,\n    },\n    fill: {\n      type: \"solid\",\n      opacity: [0.3, 0.3],\n    },\n    colors: [\"#00acc1\", \"#f1556c\"],\n    xaxis: {\n      labels: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    yaxis: {\n      labels: {\n        show: false,\n      },\n    },\n    legend: {\n      show: false,\n    },\n    tooltip: {\n      fixed: {\n        enabled: false,\n      },\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: (seriesName: string) => {\n            return \"\";\n          },\n        },\n      },\n      marker: {\n        show: false,\n      },\n    },\n  };\n\n  const series = [\n    {\n      type: \"area\",\n      data: [0, 23, 43, 35, 44, 45, 56, 37, 40],\n    },\n    {\n      type: \"area\",\n      data: [25, 23, 26, 24, 25, 32, 30, 24, 19],\n    },\n  ];\n\n  return (\n    <>\n      <BasicPortlet cardTitle=\"Lifetime Sales\" titleClass=\"header-title\">\n        <div className=\"text-center\">\n          <Chart\n            options={options}\n            series={series}\n            height={250}\n            className=\"apex-charts mt-0\"\n          />\n\n          <Row className=\"row mt-3\">\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Target\"\n                icon=\"fe-arrow-down\"\n                stats=\"$7.8k\"\n                variant=\"danger\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last week\"\n                icon=\"fe-arrow-up\"\n                stats=\"$1.4k\"\n                variant=\"success\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last Month\"\n                icon=\"fe-arrow-down\"\n                stats=\"$9.8k\"\n                variant=\"danger\"\n              />\n            </Col>\n          </Row>\n        </div>\n      </BasicPortlet>\n    </>\n  );\n};\n\nexport default SalesChart;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\n// components\nimport { BasicPortlet } from \"./Portlet\";\n\nimport ChartStatistics from \"./ChartStatistics\";\n\nconst IncomeChart = () => {\n  const apexOpts: ApexOptions = {\n    chart: {\n      sparkline: {\n        enabled: true,\n      },\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: \"65%\",\n      },\n    },\n    xaxis: {\n      crosshairs: {\n        width: 1,\n      },\n    },\n    stroke: {\n      width: 0,\n      curve: \"smooth\",\n    },\n    colors: [\"#00acc1\"],\n    tooltip: {\n      fixed: {\n        enabled: false,\n      },\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: (seriesName: string) => {\n            return \"\";\n          },\n        },\n      },\n      marker: {\n        show: false,\n      },\n    },\n  };\n\n  const apexData = [\n    {\n      data: [3, 6, 7, 8, 6, 4, 7, 10, 12, 7, 4, 9, 12, 13, 11, 12],\n    },\n  ];\n\n  return (\n    <>\n      <BasicPortlet cardTitle=\"Income Amounts\" titleClass=\"header-title\">\n        <div className=\"text-center\">\n          <Chart\n            options={apexOpts}\n            series={apexData}\n            type=\"bar\"\n            height={250}\n            width={250}\n            className=\"apex-charts mt-0\"\n          />\n          <Row className=\"row mt-3\">\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Target\"\n                icon=\"fe-arrow-up\"\n                stats=\"641\"\n                variant=\"success\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last week\"\n                icon=\"fe-arrow-down\"\n                stats=\"234\"\n                variant=\"danger\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last Month\"\n                icon=\"fe-arrow-up\"\n                stats=\"3201\"\n                variant=\"success\"\n              />\n            </Col>\n          </Row>\n        </div>\n      </BasicPortlet>\n    </>\n  );\n};\n\nexport default IncomeChart;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\n// components\nimport { BasicPortlet } from \"./Portlet\";\n\nimport ChartStatistics from \"./ChartStatistics\";\n\nconst UsersChart = () => {\n  const options: ApexOptions = {\n    chart: {\n      type: \"pie\",\n    },\n    colors: [\"#00acc1\", \"#4b88e4\", \"#e3eaef\", \"#fd7e14\"],\n    legend: {\n      show: false,\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    tooltip: {\n      fixed: {\n        enabled: false,\n      },\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: (seriesName: string) => {\n            return \"\";\n          },\n        },\n      },\n      marker: {\n        show: false,\n      },\n    },\n  };\n\n  const series = [20, 40, 30, 10];\n\n  return (\n    <>\n      <BasicPortlet cardTitle=\"Total Users\" titleClass=\"header-title\">\n        <div className=\"text-center\">\n          <Chart\n            options={options}\n            series={series}\n            height={270}\n            type=\"pie\"\n            className=\"apex-charts mt-0\"\n          />\n\n          <Row className=\"row mt-3\">\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Target\"\n                icon=\"fe-arrow-down\"\n                stats=\"18k\"\n                variant=\"danger\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last week\"\n                icon=\"fe-arrow-up\"\n                stats=\"3.25k\"\n                variant=\"success\"\n              />\n            </Col>\n            <Col className=\"col-4\">\n              <ChartStatistics\n                title=\"Last Month\"\n                icon=\"fe-arrow-up\"\n                stats=\"28k\"\n                variant=\"success\"\n              />\n            </Col>\n          </Row>\n        </div>\n      </BasicPortlet>\n    </>\n  );\n};\n\nexport default UsersChart;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport CountUp from \"react-countup\";\nimport classNames from \"classnames\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\ninterface StatisticsChartWidgetProps {\n  icon: string;\n  variant: string;\n  stats: string;\n  counterOptions?: any;\n  description: string;\n  chartConfig: {\n    apxOptions: ApexOptions;\n    apxSeries: Array<any>;\n    type:\n    | \"area\"\n    | \"line\"\n    | \"bar\"\n    | \"histogram\"\n    | \"pie\"\n    | \"donut\"\n    | \"radialBar\"\n    | \"scatter\"\n    | \"bubble\"\n    | \"heatmap\"\n    | \"treemap\"\n    | \"boxPlot\"\n    | \"candlestick\"\n    | \"radar\"\n    | \"polarArea\"\n    | \"rangeBar\"\n    | undefined;\n    height: number;\n  };\n}\n\nconst StatisticsChartWidget = ({\n  icon,\n  variant,\n  stats,\n  counterOptions,\n  description,\n  chartConfig,\n}: StatisticsChartWidgetProps) => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Row>\n            <Col>\n              <div\n                className={classNames(\n                  \"avatar-sm\",\n                  \"rounded-circle\",\n                  \"bg-\" + variant\n                )}\n              >\n                <i\n                  className={classNames(\n                    icon,\n                    \"avatar-title\",\n                    \"font-22\",\n                    \"text-white\"\n                  )}\n                ></i>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"text-end\">\n                <h3 className=\"my-1\">\n                  <span>\n                    <CountUp duration={1} end={stats} {...counterOptions} />\n                  </span>\n                </h3>\n                <p className=\"text-muted mb-1 text-truncate\">{description}</p>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"mt-4\">\n            {chartConfig && (\n              <Chart\n                options={chartConfig[\"apxOptions\"]}\n                series={chartConfig[\"apxSeries\"]}\n                // type={chartConfig[\"\"]}\n                height={chartConfig[\"height\"]}\n                className=\"apex-charts mt-0\"\n              />\n            )}\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsChartWidget;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\n// components\nimport ChartStatistics from \"./ChartStatistics\";\n\ninterface StatisticsChartWidgetProps {\n  title: string;\n  color: string;\n  data: number;\n  totalSales: string;\n  target: string;\n  lastWeek: string;\n  lastMonth: string;\n}\n\nconst StatisticsChartWidget2 = ({\n  title,\n  color,\n  data,\n  totalSales,\n  target,\n  lastWeek,\n  lastMonth,\n}: StatisticsChartWidgetProps) => {\n  const apexOpts: ApexOptions = {\n    chart: {\n      type: \"radialBar\",\n    },\n    plotOptions: {\n      radialBar: {\n        hollow: {\n          size: \"67%\",\n        },\n        dataLabels: {\n          name: {\n            show: false,\n          },\n          value: {\n            show: true,\n            fontSize: \"24px\",\n            offsetY: 12,\n            formatter: (val: number) => {\n              return String(val);\n            },\n          },\n        },\n      },\n    },\n    colors: [color],\n    stroke: {\n      lineCap: \"round\",\n    },\n  };\n\n  const apexData = [data];\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title mb-2\">{title}</h4>\n\n          <div className=\"widget-chart text-center\" dir=\"ltr\">\n            <Chart\n              options={apexOpts}\n              series={apexData}\n              type=\"radialBar\"\n              height={180}\n              className=\"apex-charts mt-0\"\n            />\n\n            <h5 className=\"text-muted mt-0\">Total sales made today</h5>\n            <h2>{totalSales}</h2>\n\n            <Row className=\"row mt-3\">\n              <Col className=\"col-4\">\n                <ChartStatistics\n                  title=\"Target\"\n                  stats={target}\n                  variant=\"danger\"\n                />\n              </Col>\n              <Col className=\"col-4\">\n                <ChartStatistics\n                  title=\"Last week\"\n                  stats={lastWeek}\n                  variant=\"success\"\n                />\n              </Col>\n              <Col className=\"col-4\">\n                <ChartStatistics\n                  title=\"Last Month\"\n                  stats={lastMonth}\n                  variant=\"danger\"\n                />\n              </Col>\n            </Row>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsChartWidget2;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport CountUp from \"react-countup\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport StatisticsWidget from \"../../components/StatisticsWidget\";\nimport StatisticsWidget2 from \"../../components/StatisticsWidget2\";\nimport StatisticsWidget3 from \"../../components/StatisticsWidget3\";\nimport StatisticsWidget4 from \"../../components/StatisticsWidget4\";\nimport ChatList from \"../../components/ChatList\";\nimport TodoList from \"../../components/TodoList\";\nimport Messages from \"../../components/Messages\";\nimport SalesChart from \"../../components/SalesChart\";\nimport IncomeChart from \"../../components/IncomeChart\";\nimport UsersChart from \"../../components/UsersChart\";\nimport StatisticsChartWidget from \"../../components/StatisticsChartWidget\";\nimport StatisticsChartWidget2 from \"../../components/StatisticsChartWidget2\";\n\nimport profilePic from \"../../assets/images/users/user-1.jpg\";\nimport profilePic2 from \"../../assets/images/users/user-5.jpg\";\n\nimport avatar1 from \"../../assets/images/users/user-3.jpg\";\nimport avatar2 from \"../../assets/images/users/user-4.jpg\";\nimport avatar3 from \"../../assets/images/users/user-5.jpg\";\nimport avatar4 from \"../../assets/images/users/user-6.jpg\";\n\nconst Widgets = () => {\n  const chatMessages = [\n    {\n      id: 1,\n      userPic: profilePic2,\n      userName: \"Geneva\",\n      text: \"Hello!\",\n      postedOn: \"10:00\",\n    },\n    {\n      id: 2,\n      userPic: profilePic,\n      userName: \"Dominic\",\n      text: \"Hi, How are you? What about our next meeting?\",\n      postedOn: \"10:01\",\n    },\n    {\n      id: 3,\n      userPic: profilePic2,\n      userName: \"Geneva\",\n      text: \"Yeah everything is fine\",\n      postedOn: \"10:02\",\n    },\n    {\n      id: 4,\n      userPic: profilePic,\n      userName: \"Dominic\",\n      text: \"Wow that's great!\",\n      postedOn: \"10:03\",\n    },\n    {\n      id: 5,\n      userPic: profilePic2,\n      userName: \"Geneva\",\n      text: \"Cool!\",\n      postedOn: \"10:03\",\n    },\n  ];\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Components\", path: \"/ui/widgets\" },\n          { label: \"Widgets\", path: \"/ui/widgets\", active: true },\n        ]}\n        title={\"Widgets\"}\n      />\n\n      {/* StatisticsWidget */}\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"primary\"\n            counterOptions={{\n              prefix: \"$\",\n            }}\n            description=\"Total Revenue\"\n            stats=\"58947\"\n            icon=\"fe-heart\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"success\"\n            description=\"Today's Sales\"\n            stats=\"127\"\n            icon=\"fe-shopping-cart\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"info\"\n            description=\"Conversion\"\n            stats=\"0.58\"\n            counterOptions={{\n              suffix: \"%\",\n              decimals: 2,\n            }}\n            icon=\"fe-bar-chart-line-\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"warning\"\n            description=\"Today's Visits\"\n            stats=\"78412\"\n            icon=\"fe-eye\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"danger\"\n            description=\"Available Stores\"\n            stats=\"178\"\n            icon=\"fe-shopping-bag\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"secondary\"\n            description=\"Gitlab Commits\"\n            stats=\"289\"\n            icon=\"fe-gitlab\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"blue\"\n            description=\"Free Gifts\"\n            stats=\"1021\"\n            icon=\"fe-gift\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"pink\"\n            description=\"Paid Users\"\n            stats=\"154\"\n            counterOptions={{\n              suffix: \"k\",\n            }}\n            icon=\"fe-user\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card className=\"widget-inline\">\n            <Card.Body>\n              <Row>\n                <Col sm={6} xl={3}>\n                  <div className=\"p-2 text-center\">\n                    <i className=\"mdi mdi-cart-plus text-primary mdi-24px\"></i>\n                    <h3>\n                      <span>\n                        <CountUp duration={1} end={8954} />\n                      </span>\n                    </h3>\n                    <p className=\"text-muted font-15 mb-0\">Lifetime Sales</p>\n                  </div>\n                </Col>\n                <Col sm={6} xl={3}>\n                  <div className=\"p-2 text-center\">\n                    <i className=\"mdi mdi-currency-usd text-success mdi-24px\"></i>\n                    <h3>\n                      $\n                      <span>\n                        <CountUp duration={1} end={7841} />\n                      </span>\n                    </h3>\n                    <p className=\"text-muted font-15 mb-0\">Income Amounts</p>\n                  </div>\n                </Col>\n                <Col sm={6} xl={3}>\n                  <div className=\"p-2 text-center\">\n                    <i className=\"mdi mdi-account-group text-danger mdi-24px\"></i>\n                    <h3>\n                      <span>\n                        <CountUp duration={1} end={6521} />\n                      </span>\n                    </h3>\n                    <p className=\"text-muted font-15 mb-0\">Total Users</p>\n                  </div>\n                </Col>\n                <Col sm={6} xl={3}>\n                  <div className=\"p-2 text-center\">\n                    <i className=\"mdi mdi-eye-outline text-blue mdi-24px\"></i>\n                    <h3>\n                      <span data-plugin=\"counterup\">\n                        <CountUp duration={1} end={325} />\n                      </span>\n                      k\n                    </h3>\n                    <p className=\"text-muted font-15 mb-0\">Total Visits</p>\n                  </div>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* StatisticsWidget3 */}\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Income status\"\n            stats=\"31570\"\n            trend={{\n              label: \"Total income\",\n              value: \"$22506\",\n              icon: \"fa-caret-up\",\n              variant: \"success\",\n              trendStats: \"10.25%\",\n            }}\n            counterOptions={{\n              prefix: \"$\",\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Sales Status\"\n            stats=\"683\"\n            trend={{\n              label: \"Total sales\",\n              value: \"2398\",\n              icon: \"fa-caret-down\",\n              variant: \"danger\",\n              trendStats: \"7.85%\",\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Recent Users\"\n            stats=\"3.2\"\n            trend={{\n              label: \"Total users\",\n              value: \"121 M\",\n              icon: \"fa-caret-up\",\n              variant: \"success\",\n              trendStats: \"3.64%\",\n            }}\n            counterOptions={{\n              suffix: \"M\",\n              decimals: 1,\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget3\n            title=\"Total Revenue\"\n            stats=\"68541\"\n            trend={{\n              label: \"Total revenue\",\n              value: \"$1.2 M\",\n              icon: \"fa-caret-up\",\n              variant: \"success\",\n              trendStats: \"17.48%\",\n            }}\n            counterOptions={{\n              prefix: \"$\",\n            }}\n          />\n        </Col>\n      </Row>\n      {/* StatisticsWidget2 */}\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"blue\"\n            description=\"Income status\"\n            stats=\"12145\"\n            icon=\"fe-aperture\"\n            progress={60}\n            counterOptions={{\n              prefix: \"$\",\n            }}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"success\"\n            description=\"January's Sales\"\n            stats=\"1576\"\n            icon=\"fe-shopping-cart\"\n            progress={49}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"warning\"\n            description=\"Payouts\"\n            stats=\"8947\"\n            icon=\"fe-bar-chart-2\"\n            progress={18}\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"info\"\n            description=\"Available Stores\"\n            stats=\"178\"\n            icon=\"fe-cpu\"\n            progress={74}\n          />\n        </Col>\n      </Row>\n      {/* StatisticsWidget4 */}\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget4\n            avatar={avatar1}\n            name=\"Thelma Fridley\"\n            position=\"Admin User\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget4\n            avatar={avatar2}\n            name=\"Chandler Hervieux\"\n            position=\"Manager\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget4\n            avatar={avatar3}\n            name=\"Percy Demers\"\n            position=\"Director\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget4\n            avatar={avatar4}\n            name=\"Antoine Masson\"\n            position=\"Premium User\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h4 className=\"mb-4\">Other Widgets</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col xl={4}>\n          <Messages />\n        </Col>\n        <Col xl={4}>\n          <ChatList messages={chatMessages} />\n        </Col>\n        <Col xl={4}>\n          <TodoList addTodo={true} height={\"310px\"} />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <h4 className=\"mb-4\">Chart Widgets</h4>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4}>\n          <StatisticsChartWidget\n            icon=\"fe-aperture\"\n            variant=\"warning\"\n            stats=\"8145\"\n            description=\"Income Status\"\n            counterOptions={{\n              prefix: \"$\",\n            }}\n            chartConfig={{\n              apxOptions: {\n                chart: {\n                  sparkline: {\n                    enabled: true,\n                  },\n                },\n                plotOptions: {\n                  bar: {\n                    columnWidth: \"95%\",\n                  },\n                },\n                xaxis: {\n                  crosshairs: {\n                    width: 1,\n                  },\n                },\n                stroke: {\n                  width: 0,\n                  curve: \"smooth\",\n                },\n                fill: {\n                  colors: [\"#f7b84b\", \"#ebeff2\"],\n                },\n                tooltip: {\n                  enabled: false,\n                },\n              },\n              apxSeries: [\n                { data: [5, 9, 5, 7, 5, 9, 2, 3, 2, 7, 5, 9, 5, 7] },\n                { data: [3, 6, 9, 3, 2, 7, 1, 5, 9, 2, 3, 6, 9] },\n              ],\n              type: \"bar\",\n              height: 55,\n            }}\n          />\n        </Col>\n        <Col xl={4}>\n          <StatisticsChartWidget\n            icon=\"fe-shopping-bag\"\n            variant=\"blue\"\n            stats=\"367\"\n            description=\"Sales Status\"\n            chartConfig={{\n              apxOptions: {\n                chart: {\n                  type: \"line\",\n                  height: 50,\n                  width: \"100%\",\n                  toolbar: {\n                    show: false,\n                  },\n                  sparkline: {\n                    enabled: true,\n                  },\n                },\n                stroke: {\n                  curve: \"straight\",\n                  width: 1,\n                },\n                colors: [\"#4a81d4\"],\n                xaxis: {\n                  labels: {\n                    show: false,\n                  },\n                  axisTicks: {\n                    show: false,\n                  },\n                },\n                yaxis: {\n                  labels: {\n                    show: false,\n                  },\n                },\n                legend: {\n                  show: false,\n                },\n                tooltip: {\n                  enabled: false,\n                },\n              },\n              apxSeries: [{ data: [5, 3, 9, 6, 5, 9, 7, 3, 5, 2] }],\n              type: \"line\",\n              height: 50,\n            }}\n          />\n        </Col>\n        <Col xl={4}>\n          <StatisticsChartWidget\n            icon=\"fe-users\"\n            variant=\"success\"\n            stats=\"7204\"\n            description=\"Recent Users\"\n            chartConfig={{\n              apxOptions: {\n                chart: {\n                  type: \"area\",\n                  height: 50,\n                  width: \"100%\",\n                  toolbar: {\n                    show: false,\n                  },\n                  sparkline: {\n                    enabled: true,\n                  },\n                },\n                stroke: {\n                  curve: \"straight\",\n                  width: 1,\n                },\n                fill: {\n                  type: \"solid\",\n                },\n                colors: [\"#1abc9c\"],\n                xaxis: {\n                  labels: {\n                    show: false,\n                  },\n                  axisTicks: {\n                    show: false,\n                  },\n                },\n                yaxis: {\n                  labels: {\n                    show: false,\n                  },\n                },\n                legend: {\n                  show: false,\n                },\n                tooltip: {\n                  enabled: false,\n                },\n              },\n              apxSeries: [{ data: [3, 5, 2, 9, 7, 2, 5, 3, 9, 6, 5, 9, 7] }],\n              type: \"area\",\n              height: 50,\n            }}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4}>\n          <StatisticsChartWidget2\n            title={\"Total Revenue\"}\n            color={\"#f1556c\"}\n            data={60}\n            totalSales={\"$178\"}\n            target={\"$12k\"}\n            lastWeek={\"$2487\"}\n            lastMonth={\"$14.5k\"}\n          />\n        </Col>\n        <Col xl={4}>\n          <StatisticsChartWidget2\n            title={\"Sales Status\"}\n            color={\"#6658dd\"}\n            data={37}\n            totalSales={\"29\"}\n            target={\"480\"}\n            lastWeek={\"136\"}\n            lastMonth={\"514\"}\n          />\n        </Col>\n        <Col xl={4}>\n          <StatisticsChartWidget2\n            title={\"Recent Users\"}\n            color={\"#1abc9c\"}\n            data={81}\n            totalSales={\"72\"}\n            target={\"8k\"}\n            lastWeek={\"2.5k\"}\n            lastMonth={\"10.2k\"}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4}>\n          <SalesChart />\n        </Col>\n        <Col xl={4}>\n          <IncomeChart />\n        </Col>\n        <Col xl={4}>\n          <UsersChart />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Widgets;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"],"names":["BasicPortlet","props","children","cardTitle","collapse","setCollapse","useState","loading","setLoading","hidden","setHidden","_jsx","_Fragment","_jsxs","Card","className","classNames","Body","Link","to","onClick","reloadContent","setTimeout","Math","random","toggleContent","remove","Collapse","in","PortletWithHeader","Header","Row","Col","CountUp","_objectSpread","duration","end","ProgressBar","now","label","concat","visuallyHidden","variant","OverlayTrigger","placement","overlay","Tooltip","id","src","avatar","alt","name","position","ChatItemAvatar","_ref","userAvatar","postedOn","ChatItemText","_ref2","userName","text","chatItemDefaultProps","PropTypes","ChatItem","_ref3","odd","defaultProps","ChatForm","_ref4","onNewMessagesPosted","schemaResolver","yupResolver","yup","shape","newMessage","required","methods","useForm","resolver","handleSubmit","register","control","formState","errors","reset","onSubmit","values","message","FormInput","type","placeholder","messages","setMessages","Dropdown","align","Toggle","as","Menu","Item","SimpleBar","style","maxHeight","width","map","i","userPic","length","profilePic","Date","getHours","getMinutes","addTodo","height","addTodos","todoData","setTodoData","done","newTodo","toggleTodo","todoItem","index","newTodoData","todo","Object","assign","filter","item","Button","archiveTodos","String","checked","onChange","htmlFor","saveTodo","e","target","value","Messages","profileImg","sender","avatar1","avatar2","avatar3","avatar6","MessageList","MessageItem","SalesChart","titleClass","Chart","options","chart","toolbar","show","stroke","curve","fill","opacity","colors","xaxis","labels","axisTicks","yaxis","legend","tooltip","fixed","enabled","x","y","title","formatter","seriesName","marker","series","data","ChartStatistics","icon","stats","IncomeChart","sparkline","plotOptions","bar","columnWidth","crosshairs","UsersChart","dataLabels","counterOptions","description","chartConfig","color","totalSales","lastWeek","lastMonth","apexOpts","radialBar","hollow","size","fontSize","offsetY","val","lineCap","apexData","dir","Widgets","chatMessages","profilePic2","React","PageTitle","breadCrumbItems","path","active","md","xl","StatisticsWidget","prefix","suffix","decimals","sm","StatisticsWidget3","trend","trendStats","StatisticsWidget2","progress","StatisticsWidget4","avatar4","ChatList","TodoList","StatisticsChartWidget","apxOptions","apxSeries","StatisticsChartWidget2","_len","arguments","funcs","Array","_key","f","reduce","acc","Error","_len2","args","_key2","apply","this","MARGINS","getDefaultDimensionValue","dimension","elem","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","ref","onEnter","onEntering","onEntered","onExit","onExiting","_objectWithoutProperties","_excluded","computedDimension","handleEnter","useMemo","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","addEndListener","transitionEndListener","role","childRef","state","innerProps","func","child","forEach","getPercentage","min","max","percentage","round","renderProgressBar","striped","animated","bsPrefix","isChild","_excluded2","useBootstrapPrefix","wrapperProps","_excluded3","cloneElement","displayName"],"sourceRoot":""}