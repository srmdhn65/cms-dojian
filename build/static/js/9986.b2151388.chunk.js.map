{"version":3,"file":"static/js/9986.b2151388.chunk.js","mappings":"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","sources":["components/Chats.tsx","components/Tasks.tsx","components/ThemeCustomizer/LayoutMode.tsx","components/ThemeCustomizer/LayoutTypes.tsx","components/ThemeCustomizer/LayoutColor.tsx","components/ThemeCustomizer/LayoutWidth.tsx","components/ThemeCustomizer/MenuPositions.tsx","components/ThemeCustomizer/LeftSideBarTheme.tsx","components/ThemeCustomizer/LeftSideBarType.tsx","components/ThemeCustomizer/TwoToneIcons.tsx","components/ThemeCustomizer/SidebarUserInfo.tsx","components/ThemeCustomizer/TopbarTheme.tsx","components/ThemeCustomizer/TwoColumnTheme.tsx","components/ThemeCustomizer/index.tsx","layouts/RightSidebar/data.tsx","layouts/RightSidebar/index.tsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/Offcanvas.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// dummy data\nimport { ChatItemTypes } from \"../layouts/RightSidebar/data\";\n\ninterface ChatsProps {\n  chats: ChatItemTypes[];\n}\n\nconst Chats = ({ chats }: ChatsProps) => {\n  return (\n    <>\n      <form className=\"search-bar p-3\">\n        <div className=\"position-relative\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"Search...\" />\n          <span className=\"mdi mdi-magnify\"></span>\n        </div>\n      </form>\n\n      <h6 className=\"fw-medium px-3 mt-2 text-uppercase\">Group Chats</h6>\n\n      <div className=\"p-2\">\n        <Link to=\"#\" className=\"text-reset notification-item ps-3 mb-2 d-block\">\n          <i className=\"mdi mdi-checkbox-blank-circle-outline me-1 text-success\"></i>\n          <span className=\"mb-0 mt-1\">App Development</span>\n        </Link>\n        <Link to=\"#\" className=\"text-reset notification-item ps-3 mb-2 d-block\">\n          <i className=\"mdi mdi-checkbox-blank-circle-outline me-1 text-warning\"></i>\n          <span className=\"mb-0 mt-1\">Office Work</span>\n        </Link>\n        <Link to=\"#\" className=\"text-reset notification-item ps-3 mb-2 d-block\">\n          <i className=\"mdi mdi-checkbox-blank-circle-outline me-1 text-danger\"></i>\n          <span className=\"mb-0 mt-1\">Personal Group</span>\n        </Link>\n        <Link to=\"#\" className=\"text-reset notification-item ps-3 d-block\">\n          <i className=\"mdi mdi-checkbox-blank-circle-outline me-1\"></i>\n          <span className=\"mb-0 mt-1\">Freelance</span>\n        </Link>\n      </div>\n\n      <h6 className=\"fw-medium px-3 mt-2 text-uppercase\">\n        Favourites\n        <Link to=\"#\" className=\"font-18 text-danger\">\n          <i className=\"float-end mdi mdi-plus-circle\"></i>\n        </Link>\n      </h6>\n\n      <div className=\"p-2\">\n        {(\n          chats.filter((e: ChatItemTypes) => e.group === \"favourites\") || []\n        ).map((item, index) => {\n          return (\n            <Link to=\"#\" key={index} className=\"text-reset notification-item\">\n              <div className=\"d-flex align-items-start noti-user-item\">\n                <div className=\"position-relative me-2\">\n                  <img\n                    src={item.avatar}\n                    className=\"rounded-circle avatar-sm\"\n                    alt=\"\"\n                  />\n                  <i\n                    className={classNames(\n                      \"mdi mdi-circle user-status\",\n                      item.userStatus\n                    )}\n                  ></i>\n                </div>\n                <div className=\"overflow-hidden\">\n                  <h6 className=\"mt-0 mb-1 font-14\">{item.userName}</h6>\n                  <div className=\"font-13 text-muted\">\n                    <p className=\"mb-0 text-truncate\">{item.message}</p>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n\n      <h6 className=\"fw-medium px-3 mt-2 text-uppercase\">\n        Other Chats\n        <Link to=\"#\" className=\"font-18 text-danger\">\n          <i className=\"float-end mdi mdi-plus-circle\"></i>\n        </Link>\n      </h6>\n\n      <div className=\"p-2 pb-4\">\n        {(chats.filter((e: ChatItemTypes) => e.group === \"other\") || []).map(\n          (item, index) => {\n            return (\n              <Link to=\"#\" key={index} className=\"text-reset notification-item\">\n                <div className=\"d-flex align-items-start noti-user-item\">\n                  <div className=\"position-relative me-2\">\n                    <img\n                      src={item.avatar}\n                      className=\"rounded-circle avatar-sm\"\n                      alt=\"\"\n                    />\n                    <i\n                      className={classNames(\n                        \"mdi mdi-circle user-status\",\n                        item.userStatus\n                      )}\n                    ></i>\n                  </div>\n                  <div className=\"overflow-hidden\">\n                    <h6 className=\"mt-0 mb-1 font-14\">{item.userName}</h6>\n                    <div className=\"font-13 text-muted\">\n                      <p className=\"mb-0 text-truncate\">{item.message}</p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            );\n          }\n        )}\n\n        <div className=\"text-center mt-3\">\n          <Link to=\"#\" className=\"btn btn-sm btn-white\">\n            <i className=\"mdi mdi-spin mdi-loading me-2\"></i>\n            Load more\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Chats;\n","import React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// dummy data\nimport { TasksItemTypes } from \"../layouts/RightSidebar/data\";\n\nconst Tasks = ({ tasks }: { tasks: TasksItemTypes[] }) => {\n  const workingTasks = tasks.filter((task) => task.stage === \"working\");\n  const upcomingTasks = tasks.filter((task) => task.stage === \"upcoming\");\n\n  return (\n    <>\n      <h6 className=\"fw-medium p-3 m-0 text-uppercase\">Working Tasks</h6>\n      <div className=\"px-2\">\n        {(workingTasks || []).map((item, index) => {\n          return (\n            <Link\n              key={index}\n              to=\"#\"\n              className=\"text-reset item-hovered d-block p-2\"\n            >\n              <p className=\"text-muted mb-0\">\n                {item.task}\n                <span className=\"float-end\">{item.progress}%</span>\n              </p>\n              <ProgressBar\n                now={item.progress}\n                variant={item.variant}\n                className=\"mt-2\"\n                style={{ height: \"4px\" }}\n              />\n            </Link>\n          );\n        })}\n      </div>\n\n      <h6 className=\"fw-medium px-3 mb-0 mt-4 text-uppercase\">\n        Upcoming Tasks\n      </h6>\n      <div className=\"p-2\">\n        {(upcomingTasks || []).map((item, index) => {\n          return (\n            <Link\n              key={index}\n              to=\"#\"\n              className=\"text-reset item-hovered d-block p-2\"\n            >\n              <p className=\"text-muted mb-0\">\n                {item.task}\n                <span className=\"float-end\">{item.progress}%</span>\n              </p>\n              <ProgressBar\n                now={item.progress}\n                variant={item.variant}\n                className=\"mt-2\"\n                style={{ height: \"4px\" }}\n              />\n            </Link>\n          );\n        })}\n      </div>\n\n      <div className=\"p-3 mt-2 d-grid\">\n        <Link to=\"#\" className=\"btn btn-success waves-effect waves-light\">\n          Create Task\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Tasks;\n","import { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LayoutTypesProps {\n  changeLayoutMode: (value: any) => void;\n  layoutMode: string;\n  layoutConstants: typeof layoutConstants.LayoutMode;\n}\n\nconst LayoutMode = ({\n  changeLayoutMode,\n  layoutMode,\n  layoutConstants,\n}: LayoutTypesProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Layout Mode</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutMode(e.target.value)}\n          name=\"layout-mode\"\n          value={layoutConstants.LAYOUT_DEFAULT}\n          id=\"default-layout-mode\"\n          checked={layoutMode === layoutConstants.LAYOUT_DEFAULT}\n        />\n        <Form.Check.Label htmlFor=\"default-layout-mode\">\n          Default Layout\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutMode(e.target.value)}\n          name=\"layout-mode\"\n          value={layoutConstants.LAYOUT_DETACHED}\n          id=\"detached-layout-mode\"\n          checked={layoutMode === layoutConstants.LAYOUT_DETACHED}\n        />\n        <Form.Check.Label htmlFor=\"detached-layout-mode\">\n          Detached Layout\n        </Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutMode;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LayoutTypesProps {\n  changeLayoutType: (value: any) => void;\n  layoutType: string;\n  layoutConstants: typeof layoutConstants.LayoutTypes;\n}\n\nconst LayoutTypes = ({\n  changeLayoutType,\n  layoutType,\n  layoutConstants,\n}: LayoutTypesProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Layout</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_VERTICAL}\n          id=\"vertical-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_VERTICAL}\n        />\n        <Form.Check.Label htmlFor=\"vertical-layout\">\n          Vertical Layout\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_HORIZONTAL}\n          id=\"horizontal-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_HORIZONTAL}\n        />\n        <Form.Check.Label htmlFor=\"horizontal-layout\">\n          Horizontal Layout\n        </Form.Check.Label>\n      </Form.Check>\n\n      {/* <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_DETACHED}\n                    id=\"detached-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_DETACHED}\n                />\n                <Form.Check.Label htmlFor=\"detached-layout\">Detached Layout</Form.Check.Label>\n            </Form.Check> */}\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          onChange={(e) => changeLayoutType(e.target.value)}\n          name=\"layout-type\"\n          value={layoutConstants.LAYOUT_TWO_COLUMN}\n          id=\"two-column-layout\"\n          checked={layoutType === layoutConstants.LAYOUT_TWO_COLUMN}\n        />\n        <Form.Check.Label htmlFor=\"two-column-layout\">\n          Two Column Layout\n        </Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutTypes;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LayoutColorProps {\n  changeLayoutColorScheme: (value: any) => void;\n  layoutColor: string;\n  layoutConstants: typeof layoutConstants.LayoutColor;\n}\n\nconst LayoutColor = ({\n  changeLayoutColorScheme,\n  layoutColor,\n  layoutConstants,\n}: LayoutColorProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Color Scheme</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"layout-color\"\n          id=\"light-mode-check\"\n          value={layoutConstants.LAYOUT_COLOR_LIGHT}\n          onChange={(e) => changeLayoutColorScheme(e.target.value)}\n          checked={layoutColor === layoutConstants.LAYOUT_COLOR_LIGHT}\n        />\n        <Form.Check.Label htmlFor=\"light-mode-check\">\n          Light Mode\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"layout-color\"\n          id=\"dark-mode-check\"\n          value={layoutConstants.LAYOUT_COLOR_DARK}\n          onChange={(e) => changeLayoutColorScheme(e.target.value)}\n          checked={layoutColor === layoutConstants.LAYOUT_COLOR_DARK}\n        />\n        <Form.Check.Label htmlFor=\"dark-mode-check\">Dark Mode</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutColor;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LayoutWidthProps {\n  changeWidthMode: (value: any) => void;\n  layoutWidth: string;\n  layoutConstants: typeof layoutConstants.LayoutWidth;\n}\n\nconst LayoutWidth = ({\n  changeWidthMode,\n  layoutWidth,\n  layoutConstants,\n}: LayoutWidthProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Width</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"width\"\n          id=\"fluid-check\"\n          value={layoutConstants.LAYOUT_WIDTH_FLUID}\n          onChange={(e) => changeWidthMode(e.target.value)}\n          checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_FLUID}\n        />\n        <Form.Check.Label htmlFor=\"fluid-check\">Fluid</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"width\"\n          id=\"boxed-check\"\n          value={layoutConstants.LAYOUT_WIDTH_BOXED}\n          onChange={(e) => changeWidthMode(e.target.value)}\n          checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_BOXED}\n        />\n        <Form.Check.Label htmlFor=\"boxed-check\">Boxed</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LayoutWidth;\n","import React from \"react\";\n// import { Form } from 'react-bootstrap';\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface MenuPositionsProps {\n  changeMenuPosition: (value: any) => void;\n  menuPosition: string;\n  layoutConstants: typeof layoutConstants.MenuPositions;\n}\n\nconst MenuPositions = ({\n  changeMenuPosition,\n  menuPosition,\n  layoutConstants,\n}: MenuPositionsProps) => {\n  return (\n    <>\n      {/* <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Menus (Leftsidebar and Topbar) Position</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"menus-position\"\n                    id=\"fixed-check\"\n                    value={layoutConstants.MENU_POSITION_FIXED}\n                    onChange={(e) => changeMenuPosition(e.target.value)}\n                    checked={menuPosition === layoutConstants.MENU_POSITION_FIXED}\n                />\n                <Form.Check.Label htmlFor=\"fixed-check\">Fixed</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"menus-position\"\n                    id=\"scrollable-check\"\n                    value={layoutConstants.MENU_POSITION_SCROLLABLE}\n                    onChange={(e) => changeMenuPosition(e.target.value)}\n                    checked={menuPosition === layoutConstants.MENU_POSITION_SCROLLABLE}\n                />\n                <Form.Check.Label htmlFor=\"scrollable-check\">Scrollable</Form.Check.Label>\n            </Form.Check> */}\n    </>\n  );\n};\n\nexport default MenuPositions;\n","import { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LeftSideBarThemeProps {\n  changeLeftSidebarTheme: (value: any) => void;\n  leftSideBarTheme: string;\n  layoutConstants: typeof layoutConstants.SideBarTheme;\n}\n\nconst LeftSideBarTheme = ({\n  changeLeftSidebarTheme,\n  leftSideBarTheme,\n  layoutConstants,\n}: LeftSideBarThemeProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Left Sidebar Color</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"light-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={\n            leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT\n          }\n        />\n        <Form.Check.Label htmlFor=\"light-check\">Light</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"dark-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n        />\n        <Form.Check.Label htmlFor=\"dark-check\">Dark</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"brand-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_BRAND}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={\n            leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_BRAND\n          }\n        />\n        <Form.Check.Label htmlFor=\"brand-check\">Brand</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"theme\"\n          id=\"gradient-check\"\n          value={layoutConstants.LEFT_SIDEBAR_THEME_GRADIENT}\n          onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n          checked={\n            leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_GRADIENT\n          }\n        />\n        <Form.Check.Label htmlFor=\"gradient-check\">Gradient</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LeftSideBarTheme;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface LeftSideBarTypeProps {\n  changeLeftSiderbarType: (value: any) => void;\n  leftSideBarType: string;\n  layoutConstants: typeof layoutConstants.SideBarTypes;\n}\n\nconst LeftSideBarType = ({\n  changeLeftSiderbarType,\n  leftSideBarType,\n  layoutConstants,\n}: LeftSideBarTypeProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Left Sidebar Size</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"default-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={\n            leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT\n          }\n        />\n        <Form.Check.Label htmlFor=\"default-check\">Default</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"condensed-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={\n            leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED\n          }\n        />\n        <Form.Check.Label htmlFor=\"condensed-check\">\n          Condensed <small>(Extra Small size)</small>\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"compact-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={\n            leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT\n          }\n        />\n        <Form.Check.Label htmlFor=\"compact-check\">\n          Compact <small>(Small size)</small>\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"full-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_FULL}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_FULL}\n        />\n        <Form.Check.Label htmlFor=\"full-check\">Full Layout</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"leftsidebar-size\"\n          id=\"fullscreen-check\"\n          value={layoutConstants.LEFT_SIDEBAR_TYPE_FULLSCREEN}\n          onChange={(e) => changeLeftSiderbarType(e.target.value)}\n          checked={\n            leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_FULLSCREEN\n          }\n        />\n        <Form.Check.Label htmlFor=\"fullscreen-check\">\n          Full Screen Layout\n        </Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default LeftSideBarType;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\ninterface TwoToneIconsProps {\n  toggleTwoToneIconsMode: (value: any) => void;\n  showTwoToneIcons: boolean;\n}\n\nconst TwoToneIcons = ({\n  toggleTwoToneIconsMode,\n  showTwoToneIcons,\n}: TwoToneIconsProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Two Tone Icons</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"checkbox\"\n          name=\"leftsidebar-user\"\n          id=\"sidebaruser-check\"\n          onChange={(e) => toggleTwoToneIconsMode(e.target.checked)}\n          checked={showTwoToneIcons}\n        />\n        <Form.Check.Label htmlFor=\"sidebaruser-check\">Enable</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default TwoToneIcons;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\ninterface SidebarUserInfoProps {\n  toggleLeftSidebarUserInfo: (value: any) => void;\n  showSidebarUserInfo: boolean;\n}\n\nconst SidebarUserInfo = ({\n  toggleLeftSidebarUserInfo,\n  showSidebarUserInfo,\n}: SidebarUserInfoProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Sidebar User Info</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"checkbox\"\n          name=\"leftsidebar-user\"\n          id=\"sidebaruser-check\"\n          onChange={(e) => toggleLeftSidebarUserInfo(e.target.checked)}\n          checked={showSidebarUserInfo}\n        />\n        <Form.Check.Label htmlFor=\"sidebaruser-check\">Enable</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default SidebarUserInfo;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface TopbarThemeProps {\n  changeTopBarTheme: (value: any) => void;\n  topbarTheme: string;\n  layoutConstants: typeof layoutConstants.TopbarTheme;\n}\n\nconst TopbarTheme = ({\n  changeTopBarTheme,\n  topbarTheme,\n  layoutConstants,\n}: TopbarThemeProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Topbar</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"topbar-color\"\n          id=\"lighttopbar-check\"\n          value={layoutConstants.TOPBAR_THEME_LIGHT}\n          onChange={(e) => changeTopBarTheme(e.target.value)}\n          checked={topbarTheme === layoutConstants.TOPBAR_THEME_LIGHT}\n        />\n        <Form.Check.Label htmlFor=\"lighttopbar-check\">Light</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"topbar-color\"\n          id=\"darktopbar-check\"\n          value={layoutConstants.TOPBAR_THEME_DARK}\n          onChange={(e) => changeTopBarTheme(e.target.value)}\n          checked={topbarTheme === layoutConstants.TOPBAR_THEME_DARK}\n        />\n        <Form.Check.Label htmlFor=\"darktopbar-check\">Dark</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"topbar-color\"\n          id=\"brandtopbar-check\"\n          value={layoutConstants.TOPBAR_THEME_BRAND}\n          onChange={(e) => changeTopBarTheme(e.target.value)}\n          checked={topbarTheme === layoutConstants.TOPBAR_THEME_BRAND}\n        />\n        <Form.Check.Label htmlFor=\"brandtopbar-check\">Brand</Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default TopbarTheme;\n","import { Form } from \"react-bootstrap\";\nimport * as layoutConstants from \"../../constants/layout\";\n\ninterface TwoColumnThemeProps {\n  changeTwoColumnTheme: (value: any) => void;\n  twoColumnTheme: string;\n  layoutConstants: typeof layoutConstants.TwoColumnTheme;\n}\n\nconst TwoColumnTheme = ({\n  changeTwoColumnTheme,\n  twoColumnTheme,\n  layoutConstants,\n}: TwoColumnThemeProps) => {\n  return (\n    <>\n      <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Menu Icon Color</h6>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"twocolumn-theme\"\n          id=\"twocolumn-light-check\"\n          value={layoutConstants.TWOCOLUMN_LIGHT}\n          onChange={(e) => changeTwoColumnTheme(e.target.value)}\n          checked={twoColumnTheme === layoutConstants.TWOCOLUMN_LIGHT}\n        />\n        <Form.Check.Label htmlFor=\"twocolumn-light-check\">\n          Light\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"twocolumn-theme\"\n          id=\"twocolumn-dark-check\"\n          value={layoutConstants.TWOCOLUMN_DARK}\n          onChange={(e) => changeTwoColumnTheme(e.target.value)}\n          checked={twoColumnTheme === layoutConstants.TWOCOLUMN_DARK}\n        />\n        <Form.Check.Label htmlFor=\"twocolumn-dark-check\">Dark</Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"twocolumn-theme\"\n          id=\"twocolumn-brand-check\"\n          value={layoutConstants.TWOCOLUMN_BRAND}\n          onChange={(e) => changeTwoColumnTheme(e.target.value)}\n          checked={twoColumnTheme === layoutConstants.TWOCOLUMN_BRAND}\n        />\n        <Form.Check.Label htmlFor=\"twocolumn-brand-check\">\n          Brand\n        </Form.Check.Label>\n      </Form.Check>\n\n      <Form.Check className=\"form-check form-switch mb-1\">\n        <Form.Check.Input\n          type=\"radio\"\n          name=\"twocolumn-theme\"\n          id=\"twocolumn-gradient-check\"\n          value={layoutConstants.TWOCOLUMN_GRADIENT}\n          onChange={(e) => changeTwoColumnTheme(e.target.value)}\n          checked={twoColumnTheme === layoutConstants.TWOCOLUMN_GRADIENT}\n        />\n        <Form.Check.Label htmlFor=\"twocolumn-gradient-check\">\n          Gradient\n        </Form.Check.Label>\n      </Form.Check>\n    </>\n  );\n};\n\nexport default TwoColumnTheme;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// actions\nimport {\n  changeLayout,\n  changeLayoutModes,\n  changeLayoutColor,\n  changeLayoutWidth,\n  changeMenuPositions,\n  changeSidebarTheme,\n  changeSidebarType,\n  toggleSidebarUserInfo,\n  changeTopbarTheme,\n  toggleTwoToneIcons,\n  changeTwoColumnThemes,\n} from \"../../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../../redux/store\";\n\n// constants\nimport * as layoutConstants from \"../../constants/layout\";\n\n// custom hook\nimport { useViewport } from \"../../hooks/useViewPort\";\n\n// components\nimport LayoutMode from \"./LayoutMode\";\nimport LayoutTypes from \"./LayoutTypes\";\nimport LayoutColor from \"./LayoutColor\";\nimport LayoutWidth from \"./LayoutWidth\";\nimport MenuPositions from \"./MenuPositions\";\nimport LeftSideBarTheme from \"./LeftSideBarTheme\";\nimport LeftSideBarType from \"./LeftSideBarType\";\nimport TwoToneIcons from \"./TwoToneIcons\";\nimport SidebarUserInfo from \"./SidebarUserInfo\";\nimport TopbarTheme from \"./TopbarTheme\";\nimport TwoColumnTheme from \"./TwoColumnTheme\";\n\nconst ThemeCustomizer = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { width } = useViewport();\n\n  const {\n    layoutMode,\n    // sidenavUser,\n    layoutColor,\n    layoutType,\n    layoutWidth,\n    menuPosition,\n    leftSideBarType,\n    leftSideBarTheme,\n    showTwoToneIcons,\n    showSidebarUserInfo,\n    topbarTheme,\n    twoColumnTheme,\n  } = useSelector((state: RootState) => ({\n    layoutMode: state.Layout.layoutMode,\n    twoColumnTheme: state.Layout.twoColumnTheme,\n    // sidenavUser: state.Layout.sidenavUser,\n    layoutColor: state.Layout.layoutColor,\n    layoutType: state.Layout.layoutType,\n    layoutWidth: state.Layout.layoutWidth,\n    menuPosition: state.Layout.menuPosition,\n    leftSideBarTheme: state.Layout.leftSideBarTheme,\n    leftSideBarType: state.Layout.leftSideBarType,\n    showTwoToneIcons: state.Layout.showTwoToneIcons,\n    showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n    topbarTheme: state.Layout.topbarTheme,\n  }));\n\n  const [disableMenuPositions, setDisableMenuPositions] =\n    useState<boolean>(false);\n  // const [disableSidebarTheme, setDisableSidebarTheme] = useState<boolean>(false);\n  const [disableSidebarType, setDisableSidebarType] = useState<boolean>(false);\n  // const [disableTwoToneIcons, setDisableTwoToneIcons] = useState<boolean>(false);\n  const [disableSidebarUser, setDisableSidebarUser] = useState<boolean>(false);\n  const [disableLayoutMode, setDisableLayoutMode] = useState<boolean>(false);\n  const [showTwoColumnTheme, setShowTwoColumnTheme] = useState<boolean>(false);\n\n  /**\n   * change state based on props changes\n   */\n  const _loadStateFromProps = useCallback(() => {\n    setDisableMenuPositions(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN\n    );\n    // setDisableSidebarTheme(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL);\n    setDisableLayoutMode(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL\n    );\n    setDisableSidebarType(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN &&\n      width > 991\n    );\n    // setDisableTwoToneIcons(layoutType === layoutConstants.LayoutTypes.LAYOUT_VERTICAL);\n    setDisableSidebarUser(\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n      layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN &&\n      layoutMode !== layoutConstants.LayoutMode.LAYOUT_DETACHED\n    );\n    setShowTwoColumnTheme(\n      layoutType === layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN\n    );\n  }, [layoutType, width, layoutMode]);\n\n  useEffect(() => {\n    _loadStateFromProps();\n  }, [_loadStateFromProps]);\n\n  /**\n   * On layout change\n   */\n  const changeLayoutType = (value: any) => {\n    var layout = value;\n    //\n    switch (layout) {\n      case \"horizontal\":\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL));\n        break;\n      // case 'detached':\n      //   dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_DETACHED));\n      //   break;\n      case \"vertical\":\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_VERTICAL));\n        break;\n      default:\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN));\n        break;\n    }\n  };\n\n  const changeLayoutMode = (value: any) => {\n    var layout = value;\n    switch (layout) {\n      case \"fluid\":\n        dispatch(changeLayoutModes(layoutConstants.LayoutMode.LAYOUT_DEFAULT));\n        break;\n      case \"detached\":\n        dispatch(changeLayoutModes(layoutConstants.LayoutMode.LAYOUT_DETACHED));\n        break;\n      default:\n        dispatch(changeLayoutModes(layoutConstants.LayoutMode.LAYOUT_DEFAULT));\n        break;\n    }\n  };\n\n  const changeTwoColumnTheme = (value: any) => {\n    var layout = value;\n    switch (layout) {\n      case \"light\":\n        dispatch(\n          changeTwoColumnThemes(layoutConstants.TwoColumnTheme.TWOCOLUMN_LIGHT)\n        );\n        break;\n      case \"dark\":\n        dispatch(\n          changeTwoColumnThemes(layoutConstants.TwoColumnTheme.TWOCOLUMN_DARK)\n        );\n        break;\n      case \"gradient\":\n        dispatch(\n          changeTwoColumnThemes(\n            layoutConstants.TwoColumnTheme.TWOCOLUMN_GRADIENT\n          )\n        );\n        break;\n      default:\n        dispatch(\n          changeTwoColumnThemes(layoutConstants.TwoColumnTheme.TWOCOLUMN_BRAND)\n        );\n    }\n  };\n\n  /**\n   * Change the layout color\n   */\n  const changeLayoutColorScheme = (value: any) => {\n    var mode = value;\n    switch (mode) {\n      case \"dark\":\n        dispatch(\n          changeLayoutColor(layoutConstants.LayoutColor.LAYOUT_COLOR_DARK)\n        );\n        break;\n      default:\n        dispatch(\n          changeLayoutColor(layoutConstants.LayoutColor.LAYOUT_COLOR_LIGHT)\n        );\n        break;\n    }\n  };\n\n  /**\n   * Change the width mode\n   */\n  const changeWidthMode = (value: any) => {\n    var mode = value;\n\n    switch (mode) {\n      case \"boxed\":\n        dispatch(\n          changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_BOXED)\n        );\n        break;\n      default:\n        dispatch(\n          changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID)\n        );\n        break;\n    }\n  };\n\n  /*\n   * Change menus position\n   */\n  const changeMenuPosition = (value: any) => {\n    var position = value;\n\n    switch (position) {\n      case \"scrollable\":\n        dispatch(\n          changeMenuPositions(\n            layoutConstants.MenuPositions.MENU_POSITION_SCROLLABLE\n          )\n        );\n        break;\n      default:\n        dispatch(\n          changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_FIXED)\n        );\n        break;\n    }\n  };\n\n  /**\n   * Changes the theme\n   */\n  const changeLeftSidebarTheme = (value: any) => {\n    var theme = value;\n    switch (theme) {\n      case \"dark\":\n        dispatch(\n          changeSidebarTheme(\n            layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DARK\n          )\n        );\n        break;\n      case \"brand\":\n        dispatch(\n          changeSidebarTheme(\n            layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_BRAND\n          )\n        );\n        break;\n      case \"gradient\":\n        dispatch(\n          changeSidebarTheme(\n            layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_GRADIENT\n          )\n        );\n        break;\n      default:\n        dispatch(\n          changeSidebarTheme(\n            layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT\n          )\n        );\n        break;\n    }\n  };\n\n  /**\n   * Change the leftsiderbar type\n   */\n  const changeLeftSiderbarType = (value: any) => {\n    var type = value;\n    switch (type) {\n      case \"condensed\":\n        dispatch(\n          changeSidebarType(\n            layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED\n          )\n        );\n        break;\n      case \"compact\":\n        dispatch(\n          changeSidebarType(\n            layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT\n          )\n        );\n        break;\n      case \"full\":\n        dispatch(\n          changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_FULL)\n        );\n        break;\n      case \"fullscreen\":\n        dispatch(\n          changeSidebarType(\n            layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_FULLSCREEN\n          )\n        );\n        break;\n      default:\n        dispatch(\n          changeSidebarType(\n            layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n          )\n        );\n        break;\n    }\n  };\n\n  /**\n   * Toggle the two-icon-mode\n   */\n  const toggleTwoToneIconsMode = (value: any) => {\n    var checked = value;\n    dispatch(toggleTwoToneIcons(checked));\n  };\n\n  /*\n   * Toggle the leftsidebar use info\n   */\n  const toggleLeftSidebarUserInfo = (value: any) => {\n    var checked = value;\n    dispatch(toggleSidebarUserInfo(checked));\n  };\n\n  /*\n   * Change topbar theme\n   */\n  const changeTopBarTheme = (value: any) => {\n    var theme = value;\n    switch (theme) {\n      case \"light\":\n        dispatch(\n          changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT)\n        );\n        break;\n      case \"brand\":\n        dispatch(\n          changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_BRAND)\n        );\n        break;\n      default:\n        dispatch(\n          changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_DARK)\n        );\n        break;\n    }\n  };\n\n  /**\n   * Reset everything\n   */\n  const reset = () => {\n    changeLayoutMode(layoutConstants.LayoutMode.LAYOUT_DEFAULT);\n    changeTwoColumnTheme(layoutConstants.TwoColumnTheme.TWOCOLUMN_LIGHT);\n    changeLayoutType(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n    changeLayoutColorScheme(layoutConstants.LayoutColor.LAYOUT_COLOR_LIGHT);\n    changeWidthMode(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID);\n    changeMenuPosition(layoutConstants.MenuPositions.MENU_POSITION_FIXED);\n    changeLeftSidebarTheme(\n      layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT\n    );\n    toggleLeftSidebarUserInfo(false);\n    toggleTwoToneIconsMode(false);\n    changeTopBarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT);\n    changeLeftSiderbarType(\n      layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <h6 className=\"fw-medium px-3 m-0 py-2 font-13 text-uppercase bg-light\">\n        <span className=\"d-block py-1\">Theme Settings</span>\n      </h6>\n      <div className=\"p-3\">\n        <div className=\"alert alert-warning\" role=\"alert\">\n          <strong>Customize </strong> the overall color scheme, sidebar menu,\n          etc.\n        </div>\n\n        {/* Layouts */}\n        <LayoutTypes\n          changeLayoutType={changeLayoutType}\n          layoutType={layoutType}\n          layoutConstants={layoutConstants.LayoutTypes}\n        />\n\n        {/* Layout Modes */}\n        {disableLayoutMode && (\n          <LayoutMode\n            changeLayoutMode={changeLayoutMode}\n            layoutMode={layoutMode}\n            layoutConstants={layoutConstants.LayoutMode}\n          />\n        )}\n\n        <LayoutColor\n          changeLayoutColorScheme={changeLayoutColorScheme}\n          layoutColor={layoutColor}\n          layoutConstants={layoutConstants.LayoutColor}\n        />\n\n        {/* Width */}\n        <LayoutWidth\n          changeWidthMode={changeWidthMode}\n          layoutWidth={layoutWidth}\n          layoutConstants={layoutConstants.LayoutWidth}\n        />\n\n        {/* Menu Posiotions */}\n        {disableMenuPositions && (\n          <MenuPositions\n            menuPosition={menuPosition}\n            changeMenuPosition={changeMenuPosition}\n            layoutConstants={layoutConstants.MenuPositions}\n          />\n        )}\n\n        {/* Left Sidebar */}\n        {/* {disableSidebarTheme && ( */}\n        <LeftSideBarTheme\n          changeLeftSidebarTheme={changeLeftSidebarTheme}\n          leftSideBarTheme={leftSideBarTheme}\n          layoutConstants={layoutConstants.SideBarTheme}\n        />\n        {/* )} */}\n\n        {/* Left Sidebar Size */}\n        {disableSidebarType && (\n          <LeftSideBarType\n            changeLeftSiderbarType={changeLeftSiderbarType}\n            leftSideBarType={leftSideBarType}\n            layoutConstants={layoutConstants.SideBarTypes}\n          />\n        )}\n\n        {showTwoColumnTheme && (\n          <TwoColumnTheme\n            changeTwoColumnTheme={changeTwoColumnTheme}\n            twoColumnTheme={twoColumnTheme}\n            layoutConstants={layoutConstants.TwoColumnTheme}\n          />\n        )}\n\n        {/* tow-tone icons */}\n        {/* {disableTwoToneIcons && ( */}\n        <TwoToneIcons\n          toggleTwoToneIconsMode={toggleTwoToneIconsMode}\n          showTwoToneIcons={showTwoToneIcons}\n        />\n        {/* )} */}\n\n        {/* Topbar */}\n        <TopbarTheme\n          changeTopBarTheme={changeTopBarTheme}\n          topbarTheme={topbarTheme}\n          layoutConstants={layoutConstants.TopbarTheme}\n        />\n\n        {/* User Info */}\n        {disableSidebarUser && (\n          <SidebarUserInfo\n            toggleLeftSidebarUserInfo={toggleLeftSidebarUserInfo}\n            showSidebarUserInfo={showSidebarUserInfo}\n          />\n        )}\n\n        <div className=\"d-grid mt-4\">\n          <button\n            className=\"btn btn-primary\"\n            id=\"resetBtn\"\n            onClick={() => reset()}\n          >\n            Reset to Default\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ThemeCustomizer;\n","import avatar1 from \"../../assets/images/users/user-10.jpg\";\nimport avatar2 from \"../../assets/images/users/user-1.jpg\";\nimport avatar3 from \"../../assets/images/users/user-9.jpg\";\nimport avatar4 from \"../../assets/images/users/user-2.jpg\";\nimport avatar5 from \"../../assets/images/users/user-4.jpg\";\nimport avatar6 from \"../../assets/images/users/user-5.jpg\";\nimport avatar7 from \"../../assets/images/users/user-6.jpg\";\nimport avatar8 from \"../../assets/images/users/user-7.jpg\";\nimport avatar9 from \"../../assets/images/users/user-8.jpg\";\n\nexport interface TasksItemTypes {\n  id: number;\n  task: string;\n  progress: number;\n  variant: string;\n  stage: string;\n}\n\nexport interface ChatItemTypes {\n  id: number;\n  avatar: string;\n  userName: string;\n  message: string;\n  userStatus: string;\n  group: string;\n}\n\nconst tasks: TasksItemTypes[] = [\n  {\n    id: 1,\n    task: \"App Development\",\n    progress: 75,\n    variant: \"success\",\n    stage: \"working\",\n  },\n  {\n    id: 2,\n    task: \"Database Repair\",\n    progress: 37,\n    variant: \"info\",\n    stage: \"working\",\n  },\n  {\n    id: 3,\n    task: \"Backup Create\",\n    progress: 52,\n    variant: \"warning\",\n    stage: \"working\",\n  },\n  {\n    id: 4,\n    task: \"Sales Reporting\",\n    progress: 12,\n    variant: \"danger\",\n    stage: \"upcoming\",\n  },\n  {\n    id: 5,\n    task: \"Redesign Website\",\n    progress: 67,\n    variant: \"primary\",\n    stage: \"upcoming\",\n  },\n  {\n    id: 6,\n    task: \"New Admin Design\",\n    progress: 84,\n    variant: \"success\",\n    stage: \"upcoming\",\n  },\n];\n\nconst chats: ChatItemTypes[] = [\n  {\n    id: 1,\n    avatar: avatar1,\n    userName: \"Andrew Mackie\",\n    message: \"It will seem like simplified English.\",\n    userStatus: \"online\",\n    group: \"favourites\",\n  },\n  {\n    id: 2,\n    avatar: avatar2,\n    userName: \"Rory Dalyell\",\n    message: \"To an English person, it will seem like simplified\",\n    userStatus: \"away\",\n    group: \"favourites\",\n  },\n  {\n    id: 3,\n    avatar: avatar3,\n    userName: \"Jaxon Dunhill\",\n    message: \"To achieve this, it would be necessary.\",\n    userStatus: \"busy\",\n    group: \"favourites\",\n  },\n  {\n    id: 4,\n    avatar: avatar4,\n    userName: \"Jackson Therry\",\n    message: \"Everyone realizes why a new common language.\",\n    userStatus: \"online\",\n    group: \"other\",\n  },\n  {\n    id: 5,\n    avatar: avatar5,\n    userName: \"Charles Deakin\",\n    message: \"The languages only differ in their grammar.\",\n    userStatus: \"away\",\n    group: \"other\",\n  },\n  {\n    id: 6,\n    avatar: avatar6,\n    userName: \"Ryan Salting\",\n    message: \"If several languages coalesce the grammar of the resulting.\",\n    userStatus: \"online\",\n    group: \"other\",\n  },\n  {\n    id: 7,\n    avatar: avatar7,\n    userName: \"Sean Howse\",\n    message: \"It will seem like simplified English.\",\n    userStatus: \"online\",\n    group: \"other\",\n  },\n  {\n    id: 8,\n    avatar: avatar8,\n    userName: \"Dean Coward\",\n    message: \"The new common language will be more simple.\",\n    userStatus: \"busy\",\n    group: \"other\",\n  },\n  {\n    id: 9,\n    avatar: avatar9,\n    userName: \"Hayley East\",\n    message: \"One could refuse to pay expensive translators.\",\n    userStatus: \"away\",\n    group: \"other\",\n  },\n];\n\nexport { tasks, chats };\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SimpleBar from \"simplebar-react\";\n\n// actions\nimport { hideRightSidebar } from \"../../redux/actions\";\n\n// store\nimport { AppDispatch, RootState } from \"../../redux/store\";\n\n// components\nimport Chats from \"../../components/Chats\";\nimport Tasks from \"../../components/Tasks\";\nimport ThemeCustomizer from \"../../components/ThemeCustomizer/\";\n\nimport { chats, tasks } from \"./data\";\n\ninterface RightSideBarProps {\n  hideRightSidebar?: () => void;\n  title?: string;\n  children?: any;\n}\n\nconst RightSideBar = (props: RightSideBarProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const rightBarNodeRef: any = useRef(null);\n  const [showRightSideNav, setShowRightSideNav] =\n    useState<boolean>(rightBarNodeRef);\n\n  const { isOpenRightSideBar } = useSelector((state: RootState) => ({\n    isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n  }));\n\n  /**\n   * Handle the click anywhere in doc\n   */\n  const handleOtherClick = useCallback(\n    (e: any) => {\n      if (isOpenRightSideBar) {\n        if (\n          rightBarNodeRef &&\n          rightBarNodeRef.current &&\n          rightBarNodeRef.current.contains(e.target)\n        ) {\n          return;\n        } else {\n          dispatch(hideRightSidebar(), setShowRightSideNav(false));\n        }\n      }\n    },\n    [rightBarNodeRef, dispatch, isOpenRightSideBar]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleOtherClick, false);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOtherClick, false);\n    };\n  }, [handleOtherClick]);\n\n  return (\n    <React.Fragment>\n      <Offcanvas\n        className=\"right-bar\"\n        show={showRightSideNav}\n        onHide={handleOtherClick}\n        placement=\"end\"\n      >\n        <div className=\"h-100\" ref={rightBarNodeRef}>\n          <SimpleBar\n            style={{ maxHeight: \"100%\", zIndex: 10000 }}\n            // timeout={500}\n            scrollbarMaxSize={320}\n          >\n            <Tab.Container\n              id=\"left-tabs-example\"\n              defaultActiveKey=\"themecustomizer\"\n            >\n              <Nav variant=\"tabs\" className=\"nav-bordered nav-justified\">\n                <Nav.Item as=\"li\">\n                  <Nav.Link eventKey=\"chats\" className=\"py-2 cursor-pointer\">\n                    <i className=\"mdi mdi-message-text d-block font-22 my-1\"></i>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item as=\"li\">\n                  <Nav.Link eventKey=\"tasks\" className=\"py-2 cursor-pointer\">\n                    <i className=\"mdi mdi-format-list-checkbox d-block font-22 my-1\"></i>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item as=\"li\">\n                  <Nav.Link\n                    eventKey=\"themecustomizer\"\n                    className=\"py-2 cursor-pointer\"\n                  >\n                    <i className=\"mdi mdi-cog-outline d-block font-22 my-1\"></i>\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n\n              <Tab.Content className=\"p-0\">\n                <Tab.Pane eventKey=\"chats\">\n                  <Chats chats={chats} />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"tasks\">\n                  <Tasks tasks={tasks} />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"themecustomizer\">\n                  <ThemeCustomizer />\n                </Tab.Pane>\n              </Tab.Content>\n            </Tab.Container>\n          </SimpleBar>\n        </div>\n      </Offcanvas>\n      {/* <div className=\"rightbar-overlay\"></div> */}\n    </React.Fragment>\n  );\n};\n\nexport default RightSideBar;\n","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('offcanvas-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.defaultProps = defaultProps;\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nOffcanvasHeader.defaultProps = defaultProps;\nexport default OffcanvasHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH5 = divWithClassName('h5');\nexport default createWithBsPrefix('offcanvas-title', {\n  Component: DivStyledAsH5\n});","import classNames from 'classnames';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start'\n};\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement,\n\n  /* BaseModal props */\n  show,\n  backdrop,\n  keyboard,\n  scroll,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  const handleHide = useEventCallback(onHide);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    ...props,\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: ref,\n      backdrop: backdrop,\n      container: container,\n      keyboard: keyboard,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus && !scroll,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: onEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: DialogTransition,\n      backdropTransition: BackdropTransition,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"],"names":["_ref","chats","_jsxs","_Fragment","children","_jsx","className","type","placeholder","Link","to","filter","e","group","map","item","index","src","avatar","alt","classNames","userStatus","userName","message","tasks","workingTasks","task","stage","upcomingTasks","progress","ProgressBar","now","variant","style","height","changeLayoutMode","layoutMode","layoutConstants","Form","Check","Input","onChange","target","value","name","LAYOUT_DEFAULT","id","checked","Label","htmlFor","LAYOUT_DETACHED","changeLayoutType","layoutType","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_TWO_COLUMN","changeLayoutColorScheme","layoutColor","LAYOUT_COLOR_LIGHT","LAYOUT_COLOR_DARK","changeWidthMode","layoutWidth","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","changeMenuPosition","menuPosition","changeLeftSidebarTheme","leftSideBarTheme","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_THEME_BRAND","LEFT_SIDEBAR_THEME_GRADIENT","changeLeftSiderbarType","leftSideBarType","LEFT_SIDEBAR_TYPE_DEFAULT","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_COMPACT","LEFT_SIDEBAR_TYPE_FULL","LEFT_SIDEBAR_TYPE_FULLSCREEN","toggleTwoToneIconsMode","showTwoToneIcons","toggleLeftSidebarUserInfo","showSidebarUserInfo","changeTopBarTheme","topbarTheme","TOPBAR_THEME_LIGHT","TOPBAR_THEME_DARK","TOPBAR_THEME_BRAND","changeTwoColumnTheme","twoColumnTheme","TWOCOLUMN_LIGHT","TWOCOLUMN_DARK","TWOCOLUMN_BRAND","TWOCOLUMN_GRADIENT","ThemeCustomizer","dispatch","useDispatch","width","useViewport","useSelector","state","Layout","disableMenuPositions","setDisableMenuPositions","useState","disableSidebarType","setDisableSidebarType","disableSidebarUser","setDisableSidebarUser","disableLayoutMode","setDisableLayoutMode","showTwoColumnTheme","setShowTwoColumnTheme","_loadStateFromProps","useCallback","useEffect","changeLayout","changeLayoutModes","changeTwoColumnThemes","changeLayoutColor","changeLayoutWidth","changeMenuPositions","MENU_POSITION_SCROLLABLE","MENU_POSITION_FIXED","changeSidebarTheme","changeSidebarType","toggleTwoToneIcons","toggleSidebarUserInfo","changeTopbarTheme","React","role","LayoutTypes","LayoutMode","LayoutColor","LayoutWidth","MenuPositions","LeftSideBarTheme","LeftSideBarType","TwoColumnTheme","TwoToneIcons","TopbarTheme","SidebarUserInfo","onClick","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","props","rightBarNodeRef","useRef","showRightSideNav","setShowRightSideNav","isOpenRightSideBar","handleOtherClick","current","contains","hideRightSidebar","document","addEventListener","removeEventListener","Offcanvas","show","onHide","placement","ref","SimpleBar","maxHeight","zIndex","scrollbarMaxSize","Tab","Container","defaultActiveKey","Nav","Item","as","eventKey","Content","Pane","Chats","Tasks","func","child","forEach","createWithBsPrefix","transitionStyles","ENTERING","ENTERED","OffcanvasToggling","bsPrefix","_objectWithoutProperties","_excluded","useBootstrapPrefix","TransitionWrapper","_objectSpread","addEndListener","transitionEndListener","childRef","status","innerProps","EXITING","concat","defaultProps","in","mountOnEnter","unmountOnExit","appear","displayName","OffcanvasHeader","AbstractModalHeader","closeLabel","closeButton","DivStyledAsH5","divWithClassName","Component","DialogTransition","BackdropTransition","Fade","ariaLabelledby","backdrop","keyboard","scroll","onEscapeKeyDown","onShow","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalManager","handleHide","useEventCallback","modalContext","useMemo","renderBackdrop","backdropProps","ModalContext","Provider","BaseModal","node","visibility","_len","arguments","length","args","Array","_key","_len2","_key2","BootstrapModalManager","handleContainerOverflow","getSharedManager","transition","backdropTransition","renderDialog","dialogProps","Object","assign","Body","OffcanvasBody","Header","Title","OffcanvasTitle","getPercentage","min","max","percentage","Math","round","renderProgressBar","label","visuallyHidden","striped","animated","_ref2","isChild","_excluded2","wrapperProps","_excluded3","cloneElement"],"sourceRoot":""}