{"version":3,"file":"static/js/3107.e7dffa1b.chunk.js","mappings":"0NAkBA,MAoCA,EApCaA,IAA6C,IAA5C,QAAEC,EAAO,eAAEC,GAA2BF,EAClD,OACEG,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,UACbF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,UAAWL,EAAeG,UAC3BJ,GAAW,IAAIO,KAAI,CAACC,EAAMC,IACnBD,EAAKE,GAAK,IAAM,GACrBR,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAAaC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAIV,UAC1CW,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qBAAoBF,SAAC,QACpCF,EAAAA,EAAAA,KAAA,MAAII,UAAWU,IAAW,eAAgBR,EAAKS,YAAYb,SACxDI,EAAKU,YAERhB,EAAAA,EAAAA,KAAA,KAAGI,UAAWU,IAAW,kBAAmBR,EAAKW,WAAWf,SACzDI,EAAKY,aAPFX,IAYVP,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAAaC,GAAI,EAAER,UACrBW,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qBAAoBF,SAAC,QACpCF,EAAAA,EAAAA,KAAA,MAAII,UAAWU,IAAW,eAAgBR,EAAKS,YAAYb,SACxDI,EAAKU,YAERhB,EAAAA,EAAAA,KAAA,KAAGI,UAAWU,IAAW,kBAAmBR,EAAKW,WAAWf,SACzDI,EAAKY,aAPFX,QAcD,EC6DrB,EAjGYY,KAqDRN,EAAAA,EAAAA,MAACZ,EAAAA,SAAc,CAAAC,SAAA,EACbF,EAAAA,EAAAA,KAACoB,EAAAA,EAAS,CACRC,gBAAiB,CACf,CAAEC,MAAO,cAAeC,KAAM,cAC9B,CAAED,MAAO,OAAQC,KAAM,aAAcC,QAAQ,IAE/CC,MAAO,UAGTzB,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACFF,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAAAP,UACFW,EAAAA,EAAAA,MAAA,OAAKT,UAAU,cAAaF,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,oDACbJ,EAAAA,EAAAA,KAAA,MAAII,UAAU,OAAMF,SAAC,gCACrBW,EAAAA,EAAAA,MAAA,KAAGT,UAAU,aAAYF,SAAA,CAAC,kHAGxBF,EAAAA,EAAAA,KAAA,SAAM,oEAIRa,EAAAA,EAAAA,MAAA,UACEa,KAAK,SACLtB,UAAU,qDAAoDF,SAAA,EAE9DF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,+BAAiC,8BAGhDS,EAAAA,EAAAA,MAAA,UACEa,KAAK,SACLtB,UAAU,gDAA+CF,SAAA,EAEzDF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,yBAA2B,8BAOhDJ,EAAAA,EAAAA,KAAC2B,EAAI,CAAC7B,QA3FiB,CACzB,CACEU,GAAI,EACJQ,SAAU,uBACVE,OACE,4JAEJ,CACEV,GAAI,EACJQ,SAAU,2BACVE,OACE,4JAEJ,CACEV,GAAI,EACJQ,SAAU,uBACVE,OACE,2NAEJ,CACEV,GAAI,EACJQ,SAAU,oBACVE,OACE,2NAEJ,CACEV,GAAI,EACJQ,SAAU,6BACVE,OACE,4JAEJ,CACEV,GAAI,EACJQ,SAAU,sBACVE,OACE,4JAEJ,CACEV,GAAI,EACJQ,SAAU,uBACVE,OACE,4JAEJ,CACEV,GAAI,EACJQ,SAAU,2BACVE,OACE,6JA4CsBnB,eAAgB,W","sources":["components/FAQs.tsx","pages/other/FAQ.tsx"],"sourcesContent":["import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\ninterface FAQsProps {\n  rawFaqs: {\n    id: number;\n    question: string;\n    answer: string;\n    titleClass?: string;\n    textClass?: string;\n  }[];\n  containerClass?: string;\n}\n\n/*\n * FAQs\n */\nconst FAQs = ({ rawFaqs, containerClass }: FAQsProps) => {\n  return (\n    <React.Fragment>\n      <Row className={containerClass}>\n        {(rawFaqs || []).map((ques, index) => {\n          return ques.id % 2 !== 0 ? (\n            <Col key={index} lg={{ span: 5, offset: 1 }}>\n              <div>\n                <div className=\"faq-question-q-box\">Q.</div>\n                <h4 className={classNames(\"faq-question\", ques.titleClass)}>\n                  {ques.question}\n                </h4>\n                <p className={classNames(\"faq-answer mb-4\", ques.textClass)}>\n                  {ques.answer}\n                </p>\n              </div>\n            </Col>\n          ) : (\n            <Col key={index} lg={5}>\n              <div>\n                <div className=\"faq-question-q-box\">Q.</div>\n                <h4 className={classNames(\"faq-question\", ques.titleClass)}>\n                  {ques.question}\n                </h4>\n                <p className={classNames(\"faq-answer mb-4\", ques.textClass)}>\n                  {ques.answer}\n                </p>\n              </div>\n            </Col>\n          );\n        })}\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FAQs;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport FAQs from \"../../components/FAQs\";\n\ninterface RawFaqs {\n  id: number;\n  question: string;\n  answer: string;\n}\n\n// FAQ component\nconst FAQ = () => {\n  const rawFaqs: RawFaqs[] = [\n    {\n      id: 1,\n      question: \"What is Lorem Ipsum?\",\n      answer:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\",\n    },\n    {\n      id: 2,\n      question: \"Is safe use Lorem Ipsum?\",\n      answer:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\",\n    },\n    {\n      id: 3,\n      question: \"Why use Lorem Ipsum?\",\n      answer:\n        \"Lorem ipsum dolor sit amet, in mea nonumes dissentias dissentiunt, pro te solet oratio iriure. Cu sit consetetur moderatius intellegam, ius decore accusamus te. Ne primis suavitate disputando nam. Mutat convenirete.\",\n    },\n    {\n      id: 4,\n      question: \"When can be used?\",\n      answer:\n        \"Lorem ipsum dolor sit amet, in mea nonumes dissentias dissentiunt, pro te solet oratio iriure. Cu sit consetetur moderatius intellegam, ius decore accusamus te. Ne primis suavitate disputando nam. Mutat convenirete.\",\n    },\n    {\n      id: 5,\n      question: \"How many variations exist?\",\n      answer:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\",\n    },\n    {\n      id: 6,\n      question: \"License & Copyright\",\n      answer:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\",\n    },\n    {\n      id: 7,\n      question: \"What is Lorem Ipsum?\",\n      answer:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\",\n    },\n    {\n      id: 8,\n      question: \"Is safe use Lorem Ipsum?\",\n      answer:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\",\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Extra Pages\", path: \"/pages/faq\" },\n          { label: \"FAQs\", path: \"/pages/faq\", active: true },\n        ]}\n        title={\"FAQs\"}\n      />\n\n      <Row>\n        <Col>\n          <div className=\"text-center\">\n            <i className=\"h1 mdi mdi-comment-multiple-outline text-muted\"></i>\n            <h3 className=\"mb-3\">Frequently Asked Questions</h3>\n            <p className=\"text-muted\">\n              Nisi praesentium similique totam odio obcaecati, reprehenderit,\n              dignissimos rem temporibus ea inventore alias!\n              <br /> Beatae animi nemo ea tempora, temporibus laborum facilis\n              ut!\n            </p>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-success waves-effect waves-light mt-2 me-1\"\n            >\n              <i className=\"mdi mdi-email-outline me-1\"></i> Email us your\n              question\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary waves-effect waves-light mt-2\"\n            >\n              <i className=\"mdi mdi-twitter me-1\"></i> Send us a tweet\n            </button>\n          </div>\n        </Col>\n      </Row>\n\n      {/* question/answer */}\n      <FAQs rawFaqs={rawFaqs} containerClass={\"pt-5\"} />\n    </React.Fragment>\n  );\n};\n\nexport default FAQ;\n"],"names":["_ref","rawFaqs","containerClass","_jsx","React","children","Row","className","map","ques","index","id","Col","lg","span","offset","_jsxs","classNames","titleClass","question","textClass","answer","FAQ","PageTitle","breadCrumbItems","label","path","active","title","type","FAQs"],"sourceRoot":""}