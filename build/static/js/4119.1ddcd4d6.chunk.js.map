{"version":3,"file":"static/js/4119.1ddcd4d6.chunk.js","mappings":"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","sources":["pages/uikit/Progress.tsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Card, ProgressBar } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nconst Basic = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Basic Example</h4>\n        <p className=\"sub-header\"> Default progress bar.</p>\n\n        <ProgressBar className=\"mb-2\" />\n        <ProgressBar now={33} className=\"mb-2\" />\n        <ProgressBar now={66} className=\"mb-2\" />\n        <ProgressBar now={100} className=\"mb-2\" />\n        <ProgressBar now={25} label={\"25%\"} className=\"mb-0\" />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst ContextualAlternatives = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Contextual alternatives</h4>\n        <p className=\"sub-header\">\n          Progress bars use some of the same button and alert classes for\n          consistent styles.\n        </p>\n\n        <ProgressBar now={25} className=\"mb-2\" variant=\"success\" />\n        <ProgressBar now={50} className=\"mb-2\" variant=\"info\" />\n        <ProgressBar now={75} className=\"mb-2\" variant=\"warning\" />\n        <ProgressBar now={100} className=\"mb-2\" variant=\"danger\" />\n        <ProgressBar className=\"mb-0\">\n          <ProgressBar variant=\"primary\" now={15} key={1} />\n          <ProgressBar variant=\"success\" now={30} key={2} />\n          <ProgressBar variant=\"info\" now={20} key={3} />\n        </ProgressBar>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Striped = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Striped example</h4>\n        <p className=\"sub-header\">\n          Uses a gradient to create a striped effect.\n        </p>\n\n        <ProgressBar now={10} className=\"mb-2\" striped />\n        <ProgressBar now={25} className=\"mb-2\" variant=\"success\" striped />\n        <ProgressBar now={50} className=\"mb-2\" variant=\"info\" striped />\n        <ProgressBar now={75} className=\"mb-2\" variant=\"warning\" striped />\n        <ProgressBar now={100} className=\"mb-2\" variant=\"danger\" striped />\n        <ProgressBar now={75} className=\"mb-0\" striped animated />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Sizes = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Size example</h4>\n        <p className=\"sub-header\">\n          We only set a <code>height</code> value on the <code>.progress</code>,\n          so if you change that value the inner <code>.progress-bar</code> will\n          automatically resize accordingly.\n        </p>\n\n        <ProgressBar now={70} className=\"mb-2\" style={{ height: 1 }} />\n        <ProgressBar now={30} className=\"progress-sm mb-2\" />\n        <ProgressBar now={25} className=\"mb-2 progress-md\" variant=\"success\" />\n        <ProgressBar now={50} className=\"mb-2 progress-lg\" variant=\"info\" />\n        <ProgressBar now={75} className=\"mb-2 progress-xl\" variant=\"warning\" />\n        <ProgressBar now={38} className=\"mb-0 progress-xxl\" variant=\"danger\" />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst VerticalProgress = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Progressbar Vertical</h4>\n          <p className=\"sub-header\">\n            Use class <code>.progress-vertical</code>.\n          </p>\n          <ProgressBar className=\"progress-vertical\">\n            <ProgressBar style={{ height: \"10%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical\">\n            <ProgressBar variant=\"success\" style={{ height: \"25%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical progress-lg\">\n            <ProgressBar variant=\"info\" style={{ height: \"50%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical progress-xl\">\n            <ProgressBar variant=\"warning\" style={{ height: \"75%\" }} />\n          </ProgressBar>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst VerticalBottomProgress = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Progressbar Vertical Bottom</h4>\n          <p className=\"sub-header\">\n            Use class <code>.progress-vertical-bottom</code>.\n          </p>\n          <ProgressBar className=\"progress-vertical-bottom\">\n            <ProgressBar style={{ height: \"10%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical-bottom\">\n            <ProgressBar variant=\"success\" style={{ height: \"25%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical-bottom progress-lg\">\n            <ProgressBar variant=\"info\" style={{ height: \"50%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical-bottom progress-xl\">\n            <ProgressBar variant=\"warning\" style={{ height: \"75%\" }} />\n          </ProgressBar>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst ProgressBarExamples = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Base UI\", path: \"/ui/progressBar\" },\n          { label: \"Progress\", path: \"/ui/progressBar\", active: true },\n        ]}\n        title={\"Progress\"}\n      />\n\n      <Row>\n        <Col md={6}>\n          <Basic />\n        </Col>\n        <Col md={6}>\n          <ContextualAlternatives />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6}>\n          <Striped />\n        </Col>\n        <Col md={6}>\n          <Sizes />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6}>\n          <VerticalProgress />\n        </Col>\n        <Col md={6}>\n          <VerticalBottomProgress />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default ProgressBarExamples;\n","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"],"names":["Basic","_jsx","Card","children","_jsxs","Body","className","ProgressBar","now","label","ContextualAlternatives","variant","Striped","striped","animated","Sizes","style","height","VerticalProgress","_Fragment","VerticalBottomProgress","ProgressBarExamples","React","PageTitle","breadCrumbItems","path","active","title","Row","Col","md","map","func","index","child","forEach","getPercentage","min","max","percentage","Math","round","renderProgressBar","_ref","ref","visuallyHidden","bsPrefix","props","_objectWithoutProperties","_excluded","_objectSpread","role","classNames","concat","width","_ref2","isChild","_excluded2","useBootstrapPrefix","wrapperProps","_excluded3","cloneElement","displayName","defaultProps"],"sourceRoot":""}