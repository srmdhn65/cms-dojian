{"version":3,"file":"static/js/5322.015cba73.chunk.js","mappings":"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","sources":["pages/forms/Advanced.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport MaskedInput from \"react-text-mask\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport HyperDatepicker from \"../../components/Datepicker\";\n\nconst ReactSelect = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to=\"https://github.com/JedWatson/react-select\"\n            target=\"_blank\"\n          >\n            React select\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n        <p className=\"text-muted font-14\">React-Select based Select element</p>\n        <Select\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n        ></Select>\n\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n        <p className=\"text-muted font-14\">\n          React-Select based Select (Multiple) element\n        </p>\n        <Select\n          isMulti={true}\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n        ></Select>\n      </Card.Body>\n    </Card>\n  );\n};\n\ninterface OptionTypes {\n  id: number | string;\n  value: string;\n  label: string;\n}\nconst Typeaheads = () => {\n  const [singleSelections, setSingleSelections] = useState<OptionTypes[]>([]);\n  const [multiSelections, setMultiSelections] = useState<OptionTypes[]>([]);\n\n  const options: Array<OptionTypes> = [\n    { id: 1, value: \"chocolate\", label: \"Chocolate\" },\n    { id: 2, value: \"strawberry\", label: \"Strawberry\" },\n    { id: 3, value: \"vanilla\", label: \"Vanilla\" },\n  ];\n\n  const onChangeSingleSelection = (selected: OptionTypes[]) => {\n    setSingleSelections(selected);\n  };\n\n  const onChangeMultipleSelection = (selected: OptionTypes[]) => {\n    setMultiSelections(selected);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to=\"http://ericgio.github.io/react-bootstrap-typeahead/\"\n            target=\"_blank\"\n          >\n            Typeahead\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n        <p className=\"text-muted font-14\">Typeahead based Select element</p>\n        <Typeahead\n          id=\"select2\"\n          labelKey={\"label\"}\n          multiple={false}\n          onChange={onChangeSingleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={singleSelections}\n        />\n\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n        <p className=\"text-muted font-14\">\n          Typeahead based Select (Multiple) element\n        </p>\n        <Typeahead\n          id=\"select3\"\n          labelKey=\"label\"\n          multiple\n          onChange={onChangeMultipleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={multiSelections}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst DatePickers = () => {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n  /*\n   * handle date change\n   */\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setSelectedDate(date);\n    }\n  };\n  return (\n    <Card>\n      {/* <Card.Body>\n        <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n        <p className=\"text-muted font-14\">\n          A simple date picker using{\" \"}\n          <Link to=\"https://reactdatepicker.com/\">ReactJS Datepicker</Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Single Date</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">\n                Single Date with multiple months\n              </label>{\" \"}\n              <br />\n              <HyperDatepicker\n                hideAddon={true}\n                monthsShown={2}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Custom date format</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                dateFormat=\"yyyy-MM-dd\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Specific date range</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                minDate={new Date()}\n                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select Time</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                tI={60}\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                timeCaption=\"time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time only</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                showTimeSelect\n                showTimeSelectOnly\n                tI={60}\n                dateFormat=\"h:mm aa\"\n                timeCaption=\"Time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body> */}\n    </Card>\n  );\n};\n\nconst InputMasks = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Input Masks</h4>\n        <p className=\"text-muted font-14\">\n          Input masks by{\" \"}\n          <Link to=\"https://github.com/text-mask/text-mask/tree/master/react#readme\">\n            react-text-mask\n          </Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Phone Number with Area Code</label>{\" \"}\n              <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(__) ____-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">US Phone Number</label> <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(___) ___-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Date</label> <br />\n              <MaskedInput\n                mask={[\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"__/__/____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time</label> <br />\n              <MaskedInput\n                mask={[/\\d/, /\\d/, \":\", /\\d/, /\\d/, \":\", /\\d/, /\\d/]}\n                placeholder=\"__:__:__\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst FormAdvanced = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Forms\", path: \"/forms/advanced\" },\n          { label: \"Form Advanced\", path: \"/forms/advanced\", active: true },\n        ]}\n        title={\"Form Advanced\"}\n      />\n\n      <Row>\n        <Col lg={6}>\n          <ReactSelect />\n        </Col>\n        <Col lg={6}>\n          <Typeaheads />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <DatePickers />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <InputMasks />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FormAdvanced;\n"],"names":["ReactSelect","_jsx","Card","children","_jsxs","Body","className","Link","rel","to","target","Select","classNamePrefix","options","value","label","isMulti","Typeaheads","singleSelections","setSingleSelections","useState","multiSelections","setMultiSelections","id","Typeahead","labelKey","multiple","onChange","selected","placeholder","DatePickers","selectedDate","setSelectedDate","Date","InputMasks","Row","Col","lg","MaskedInput","mask","FormAdvanced","React","PageTitle","breadCrumbItems","path","active","title"],"sourceRoot":""}