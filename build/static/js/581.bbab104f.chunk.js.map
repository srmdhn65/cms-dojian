{"version":3,"file":"static/js/581.bbab104f.chunk.js","mappings":"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","sources":["pages/charts/Apex/LineChart.tsx","pages/charts/Apex/LineAnnotationChart.tsx","pages/charts/Apex/SplineAreaChart.tsx","pages/charts/Apex/StackedAreaChart.tsx","pages/charts/Apex/BarChart.tsx","pages/charts/Apex/StackedBarChart.tsx","pages/charts/Apex/DonutChart.tsx","pages/charts/Apex/PieChart.tsx","pages/charts/Apex/MixedChart.tsx","pages/charts/Apex/index.tsx"],"sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\n// simple line chart\nconst LineChart = () => {\n  // default options\n  const apexLineChartWithLables: ApexOptions = {\n    chart: {\n      height: 380,\n      type: \"line\",\n      zoom: {\n        enabled: false,\n      },\n      toolbar: {\n        show: false,\n      },\n    },\n    colors: [\"#727cf5\", \"#0acf97\"],\n    dataLabels: {\n      enabled: true,\n    },\n    stroke: {\n      width: [3, 3],\n      curve: \"smooth\",\n    },\n    title: {\n      text: \"Average High & Low Temperature\",\n      align: \"left\",\n      style: {\n        fontSize: \"14px\",\n      },\n    },\n    grid: {\n      row: {\n        colors: [\"transparent\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.2,\n      },\n      borderColor: \"#f1f3fa\",\n    },\n    markers: {\n      size: 6,\n    },\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n      title: {\n        text: \"Month\",\n      },\n    },\n    yaxis: {\n      title: {\n        text: \"Temperature\",\n      },\n      min: 5,\n      max: 40,\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"right\",\n      floating: true,\n      offsetY: -25,\n      offsetX: -5,\n    },\n    responsive: [\n      {\n        breakpoint: 600,\n        options: {\n          chart: {\n            toolbar: {\n              show: false,\n            },\n          },\n          legend: {\n            show: false,\n          },\n        },\n      },\n    ],\n  };\n\n  // chart data\n  const apexLineChartWithLablesData = [\n    {\n      name: \"High - 2018\",\n      data: [28, 29, 33, 36, 32, 32, 33],\n    },\n    {\n      name: \"Low - 2018\",\n      data: [12, 11, 14, 18, 17, 13, 13],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Line with Data Labels</h4>\n        <Chart\n          options={apexLineChartWithLables}\n          series={apexLineChartWithLablesData}\n          type=\"line\"\n          className=\"apex-charts\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\n// line chart with annotations\nconst LineAnnotationChart = () => {\n  // default options\n  const apexLineChartWithAnnotationOpts: ApexOptions = {\n    annotations: {\n      yaxis: [\n        {\n          y: 8200,\n          borderColor: \"#0acf97\",\n          label: {\n            borderColor: \"#0acf97\",\n            style: {\n              color: \"#fff\",\n              background: \"#0acf97\",\n            },\n            text: \"Support\",\n          },\n        },\n      ],\n      xaxis: [\n        {\n          x: new Date(\"23 Nov 2017\").getTime(),\n          borderColor: \"#775DD0\",\n          label: {\n            borderColor: \"#775DD0\",\n            style: {\n              color: \"#fff\",\n              background: \"#775DD0\",\n            },\n            text: \"Anno Test\",\n          },\n        },\n        {\n          x: new Date(\"03 Dec 2017\").getTime(),\n          borderColor: \"#ffbc00\",\n          label: {\n            borderColor: \"#ffbc00\",\n            style: {\n              color: \"#fff\",\n              background: \"#ffbc00\",\n            },\n            orientation: \"horizontal\",\n            text: \"New Beginning\",\n          },\n        },\n      ],\n      points: [\n        {\n          x: new Date(\"27 Nov 2017\").getTime(),\n          y: 8506.9,\n          marker: {\n            size: 8,\n            fillColor: \"#fff\",\n            strokeColor: \"#fa5c7c\",\n          },\n          label: {\n            borderColor: \"#fa5c7c\",\n            offsetY: 0,\n            style: {\n              color: \"#fff\",\n              background: \"#fa5c7c\",\n            },\n\n            text: \"Point Annotation\",\n          },\n        },\n      ],\n    },\n    chart: {\n      height: 380,\n      type: \"line\",\n      id: \"areachart-2\",\n    },\n    labels: [\n      \"13 Nov 2017\",\n      \"14 Nov 2017\",\n      \"15 Nov 2017\",\n      \"16 Nov 2017\",\n      \"17 Nov 2017\",\n      \"20 Nov 2017\",\n      \"21 Nov 2017\",\n      \"22 Nov 2017\",\n      \"23 Nov 2017\",\n      \"24 Nov 2017\",\n      \"27 Nov 2017\",\n      \"28 Nov 2017\",\n      \"29 Nov 2017\",\n      \"30 Nov 2017\",\n      \"01 Dec 2017\",\n      \"04 Dec 2017\",\n      \"05 Dec 2017\",\n      \"06 Dec 2017\",\n      \"07 Dec 2017\",\n      \"08 Dec 2017\",\n    ],\n    colors: [\"#39afd1\"],\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      width: [3],\n      curve: \"straight\",\n    },\n    title: {\n      text: \"Line with Annotations\",\n      align: \"left\",\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    grid: {\n      row: {\n        colors: [\"transparent\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.2,\n      },\n      borderColor: \"#f1f3fa\",\n    },\n    responsive: [\n      {\n        breakpoint: 600,\n        options: {\n          chart: {\n            toolbar: {\n              show: false,\n            },\n          },\n          legend: {\n            show: false,\n          },\n        },\n      },\n    ],\n  };\n\n  // chart data\n  const apexLineChartWithAnnotationData = [\n    {\n      name: \"Prices\",\n      data: [\n        8107.85, 8128, 8122.9, 8165.5, 8340.7, 8423.7, 8423.5, 8514.3, 8481.85,\n        8487.7, 8506.9, 8626.2, 8668.95, 8602.3, 8607.55, 8512.9, 8496.25,\n        8600.65, 8881.1, 9340.85,\n      ],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Line Chart with Annotations</h4>\n        <Chart\n          options={apexLineChartWithAnnotationOpts}\n          series={apexLineChartWithAnnotationData}\n          type=\"line\"\n          className=\"apex-charts\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LineAnnotationChart;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\n// SplineAreaChart\nconst SplineAreaChart = () => {\n  // default options\n  const apexAreaChart1Opts: ApexOptions = {\n    chart: {\n      height: 380,\n      type: \"area\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      width: 3,\n      curve: \"smooth\",\n    },\n    colors: [\"#727cf5\", \"#6c757d\"],\n    legend: {\n      offsetY: -10,\n    },\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n    },\n    tooltip: {\n      fixed: {\n        enabled: false,\n        position: \"topRight\",\n      },\n    },\n    grid: {\n      row: {\n        colors: [\"transparent\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.2,\n      },\n      borderColor: \"#f1f3fa\",\n    },\n  };\n\n  // chart data\n  const apexAreaChart1Data = [\n    {\n      name: \"Series 1\",\n      data: [31, 40, 28, 51, 42, 109, 100],\n    },\n    {\n      name: \"Series 2\",\n      data: [11, 32, 45, 32, 34, 52, 41],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Spline Area</h4>\n        <Chart\n          options={apexAreaChart1Opts}\n          series={apexAreaChart1Data}\n          type=\"area\"\n          className=\"apex-charts\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SplineAreaChart;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\n// StackedAreaChart\nconst StackedAreaChart = () => {\n  // default options\n  const apexAreaChart2Opts: ApexOptions = {\n    chart: {\n      height: 422,\n      type: \"area\",\n      stacked: true,\n      events: {\n        selection: (chart, e) => {\n        },\n      },\n    },\n    colors: [\"#727cf5\", \"#0acf97\", \"#e3eaef\"],\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      width: 2,\n      curve: \"smooth\",\n    },\n    fill: {\n      gradient: {\n        opacityFrom: 0.6,\n        opacityTo: 0.8,\n      },\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    grid: {\n      row: {\n        colors: [\"transparent\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.2,\n      },\n      borderColor: \"#f1f3fa\",\n    },\n    responsive: [\n      {\n        breakpoint: 600,\n        options: {\n          chart: {\n            toolbar: {\n              show: false,\n            },\n          },\n        },\n      },\n    ],\n  };\n\n  /*\n   * generate day wise time series\n   */\n  const generateDayWiseTimeSeries = (\n    baseval: number,\n    count: number,\n    yrange: { min: number; max: number }\n  ) => {\n    var i = 0;\n    var series = [];\n    while (i < count) {\n      var x = baseval;\n      var y =\n        Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n      series.push([x, y]);\n      baseval += 86400000;\n      i++;\n    }\n    return series;\n  };\n\n  // chart data\n  const apexAreaChart2Data = [\n    {\n      name: \"South\",\n      data: generateDayWiseTimeSeries(new Date(\"11 Feb 2017\").getTime(), 20, {\n        min: 10,\n        max: 60,\n      }),\n    },\n    {\n      name: \"North\",\n      data: generateDayWiseTimeSeries(new Date(\"11 Feb 2017\").getTime(), 20, {\n        min: 10,\n        max: 20,\n      }),\n    },\n\n    {\n      name: \"Central\",\n      data: generateDayWiseTimeSeries(new Date(\"11 Feb 2017\").getTime(), 20, {\n        min: 10,\n        max: 15,\n      }),\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Stacked Area</h4>\n        <Chart\n          options={apexAreaChart2Opts}\n          series={apexAreaChart2Data}\n          type=\"area\"\n          className=\"apex-charts\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StackedAreaChart;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\n// simple bar chart\nconst BarChart = () => {\n  // default options\n  const apexBarChartOpts: ApexOptions = {\n    chart: {\n      height: 380,\n      type: \"bar\",\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        dataLabels: {\n          position: \"top\",\n        },\n      },\n    },\n    dataLabels: {\n      enabled: true,\n      offsetX: -6,\n      style: {\n        fontSize: \"12px\",\n        colors: [\"#fff\"],\n      },\n    },\n    colors: [\"#fa5c7c\", \"#6c757d\"],\n    stroke: {\n      show: true,\n      width: 1,\n      colors: [\"#fff\"],\n    },\n\n    xaxis: {\n      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n    },\n    legend: {\n      offsetY: -10,\n    },\n    states: {\n      hover: {\n        filter: {\n          type: \"none\",\n        },\n      },\n    },\n    grid: {\n      borderColor: \"#f1f3fa\",\n    },\n  };\n\n  // chart data\n  const apexBarChartData = [\n    {\n      name: \"Series 1\",\n      data: [44, 55, 41, 64, 22, 43, 21],\n    },\n    {\n      name: \"Series 2\",\n      data: [53, 32, 33, 52, 13, 44, 32],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Bar Chart</h4>\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"bar\"\n          className=\"apex-charts\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default BarChart;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\n// stacked bar chart\nconst StackedBarChart = () => {\n  // default options\n  const apexBarChartStackedOpts: ApexOptions = {\n    chart: {\n      height: 380,\n      type: \"bar\",\n      stacked: true,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      },\n    },\n    stroke: {\n      show: false,\n    },\n    xaxis: {\n      categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n      labels: {\n        formatter: (val: string) => {\n          return val + \"K\";\n        },\n      },\n    },\n    yaxis: {\n      title: {\n        text: undefined,\n      },\n    },\n    colors: [\"#727cf5\", \"#0acf97\", \"#fa5c7c\", \"#6c757d\", \"#39afd1\"],\n    tooltip: {\n      y: {\n        formatter: (val: number) => {\n          return val + \"K\";\n        },\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    states: {\n      hover: {\n        filter: {\n          type: \"none\",\n        },\n      },\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"center\",\n    },\n    grid: {\n      borderColor: \"#f1f3fa\",\n    },\n  };\n\n  // chart data\n  const apexBarChartStackedData = [\n    {\n      name: \"Marine Sprite\",\n      data: [44, 55, 41, 37, 22, 43, 21],\n    },\n    {\n      name: \"Striking Calf\",\n      data: [53, 32, 33, 52, 13, 43, 32],\n    },\n    {\n      name: \"Tank Picture\",\n      data: [12, 17, 11, 9, 15, 11, 20],\n    },\n    {\n      name: \"Bucket Slope\",\n      data: [9, 7, 5, 8, 6, 9, 4],\n    },\n    {\n      name: \"Reborn Kid\",\n      data: [25, 12, 19, 32, 25, 24, 10],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Stacked Bar Chart</h4>\n        <Chart\n          options={apexBarChartStackedOpts}\n          series={apexBarChartStackedData}\n          type=\"bar\"\n          className=\"apex-charts\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StackedBarChart;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\n// simple donut chart\nconst DonutChart = () => {\n  // default options\n  const apexDonutOpts: ApexOptions = {\n    chart: {\n      height: 320,\n      type: \"pie\",\n    },\n    labels: [\"Series 1\", \"Series 2\", \"Series 3\", \"Series 4\", \"Series 5\"],\n    colors: [\"#727cf5\", \"#6c757d\", \"#0acf97\", \"#fa5c7c\", \"#e3eaef\"],\n    legend: {\n      show: true,\n      position: \"bottom\",\n      horizontalAlign: \"center\",\n      floating: false,\n      fontSize: \"14px\",\n      offsetX: 0,\n      offsetY: -10,\n    },\n    responsive: [\n      {\n        breakpoint: 600,\n        options: {\n          chart: {\n            height: 240,\n          },\n          legend: {\n            show: false,\n          },\n        },\n      },\n    ],\n  };\n\n  // chart data\n  const apexDonutData = [44, 55, 41, 17, 15];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Donut Chart</h4>\n        <Chart\n          options={apexDonutOpts}\n          series={apexDonutData}\n          type=\"donut\"\n          height={320}\n          className=\"apex-charts\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DonutChart;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\n// simple pie chart\nconst PieChart = () => {\n  // default options\n  const apexDonutOpts: ApexOptions = {\n    chart: {\n      height: 320,\n      type: \"pie\",\n    },\n    labels: [\"Series 1\", \"Series 2\", \"Series 3\", \"Series 4\", \"Series 5\"],\n    colors: [\"#727cf5\", \"#6c757d\", \"#0acf97\", \"#fa5c7c\", \"#e3eaef\"],\n    legend: {\n      show: true,\n      position: \"bottom\",\n      horizontalAlign: \"center\",\n      floating: false,\n      fontSize: \"14px\",\n      offsetX: 0,\n      offsetY: -10,\n    },\n    responsive: [\n      {\n        breakpoint: 600,\n        options: {\n          chart: {\n            height: 240,\n          },\n          legend: {\n            show: false,\n          },\n        },\n      },\n    ],\n  };\n\n  // chart data\n  const apexDonutData = [44, 55, 41, 17, 15];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Pie Chart</h4>\n        <Chart\n          options={apexDonutOpts}\n          series={apexDonutData}\n          type=\"pie\"\n          height={320}\n          className=\"apex-charts\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PieChart;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card } from \"react-bootstrap\";\nimport { ApexOptions } from \"apexcharts\";\n\n// Mixed chart\nconst MixedChart = () => {\n  // default options\n  const apexMixedOpts: ApexOptions = {\n    chart: {\n      height: 380,\n      type: \"line\",\n      stacked: false,\n      toolbar: {\n        show: false,\n      },\n    },\n    stroke: {\n      width: [0, 2, 4],\n      curve: \"smooth\",\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: \"50%\",\n      },\n    },\n    colors: [\"#727cf5\", \"#39afd1\", \"#fa5c7c\"],\n    fill: {\n      opacity: [0.85, 0.25, 1],\n      gradient: {\n        inverseColors: false,\n        shade: \"light\",\n        type: \"vertical\",\n        opacityFrom: 0.85,\n        opacityTo: 0.55,\n        stops: [0, 100, 100, 100],\n      },\n    },\n    labels: [\n      \"01/01/2003\",\n      \"02/01/2003\",\n      \"03/01/2003\",\n      \"04/01/2003\",\n      \"05/01/2003\",\n      \"06/01/2003\",\n      \"07/01/2003\",\n      \"08/01/2003\",\n      \"09/01/2003\",\n      \"10/01/2003\",\n      \"11/01/2003\",\n    ],\n    markers: {\n      size: 0,\n    },\n    legend: {\n      offsetY: -10,\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    yaxis: {\n      title: {\n        text: \"Points\",\n      },\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: function (y) {\n          if (typeof y !== \"undefined\") {\n            return y.toFixed(0) + \" points\";\n          }\n          return y;\n        },\n      },\n    },\n    grid: {\n      borderColor: \"#f1f3fa\",\n    },\n  };\n\n  // chart data\n  const apexMixedData = [\n    {\n      name: \"Team A\",\n      type: \"column\",\n      data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30],\n    },\n    {\n      name: \"Team B\",\n      type: \"area\",\n      data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43],\n    },\n    {\n      name: \"Team C\",\n      type: \"line\",\n      data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title mb-3\">Line, Bar and Area (Mixed)</h4>\n        <Chart\n          options={apexMixedOpts}\n          series={apexMixedData}\n          type=\"line\"\n          height={320}\n          className=\"apex-charts\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MixedChart;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\n\nimport LineChart from \"./LineChart\";\nimport LineAnnotationChart from \"./LineAnnotationChart\";\nimport SplineAreaChart from \"./SplineAreaChart\";\nimport StackedAreaChart from \"./StackedAreaChart\";\nimport BarChart from \"./BarChart\";\nimport StackedBarChart from \"./StackedBarChart\";\nimport DonutChart from \"./DonutChart\";\nimport PieChart from \"./PieChart\";\nimport MixedChart from \"./MixedChart\";\n\nconst ApexChart = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Charts\", path: \"/features/charts/apex\" },\n          { label: \"Apex Charts\", path: \"/features/charts/apex\", active: true },\n        ]}\n        title={\"Apex Charts\"}\n      />\n\n      <Row>\n        <Col xl={6}>\n          <LineChart />\n        </Col>\n\n        <Col xl={6}>\n          <LineAnnotationChart />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={6}>\n          <SplineAreaChart />\n        </Col>\n\n        <Col xl={6}>\n          <StackedAreaChart />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={6}>\n          <BarChart />\n        </Col>\n\n        <Col xl={6}>\n          <StackedBarChart />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={6}>\n          <DonutChart />\n        </Col>\n\n        <Col xl={6}>\n          <PieChart />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <MixedChart />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default ApexChart;\n"],"names":["LineChart","_jsx","Card","children","_jsxs","Body","className","Chart","options","chart","height","type","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","title","text","align","style","fontSize","grid","row","opacity","borderColor","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","series","name","data","LineAnnotationChart","apexLineChartWithAnnotationOpts","annotations","y","label","color","background","x","Date","getTime","orientation","points","marker","fillColor","strokeColor","id","labels","SplineAreaChart","tooltip","fixed","StackedAreaChart","generateDayWiseTimeSeries","baseval","count","yrange","i","Math","floor","random","push","apexAreaChart2Data","stacked","events","selection","e","fill","gradient","opacityFrom","opacityTo","BarChart","plotOptions","bar","horizontal","states","hover","filter","StackedBarChart","apexBarChartStackedOpts","formatter","val","undefined","DonutChart","PieChart","MixedChart","columnWidth","inverseColors","shade","stops","shared","intersect","toFixed","ApexChart","React","PageTitle","breadCrumbItems","path","active","Row","Col","xl"],"sourceRoot":""}