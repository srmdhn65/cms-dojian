{"version":3,"file":"static/js/5715.b51cf3fc.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/usePlaceholder.js","../node_modules/react-bootstrap/esm/PlaceholderButton.js","../node_modules/react-bootstrap/esm/Placeholder.js","pages/uikit/Placeholders.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { useCol } from './Col';\nexport default function usePlaceholder({\n  animation,\n  bg,\n  bsPrefix,\n  size,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'placeholder');\n  const [{\n    className,\n    ...colProps\n  }] = useCol(props);\n  return { ...colProps,\n    className: classNames(className, animation ? `${bsPrefix}-${animation}` : bsPrefix, size && `${bsPrefix}-${size}`, bg && `bg-${bg}`)\n  };\n}","import * as React from 'react';\nimport Button from './Button';\nimport usePlaceholder from './usePlaceholder';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PlaceholderButton = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Button, { ...placeholderProps,\n    ref: ref,\n    disabled: true,\n    tabIndex: -1\n  });\n});\nPlaceholderButton.displayName = 'PlaceholderButton';\nexport default PlaceholderButton;","import * as React from 'react';\nimport usePlaceholder from './usePlaceholder';\nimport PlaceholderButton from './PlaceholderButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Placeholder = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Component, { ...placeholderProps,\n    ref: ref\n  });\n});\nPlaceholder.displayName = 'Placeholder';\nexport default Object.assign(Placeholder, {\n  Button: PlaceholderButton\n});","import React from \"react\";\nimport { Card, Col, Row, Button, Placeholder } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nimport img1 from \"../../assets/images/small/img-5.jpg\";\nimport img2 from \"../../assets/images/small/img-3.jpg\";\n\nconst BasicPlaceholders = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Placeholders</h4>\n          <p className=\"text-muted\">\n            In the example below, we take a typical card component and recreate\n            it with placeholders applied to create a “loading card”. Size and\n            proportions are the same between the two.\n          </p>\n\n          <Row>\n            <Col md={6}>\n              <Card className=\"border shadow-none\">\n                <Card.Img variant=\"top\" src={img1} />\n                <Card.Body>\n                  <Card.Title>Card Title</Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make\n                    up the bulk of the card's content.\n                  </Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={6}>\n              <Card className=\"border shadow-none mb-0\">\n                <Card.Img variant=\"top\" src={img2} />\n                <Card.Body>\n                  <Placeholder as={Card.Title} animation=\"glow\">\n                    <Placeholder xs={6} />\n                  </Placeholder>\n                  <Placeholder as={Card.Text} animation=\"glow\">\n                    <Placeholder xs={7} /> <Placeholder xs={4} />{\" \"}\n                    <Placeholder xs={4} /> <Placeholder xs={6} />{\" \"}\n                    <Placeholder xs={8} />\n                  </Placeholder>\n                  <Placeholder.Button variant=\"primary\" xs={6} />\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersWidth = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Width</h4>\n          <p className=\"text-muted\">\n            You can change the <code>width</code> through grid column classes,\n            width utilities, or inline styles.\n          </p>\n          <Placeholder xs={6} />\n          <Placeholder className=\"w-75\" /> <br />\n          <Placeholder style={{ width: \"25%\" }} />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersAnimation = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Animation</h4>\n          <p className=\"text-muted\">\n            Animate placeholders by setting the prop <code>animation</code> to{\" \"}\n            <code>glow</code> or <code>wave</code> to better convey the\n            perception of something being <em>actively</em> loaded.\n          </p>\n\n          <Placeholder as=\"p\" animation=\"glow\">\n            <Placeholder xs={12} />\n          </Placeholder>\n          <Placeholder as=\"p\" animation=\"wave\" className=\"mb-0\">\n            <Placeholder xs={12} />\n          </Placeholder>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersWithVariants = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Color</h4>\n          <p className=\"text-muted\">\n            By default, the <code>placeholder</code> uses{\" \"}\n            <code>currentColor</code>. This can be overriden with a custom color\n            or utility class.\n          </p>\n\n          <Placeholder xs={12} />\n\n          <Placeholder xs={12} bg=\"primary\" />\n          <Placeholder xs={12} bg=\"secondary\" />\n          <Placeholder xs={12} bg=\"success\" />\n          <Placeholder xs={12} bg=\"danger\" />\n          <Placeholder xs={12} bg=\"warning\" />\n          <Placeholder xs={12} bg=\"info\" />\n          <Placeholder xs={12} bg=\"light\" />\n          <Placeholder xs={12} bg=\"dark\" />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersConcept = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">How it works</h4>\n          <p className=\"text-muted\">\n            Create placeholders with the <code>Placeholder</code> component and\n            a grid column prop (e.g., <code>xs={6}</code>) to set the{\" \"}\n            <code>width</code>. They can replace the text inside an element or\n            be added to an existing component via the <code>as</code> prop.\n          </p>\n\n          <p aria-hidden=\"true\">\n            <Placeholder xs={6} />\n          </p>\n\n          <Placeholder.Button xs={4} aria-hidden=\"true\" />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersWithSizes = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Sizing</h4>\n          <p className=\"text-muted\">\n            The size of <code>placeholder</code>s are based on the typographic\n            style of the parent element. Customize them with sizing props:{\" \"}\n            <code>lg</code>, <code>sm</code>, or <code>xs</code>.\n          </p>\n\n          <Placeholder xs={12} size=\"lg\" />\n          <Placeholder xs={12} />\n          <Placeholder xs={12} size=\"sm\" />\n          <Placeholder xs={12} size=\"xs\" />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst Placeholders = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Base UI\", path: \"/ui/placeholders\" },\n          { label: \"Placeholders\", path: \"/ui/placeholders\", active: true },\n        ]}\n        title={\"Placeholders\"}\n      />\n      <Row>\n        <Col xl={6}>\n          <BasicPlaceholders />\n          <PlaceholdersWidth />\n        </Col>\n        <Col xl={6}>\n          <PlaceholdersWithVariants />\n          <PlaceholdersConcept />\n          <PlaceholdersWithSizes />\n        </Col>\n        <Col xl={6}>\n          <PlaceholdersAnimation />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Placeholders;\n"],"names":["usePlaceholder","_ref","animation","bg","bsPrefix","size","props","_objectWithoutProperties","_excluded","useBootstrapPrefix","_ref2","useCol","className","colProps","_excluded2","_objectSpread","classNames","concat","PlaceholderButton","React","ref","placeholderProps","_jsx","Button","disabled","tabIndex","displayName","Placeholder","as","Component","Object","assign","BasicPlaceholders","_Fragment","children","Card","_jsxs","Body","Row","Col","md","Img","variant","src","img1","Title","Text","img2","xs","PlaceholdersWidth","style","width","PlaceholdersAnimation","PlaceholdersWithVariants","PlaceholdersConcept","PlaceholdersWithSizes","Placeholders","PageTitle","breadCrumbItems","label","path","active","title","xl"],"sourceRoot":""}