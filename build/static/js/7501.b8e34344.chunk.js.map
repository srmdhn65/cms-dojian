{"version":3,"file":"static/js/7501.b8e34344.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ToastFade.js","../node_modules/react-bootstrap/esm/ToastContext.js","../node_modules/react-bootstrap/esm/ToastHeader.js","../node_modules/react-bootstrap/esm/ToastBody.js","../node_modules/react-bootstrap/esm/Toast.js","../node_modules/react-bootstrap/esm/ToastContainer.js","pages/uikit/Notifications.tsx","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useMounted.js"],"sourcesContent":["import * as React from 'react';\nimport { ENTERING, EXITING } from 'react-transition-group/Transition';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'showing',\n  [EXITING]: 'showing show'\n};\nconst ToastFade = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(Fade, { ...props,\n  ref: ref,\n  transitionClasses: fadeStyles\n}));\nToastFade.displayName = 'ToastFade';\nexport default ToastFade;","import * as React from 'react'; // TODO: check\n\nconst ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose() {}\n\n});\nexport default ToastContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: true\n};\nconst ToastHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  closeLabel,\n  closeVariant,\n  closeButton,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  const context = useContext(ToastContext);\n  const handleClick = useEventCallback(e => {\n    context == null ? void 0 : context.onClose == null ? void 0 : context.onClose(e);\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    className: classNames(bsPrefix, className),\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick,\n      \"data-dismiss\": \"toast\"\n    })]\n  });\n});\nToastHeader.displayName = 'ToastHeader';\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('toast-body');","import * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = ToastFade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n\n  const toast = /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst positionClasses = {\n  'top-start': 'top-0 start-0',\n  'top-center': 'top-0 start-50 translate-middle-x',\n  'top-end': 'top-0 end-0',\n  'middle-start': 'top-50 start-0 translate-middle-y',\n  'middle-center': 'top-50 start-50 translate-middle',\n  'middle-end': 'top-50 end-0 translate-middle-y',\n  'bottom-start': 'bottom-0 start-0',\n  'bottom-center': 'bottom-0 start-50 translate-middle-x',\n  'bottom-end': 'bottom-0 end-0'\n};\nconst ToastContainer = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  position,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-container');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(bsPrefix, position && `position-absolute ${positionClasses[position]}`, className)\n  });\n});\nToastContainer.displayName = 'ToastContainer';\nexport default ToastContainer;","import React, { useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Toast,\n  ToastContainer,\n  Form,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nimport logo from \"../../assets/images/logo-sm.png\";\n\nconst colors: string[] = [\n  \"primary\",\n  \"secondary\",\n  \"success\",\n  \"danger\",\n  \"warning\",\n  \"info\",\n  \"light\",\n  \"dark\",\n];\n\nconst DefaultToasts = () => {\n  const [show, setShow] = useState<boolean>(true);\n  const [showTranslucent, setShowTranslucent] = useState<boolean>(true);\n  const [showPlacement, setShowPlacement] = useState<boolean>(true);\n\n  const [stacked, setStacked] = useState([\n    {\n      time: \"just now\",\n      desc: \"See? Just like this.\",\n    },\n    {\n      time: \"2 seconds ago\",\n      desc: \"Heads up, toasts will stack automatically\",\n    },\n  ]);\n\n  /*\n   * handle close\n   */\n  const handleClose = (index: number) => {\n    const list = [...stacked];\n    list.splice(index, 1);\n    setStacked(list);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Bootstrap Toasts</h4>\n        <p className=\"text-muted font-14\">\n          Push notifications to your visitors with a toast, a lightweight and\n          easily customizable alert message.\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <h5 className=\"mb-2\">Basic</h5>\n            <p className=\"text-muted font-14\">\n              Toasts are as flexible as you need and have very little required\n              markup. At a minimum, we require a single element to contain your\n              “toasted” content and strongly encourage a dismiss button.\n            </p>\n            <div className=\"p-3\">\n              <Toast\n                onClose={() => setShow(false)}\n                show={show}\n                delay={3000}\n                autohide\n              >\n                <Toast.Header>\n                  <img\n                    src={logo}\n                    alt=\"brand-logo\"\n                    height=\"12\"\n                    className=\"me-1\"\n                  />\n                  <strong className=\"me-auto\">Dojian</strong>\n                  <small className=\"ms-5\">11 mins ago</small>\n                </Toast.Header>\n                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n              </Toast>\n            </div>\n          </Col>\n\n          <Col lg={6}>\n            <h5 className=\"mb-2\">Translucent</h5>\n            <p className=\"text-muted font-14\">\n              Toasts are slightly translucent, too, so they blend over whatever\n              they might appear over. For browsers that support the\n              backdrop-filter CSS property, we’ll also attempt to blur the\n              elements under a toast.\n            </p>\n\n            <div className=\"p-3 bg-light\">\n              <Toast\n                onClose={() => setShowTranslucent(false)}\n                show={showTranslucent}\n                delay={4000}\n                autohide\n              >\n                <Toast.Header>\n                  <img\n                    src={logo}\n                    alt=\"brand-logo\"\n                    height=\"12\"\n                    className=\"me-1\"\n                  />\n                  <strong className=\"me-auto\">Dojian</strong>\n                  <small className=\"ms-5\">11 mins ago</small>\n                </Toast.Header>\n                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n              </Toast>\n            </div>\n          </Col>\n        </Row>\n\n        {/* stacked */}\n        <Row>\n          <Col lg={6} className=\"mt-4\">\n            <h5 className=\"mb-2\">Stacking</h5>\n            <p className=\"text-muted font-14\">\n              When you have multiple toasts, we default to vertiaclly stacking\n              them in a readable manner.\n            </p>\n            <div className=\"p-3\">\n              <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                style={{ position: \"relative\", minHeight: \"200px\" }}\n              >\n                <div\n                  className=\"toast-container\"\n                  style={{ position: \"absolute\", top: 0, right: 0 }}\n                >\n                  {(stacked || []).map((item, index) => {\n                    return (\n                      <Toast\n                        key={index}\n                        onClose={() => handleClose(index)}\n                        delay={5000}\n                        autohide\n                      >\n                        <Toast.Header>\n                          <img\n                            src={logo}\n                            alt=\"brand-logo\"\n                            height=\"12\"\n                            className=\"me-1\"\n                          />\n                          <strong className=\"me-auto\">Dojian</strong>\n                          <small className=\"ms-5\">{item.time}</small>\n                        </Toast.Header>\n                        <Toast.Body>{item.desc}</Toast.Body>\n                      </Toast>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </Col>\n\n          <Col lg={6} className=\"mt-4\">\n            <h5 className=\"mb-2\">Placement</h5>\n            <p className=\"text-muted font-14\">\n              Place toasts with custom CSS as you need them. The top right is\n              often used for notifications, as is the top middle. If you’re only\n              ever going to show one toast at a time, put the positioning styles\n              right on the <code>.toast</code>.\n            </p>\n\n            <div className=\"p-3\">\n              <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                className=\"d-flex justify-content-center align-items-center\"\n                style={{ minHeight: \"200px\" }}\n              >\n                <Toast\n                  onClose={() => setShowPlacement(false)}\n                  show={showPlacement}\n                >\n                  <Toast.Header>\n                    <img\n                      src={logo}\n                      alt=\"brand-logo\"\n                      height=\"12\"\n                      className=\"me-1\"\n                    />\n                    <strong className=\"me-auto\">Dojian</strong>\n                    <small className=\"ms-5\">1 mins ago</small>\n                  </Toast.Header>\n                  <Toast.Body>\n                    Heads up, toasts will stack automatically\n                  </Toast.Body>\n                </Toast>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst CustomToast = () => {\n  const [showCustom1, setShowCustom1] = useState<boolean>(true);\n  const [showCustom2, setShowCustom2] = useState<boolean>(true);\n  const [showCustom3, setShowCustom3] = useState<boolean>(true);\n  const [showCustom4, setShowCustom4] = useState<boolean>(true);\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Custom content</h4>\n          <p className=\"text-muted\">\n            Alternatively, you can also add additional controls and components\n            to toasts.\n          </p>\n          <Toast\n            className=\"d-flex align-items-center mt-4\"\n            show={showCustom1}\n            onClose={() => setShowCustom1(false)}\n            delay={3000}\n            autohide\n          >\n            <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n            <Button\n              variant=\"\"\n              onClick={() => setShowCustom1(false)}\n              className=\"btn-close ms-auto me-2\"\n            ></Button>\n          </Toast>\n          <Toast\n            className=\"d-flex align-items-center text-white bg-primary border-0 mt-4\"\n            show={showCustom2}\n            onClose={() => setShowCustom2(false)}\n            delay={4000}\n            autohide\n          >\n            <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n\n            <Button\n              variant=\"\"\n              onClick={() => setShowCustom2(false)}\n              className=\"btn-close btn-close-white ms-auto me-2\"\n            ></Button>\n          </Toast>\n          <Toast\n            className=\"mt-4\"\n            show={showCustom3}\n            onClose={() => setShowCustom3(false)}\n            delay={6000}\n            autohide\n          >\n            <Toast.Body>\n              Hello, world! This is a toast message.\n              <div className=\"mt-2 pt-2 border-top\">\n                <Button variant=\"primary\" className=\"btn-sm me-1\">\n                  Take action\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowCustom3(false)}\n                  className=\"btn-sm\"\n                >\n                  Close\n                </Button>\n              </div>\n            </Toast.Body>\n          </Toast>\n          <Toast\n            className=\"text-white bg-primary mt-4\"\n            show={showCustom4}\n            onClose={() => setShowCustom4(false)}\n            delay={8000}\n            autohide\n          >\n            <Toast.Body>\n              Hello, world! This is a toast message.\n              <div className=\"mt-2 pt-2 border-top\">\n                <Button variant=\"light\" className=\"btn-sm me-1\">\n                  Take action\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShowCustom4(false)}\n                  className=\"btn-sm\"\n                >\n                  Close\n                </Button>\n              </div>\n            </Toast.Body>\n          </Toast>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlacementToast = () => {\n  type ToastPositions =\n    | \"top-start\"\n    | \"top-center\"\n    | \"top-end\"\n    | \"middle-start\"\n    | \"middle-center\"\n    | \"middle-end\"\n    | \"bottom-start\"\n    | \"bottom-center\"\n    | \"bottom-end\";\n\n  const [position, setPosition] = useState<ToastPositions>(\"top-start\");\n\n  const positions = [\n    \"top-start\",\n    \"top-center\",\n    \"top-end\",\n    \"middle-start\",\n    \"middle-center\",\n    \"middle-end\",\n    \"bottom-start\",\n    \"bottom-center\",\n    \"bottom-end\",\n  ];\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Placement</h4>\n          <p className=\"text-muted font-14\">\n            Place toasts with custom CSS as you need them. The top right is\n            often used for notifications, as is the top middle. If you’re only\n            ever going to show one toast at a time, put the positioning styles\n            right on the\n            <code>.toast</code>.\n          </p>\n          <div className=\"mb-3\">\n            <label htmlFor=\"selectToastPlacement\">Toast placement</label>\n            <Form.Select\n              id=\"selectToastPlacement\"\n              className=\"mt-2\"\n              onChange={(e: any) => setPosition(e.currentTarget.value)}\n            >\n              {(positions || []).map((p) => (\n                <option key={p} value={p}>\n                  {p}\n                </option>\n              ))}\n            </Form.Select>\n          </div>\n\n          <div\n            aria-live=\"polite\"\n            aria-atomic=\"true\"\n            className=\"bg-light position-relative\"\n            style={{ minHeight: \"294px\" }}\n          >\n            <ToastContainer className=\"p-3\" position={position}>\n              <Toast>\n                <Toast.Header closeButton={false}>\n                  <img src={logo} className=\"me-1\" alt=\"\" height=\"12\" />\n                  <strong className=\"me-auto\">Dojian</strong>\n                  <small>11 mins ago</small>\n                </Toast.Header>\n                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n              </Toast>\n            </ToastContainer>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst DefaultAlerts = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Default Alert</h4>\n        <p className=\"sub-header\">\n          Alerts are available for any length of text, as well as an optional\n          dismiss button. For proper styling, use one of the eight{\" \"}\n          <code>variant</code>s.\n        </p>\n\n        {(colors || []).map((color, index) => {\n          return (\n            <Alert variant={color} key={index}>\n              This is a <strong>{color}</strong> alert—check it out!\n            </Alert>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst DismissibleAlerts = () => {\n  const [colors, setColors] = useState<string[]>([\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"warning\",\n    \"info\",\n    \"light\",\n    \"dark\",\n  ]);\n\n  /*\n   * handle close\n   */\n  const handleClose = (index: number) => {\n    const list = [...colors];\n    list.splice(index, 1);\n    setColors(list);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Dismissing Alerts</h4>\n        <p className=\"sub-header\">\n          Add the <code>dismissible</code> prop to add a functioning dismiss\n          button to the Alert.\n        </p>\n\n        {colors.map((color, index) => {\n          return (\n            <Alert\n              variant={color}\n              key={index}\n              onClose={() => handleClose(index)}\n              dismissible\n            >\n              <strong>{color} - </strong> A simple {color} alert—check it out!\n            </Alert>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst CustomBackgroundAlerts = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Custom Background Alert</h4>\n          <p className=\"sub-header\">\n            Use <code>.bg-*</code>,<code>.border-0</code> classes.\n          </p>\n\n          {(colors || []).map((color, index) => {\n            return (\n              <Alert\n                variant={color}\n                key={index}\n                className={classNames(\n                  \"bg-\" + color,\n                  \"border-0\",\n                  color === \"light\" ? \"text-dark\" : \"text-white\",\n                  color === \"dark\" ? \"text-light\" : \"text-white\"\n                )}\n              >\n                This is a <strong>{color}</strong> alert—check it out!\n              </Alert>\n            );\n          })}\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst DismissibleCustomBackgroundAlerts = () => {\n  const [colors, setColors] = useState<string[]>([\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"warning\",\n    \"info\",\n    \"light\",\n    \"dark\",\n  ]);\n\n  /*\n   * handle close\n   */\n  const handleClose = (index: number) => {\n    const list = [...colors];\n    list.splice(index, 1);\n    setColors(list);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Dismissing Custom Background Alert</h4>\n        <p className=\"sub-header\">\n          Use <code>.bg-*</code>,<code>.border-0</code> classes.\n        </p>\n\n        {(colors || []).map((color, index) => {\n          return (\n            <Alert\n              variant={color}\n              key={index}\n              onClose={() => handleClose(index)}\n              className={classNames(\n                \"bg-\" + color,\n                \"border-0\",\n                color === \"light\" ? \"text-dark\" : \"text-white\",\n                color === \"dark\" ? \"text-light\" : \"text-white\"\n              )}\n              dismissible\n            >\n              <strong>{color} - </strong> A simple {color} alert—check it out!\n            </Alert>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Notifications = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Base UI\", path: \"/ui/toasts\" },\n          {\n            label: \"Alerts & Notifications\",\n            path: \"/ui/notifications\",\n            active: true,\n          },\n        ]}\n        title={\"Alerts & Notifications\"}\n      />\n\n      {/* toasts */}\n      <Row>\n        <Col>\n          <DefaultToasts />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={6}>\n          <CustomToast />\n        </Col>\n        <Col lg={6}>\n          <PlacementToast />\n        </Col>\n      </Row>\n\n      {/* alerts */}\n      <Row>\n        <Col lg={6}>\n          <DefaultAlerts />\n        </Col>\n\n        <Col lg={6}>\n          <DismissibleAlerts />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={6}>\n          <CustomBackgroundAlerts />\n        </Col>\n\n        <Col lg={6}>\n          <DismissibleCustomBackgroundAlerts />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}"],"names":["fadeStyles","ENTERING","EXITING","ToastFade","React","props","ref","_jsx","Fade","_objectSpread","transitionClasses","displayName","onClose","ToastHeader","_ref","bsPrefix","closeLabel","closeVariant","closeButton","className","children","_objectWithoutProperties","_excluded","useBootstrapPrefix","context","useContext","ToastContext","handleClick","useEventCallback","e","_jsxs","classNames","CloseButton","variant","onClick","defaultProps","createWithBsPrefix","Toast","transition","Transition","show","animation","delay","autohide","bg","delayRef","useRef","onCloseRef","useEffect","current","autohideTimeout","useTimeout","autohideToast","autohideFunc","useCallback","set","toastContext","useMemo","hasAnimation","toast","concat","role","Provider","value","in","unmountOnExit","Object","assign","Body","ToastBody","Header","positionClasses","ToastContainer","position","as","Component","colors","DefaultToasts","setShow","useState","showTranslucent","setShowTranslucent","showPlacement","setShowPlacement","stacked","setStacked","time","desc","Card","Row","Col","lg","src","logo","alt","height","style","minHeight","top","right","map","item","index","list","splice","handleClose","CustomToast","showCustom1","setShowCustom1","showCustom2","setShowCustom2","showCustom3","setShowCustom3","showCustom4","setShowCustom4","_Fragment","Button","PlacementToast","setPosition","htmlFor","Form","Select","id","onChange","currentTarget","p","DefaultAlerts","color","Alert","DismissibleAlerts","setColors","dismissible","CustomBackgroundAlerts","DismissibleCustomBackgroundAlerts","Notifications","PageTitle","breadCrumbItems","label","path","active","title","DivStyledAsH4","divWithClassName","AlertHeading","AlertLink","Anchor","uncontrolledProps","_useUncontrolled","useUncontrolled","prefix","alert","undefined","Link","Heading","MAX_DELAY_MS","Math","pow","setChainedTimeout","handleRef","fn","timeoutAtMs","delayMs","Date","now","setTimeout","isMounted","mounted","useMounted","useWillUnmount","clearTimeout","clear"],"sourceRoot":""}