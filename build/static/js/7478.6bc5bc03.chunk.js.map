{"version":3,"file":"static/js/7478.6bc5bc03.chunk.js","mappings":"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","sources":["pages/forms/Validation.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Card, Button, InputGroup, Form } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nconst NormalFormValidation = () => {\n  const [validated, setValidated] = useState<boolean>(false);\n\n  /*\n   * handle form submission\n   */\n  const handleSubmit = (event: any) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Bootstrap Validation - Normal</h4>\n          <p className=\"sub-header\">\n            Provide valuable, actionable feedback to your users with HTML5 form\n            validationâ€“available in all our supported browsers.\n          </p>\n\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"First name\"\n                defaultValue=\"Mark\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom02\">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Last name\"\n                defaultValue=\"Otto\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustomUsername\">\n              <Form.Label>Username</Form.Label>\n              <InputGroup hasValidation>\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please choose a username.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom03\">\n              <Form.Label>City</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"City\" required />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid city.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom04\">\n              <Form.Label>State</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"State\" required />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid state.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom05\">\n              <Form.Label>Zip</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Zip\" required />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid zip.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Check\n                id=\"validation-check\"\n                required\n                label=\"Agree to terms and conditions\"\n                feedback=\"You must agree before submitting.\"\n              />\n            </Form.Group>\n            <Button type=\"submit\">Submit form</Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst FormValidationWithTooltip = () => {\n  const [validated, setValidated] = useState<boolean>(false);\n\n  /*\n   * handle form submission\n   */\n  const handleSubmit = (event: any) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n  };\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Bootstrap Validation (Tooltips)</h4>\n          <p className=\"sub-header\">\n            If your form layout allows it, you can swap the{\" \"}\n            <code>.valid | invalid-feedback</code> classes for{\" \"}\n            <code>.valid | invalid-tooltip</code> classes to display validation\n            feedback in a styled tooltip.\n          </p>\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip01\"\n            >\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"First name\"\n                defaultValue=\"Mark\"\n              />\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip02\"\n            >\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Last name\"\n                defaultValue=\"Otto\"\n              />\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationCustonTooltipme\"\n            >\n              <Form.Label>Username</Form.Label>\n              <InputGroup hasValidation>\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\" tooltip>\n                  Please choose a username.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip03\"\n            >\n              <Form.Label>City</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"City\" required />\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n                Please provide a valid city.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip04\"\n            >\n              <Form.Label>State</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"State\" required />\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n                Please provide a valid state.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip05\"\n            >\n              <Form.Label>Zip</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Zip\" required />\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n                Please provide a valid zip.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Button type=\"submit\">Submit form</Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst FormValidation = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Forms\", path: \"/forms/validation\" },\n          { label: \"Form Validation\", path: \"/forms/validation\", active: true },\n        ]}\n        title={\"Form Validation\"}\n      />\n\n      <Row>\n        <Col lg={6}>\n          <NormalFormValidation />\n        </Col>\n\n        <Col lg={6}>\n          <FormValidationWithTooltip />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FormValidation;\n"],"names":["NormalFormValidation","validated","setValidated","useState","_jsx","_Fragment","children","Card","_jsxs","Body","className","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Group","controlId","Label","Control","required","type","placeholder","defaultValue","Feedback","InputGroup","hasValidation","Text","id","Check","label","feedback","Button","FormValidationWithTooltip","tooltip","FormValidation","React","PageTitle","breadCrumbItems","path","active","title","Row","Col","lg"],"sourceRoot":""}