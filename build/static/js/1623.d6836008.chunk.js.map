{"version":3,"file":"static/js/1623.d6836008.chunk.js","mappings":"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","sources":["pages/uikit/Offcanvas.tsx","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/Offcanvas.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Card, Offcanvas, Button } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\ninterface OffcanvasOptions {\n  name: string;\n  scroll: boolean;\n  backdrop: boolean;\n}\n\ninterface PlacementOptions {\n  name: string;\n  placement?: \"start\" | \"end\" | \"top\" | \"bottom\";\n}\n\nconst OffCanvasWithBackdrop = ({\n  name,\n  scroll,\n  backdrop,\n}: OffcanvasOptions) => {\n  const [show, setShow] = useState<boolean>(false);\n\n  /**\n   * handle modal toggle\n   */\n  const toggle = () => {\n    setShow((prevState) => !prevState);\n  };\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={toggle} className=\"me-1\">\n        {name}\n      </Button>\n      <Offcanvas\n        show={show}\n        onHide={toggle}\n        scroll={scroll}\n        backdrop={backdrop}\n      >\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n          <h5 className=\"mt-3\">List</h5>\n          <ul className=\"ps-3\">\n            <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\n            <li className=\"\">Neque porro quisquam est, qui dolorem</li>\n            <li className=\"\">Quis autem vel eum iure qui in ea</li>\n          </ul>\n          <ul className=\"ps-3\">\n            <li className=\"\">\n              At vero eos et accusamus et iusto odio dignissimos\n            </li>\n            <li className=\"\">Et harum quidem rerum facilis</li>\n            <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\n          </ul>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n};\n\nconst OffcanvasPlacement = ({ name, placement }: PlacementOptions) => {\n  const [show, setShow] = useState<boolean>(false);\n\n  /**\n   * handle modal toggle\n   */\n  const toggle = () => {\n    setShow((prevState) => !prevState);\n  };\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={toggle}>\n        Toggle {name} offcanvas\n      </Button>\n      <Offcanvas show={show} onHide={toggle} placement={placement}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas {name}</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n          <h5 className=\"mt-3\">List</h5>\n          <ul className=\"ps-3\">\n            <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\n            <li className=\"\">Neque porro quisquam est, qui dolorem</li>\n            <li className=\"\">Quis autem vel eum iure qui in ea</li>\n          </ul>\n          <ul className=\"ps-3\">\n            <li className=\"\">\n              At vero eos et accusamus et iusto odio dignissimos\n            </li>\n            <li className=\"\">Et harum quidem rerum facilis</li>\n            <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\n          </ul>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n};\n\nconst DefaultOffcanvas = () => {\n  const [show, setShow] = useState<boolean>(false);\n\n  /**\n   * handle modal toggle\n   */\n  const toggle = () => {\n    setShow((prevState) => !prevState);\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Offcanvas</h4>\n          <p className=\"text-muted\">\n            <code>Offcanvas</code> includes support for a header with a close\n            button and an optional body class for some initial padding. We\n            suggest that you include offcanvas headers with dismiss actions\n            whenever possible, or provide an explicit dismiss action.\n          </p>\n\n          <Button variant=\"primary\" onClick={toggle}>\n            Launch\n          </Button>\n\n          <Offcanvas show={show} onHide={toggle}>\n            <Offcanvas.Header closeButton>\n              <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              Some text as placeholder. In real life you can have the elements\n              you have chosen. Like, text, images, lists, etc.\n              <h5 className=\"mt-3\">List</h5>\n              <ul className=\"ps-3\">\n                <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\n                <li className=\"\">Neque porro quisquam est, qui dolorem</li>\n                <li className=\"\">Quis autem vel eum iure qui in ea</li>\n              </ul>\n              <ul className=\"ps-3\">\n                <li className=\"\">\n                  At vero eos et accusamus et iusto odio dignissimos\n                </li>\n                <li className=\"\">Et harum quidem rerum facilis</li>\n                <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\n              </ul>\n            </Offcanvas.Body>\n          </Offcanvas>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst Offcanvases = () => {\n  const options: OffcanvasOptions[] = [\n    {\n      name: \"Enable body scrolling\",\n      scroll: true,\n      backdrop: false,\n    },\n    {\n      name: \"Enable backdrop (default)\",\n      scroll: false,\n      backdrop: true,\n    },\n    {\n      name: \"Enable both scrolling & backdrop\",\n      scroll: true,\n      backdrop: true,\n    },\n  ];\n\n  const placementOptions: PlacementOptions[] = [\n    {\n      name: \"top\",\n      placement: \"top\",\n    },\n    {\n      name: \"right\",\n      placement: \"end\",\n    },\n    {\n      name: \"bottom\",\n      placement: \"bottom\",\n    },\n    {\n      name: \"left\",\n      placement: \"start\",\n    },\n  ];\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Base UI\", path: \"/ui/offcanvas\" },\n          { label: \"Offcanvas\", path: \"/ui/offcanvas\", active: true },\n        ]}\n        title={\"Offcanvas\"}\n      />\n\n      <Row>\n        <Col xl={6}>\n          <DefaultOffcanvas />\n\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Offcanvas Backdrop</h4>\n              <p className=\"text-muted\">\n                Scrolling the <code>&lt;body&gt;</code> element is disabled when\n                an offcanvas and its backdrop are visible. Use the{\" \"}\n                <code>scroll</code> prop to toggle <code>&lt;body&gt;</code>{\" \"}\n                scrolling and <code>backdrop</code> prop to toggle the backdrop.\n              </p>\n\n              <div className=\"button-list\">\n                {(options || []).map((props, idx) => (\n                  <OffCanvasWithBackdrop\n                    key={idx}\n                    name={props.name}\n                    scroll={props.scroll}\n                    backdrop={props.backdrop}\n                  />\n                ))}\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={6}>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Offcanvas Placement</h4>\n              <ul className=\"text-muted\">\n                <li>\n                  <code>start</code> places offcanvas on the left of the\n                  viewport\n                </li>\n                <li>\n                  <code>end</code> places offcanvas on the right of the viewport\n                </li>\n                <li>\n                  <code>top</code> places offcanvas on the top of the viewport\n                </li>\n                <li>\n                  <code>bottom</code> places offcanvas on the bottom of the\n                  viewport\n                </li>\n              </ul>\n\n              <div className=\"button-list\">\n                {(placementOptions || []).map((option, index) => (\n                  <OffcanvasPlacement\n                    key={index}\n                    placement={option.placement!}\n                    name={option.name}\n                  />\n                ))}\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Offcanvases;\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('offcanvas-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.defaultProps = defaultProps;\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nOffcanvasHeader.defaultProps = defaultProps;\nexport default OffcanvasHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH5 = divWithClassName('h5');\nexport default createWithBsPrefix('offcanvas-title', {\n  Component: DivStyledAsH5\n});","import classNames from 'classnames';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start'\n};\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement,\n\n  /* BaseModal props */\n  show,\n  backdrop,\n  keyboard,\n  scroll,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  const handleHide = useEventCallback(onHide);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    ...props,\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: ref,\n      backdrop: backdrop,\n      container: container,\n      keyboard: keyboard,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus && !scroll,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: onEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: DialogTransition,\n      backdropTransition: BackdropTransition,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});"],"names":["OffCanvasWithBackdrop","_ref","name","scroll","backdrop","show","setShow","useState","toggle","prevState","_jsxs","_Fragment","children","_jsx","Button","variant","onClick","className","Offcanvas","onHide","Header","closeButton","Title","Body","OffcanvasPlacement","_ref2","placement","DefaultOffcanvas","Card","Offcanvases","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xl","map","props","idx","option","index","createWithBsPrefix","transitionStyles","ENTERING","ENTERED","OffcanvasToggling","React","ref","bsPrefix","_objectWithoutProperties","_excluded","useBootstrapPrefix","TransitionWrapper","_objectSpread","addEndListener","transitionEndListener","childRef","status","innerProps","classNames","EXITING","concat","defaultProps","in","mountOnEnter","unmountOnExit","appear","displayName","OffcanvasHeader","AbstractModalHeader","closeLabel","DivStyledAsH5","divWithClassName","Component","DialogTransition","BackdropTransition","Fade","ariaLabelledby","keyboard","onEscapeKeyDown","onShow","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalManager","useRef","handleHide","useEventCallback","modalContext","useMemo","renderBackdrop","useCallback","backdropProps","ModalContext","Provider","value","BaseModal","node","style","visibility","_len","arguments","length","args","Array","_key","_len2","_key2","current","BootstrapModalManager","handleContainerOverflow","getSharedManager","transition","backdropTransition","renderDialog","dialogProps","role","Object","assign","OffcanvasBody","OffcanvasTitle"],"sourceRoot":""}