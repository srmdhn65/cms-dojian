{"version":3,"file":"static/js/6747.10543174.chunk.js","mappings":"6RA2BA,MAiEMA,EAAM,IAAIC,EAAAA,EA4FhB,EA1FcC,KACZ,MAAMC,GAAWC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,MACPC,EAAWC,IAAcC,EAAAA,EAAAA,WAAS,GAMnCC,GAAiBC,EAAAA,EAAAA,GACrBC,EAAAA,KAAaC,MAAM,CACjBC,MAAOF,EAAAA,KAAaG,SAASV,EAAE,uBAC/BW,SAAUJ,EAAAA,KAAaG,SAASV,EAAE,6BAgCtC,OACEY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAGEF,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CACTC,SAAUhB,EACR,gEAEJc,UAIEG,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CACXC,SAtCSC,UACf,IACEjB,GAAW,SACLkB,EAAAA,EACHC,SAAS,QAASC,EAAU,CAAC,GAAG,GAChCC,MAAMC,KACLC,EAAAA,EAAAA,GAAU,UAAW,kBACrB,MAAMC,EAAOF,EAASE,KAAKA,KAC3BC,aAAaC,QAAQ,QAASF,EAAKG,OACnCF,aAAaC,QAAQ,OAAQE,KAAKC,UAAUL,IAC5ChC,EAAIsC,gBAAgBN,IACpBO,EAAAA,EAAAA,GAAiBP,EAAKG,OACtBhC,EAAS,IAAI,IAEdqC,OAAOC,KACNV,EAAAA,EAAAA,GAAU,QAASU,GAAS,gCAAgC,IAC3DC,SAAQ,KACTlC,GAAW,EAAM,GAEvB,CAAE,MAAOiC,GACPE,QAAQF,MAAM,QAASA,EAEzB,GAiBMG,SAAUlC,EACVmC,cAAe,CAAE/B,MAAO,OAAQE,SAAU,QAASG,SAAA,EAEnDF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CACRC,MAAO1C,EAAE,SACT2C,KAAK,OACLC,KAAK,QACLC,YAAY,mBACZC,eAAgB,UAElBlC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CACRC,MAAO1C,EAAE,YACT2C,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,eAAgB,UAGlBlC,EAAAA,EAAAA,KAAA,OAAKmC,UAAU,qBAAoBjC,UACjCF,EAAAA,EAAAA,KAACoC,EAAAA,EAAY,CAACL,KAAK,SAASD,MAAM,QAAQO,QAAS/C,YASxD,C","sources":["pages/auth/Login.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Alert, Row, Col } from \"react-bootstrap\";\nimport { Navigate, Link, useLocation, useNavigate } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useTranslation } from \"react-i18next\";\nimport classNames from \"classnames\";\n\n\n\n\n// components\nimport { VerticalForm, FormInput } from \"../../components/\";\n\nimport AuthLayout from \"./AuthLayout\";\nimport { APICore, setAuthorization } from \"../../helpers/api/apiCore\";\nimport apiServices from \"../../services/apiServices\";\nimport showToast from \"../../helpers/toast\";\nimport CustomButton from \"../../components/CustomButton\";\n\n\ninterface UserData {\n  email: string;\n  password: string;\n}\n\n/* bottom links */\nconst BottomLink = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Row className=\"mt-3\">\n      <Col className=\"text-center\">\n        <p>\n          <Link to={\"/auth/forget-password\"} className=\"text-white-50 ms-1\">\n            {t(\"Forgot your password?\")}\n          </Link>\n        </p>\n        <p className=\"text-white-50\">\n          {t(\"Don't have an account?\")}{\" \"}\n          <Link to={\"/auth/register\"} className=\"text-white ms-1\">\n            <b>{t(\"Sign Up\")}</b>\n          </Link>\n        </p>\n      </Col>\n    </Row>\n  );\n};\n\n/* social links */\nconst SocialLinks = () => {\n  const socialLinks = [\n    {\n      variant: \"primary\",\n      icon: \"facebook\",\n    },\n    {\n      variant: \"danger\",\n      icon: \"google\",\n    },\n    {\n      variant: \"info\",\n      icon: \"twitter\",\n    },\n    {\n      variant: \"secondary\",\n      icon: \"github\",\n    },\n  ];\n  return (\n    <>\n      <ul className=\"social-list list-inline mt-3 mb-0\">\n        {(socialLinks || []).map((item, index: number) => {\n          return (\n            <li key={index} className=\"list-inline-item\">\n              <Link\n                to=\"#\"\n                className={classNames(\n                  \"social-list-item\",\n                  \"border-\" + item.variant,\n                  \"text-\" + item.variant\n                )}\n              >\n                <i className={classNames(\"mdi\", \"mdi-\" + item.icon)}></i>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nconst api = new APICore();\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const [isLoading, setLoading] = useState(false);\n\n\n  /*\n  form validation schema\n  */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      email: yup.string().required(t(\"Please enter Email\")),\n      password: yup.string().required(t(\"Please enter Password\")),\n    })\n  );\n\n  /*\n  handle form submission\n  */\n  const onSubmit = async (formData: UserData) => {\n    try {\n      setLoading(true);\n      await apiServices\n        .postData(`login`, formData, {}, false)\n        .then((response) => {\n          showToast('success', 'Berhasil Login');\n          const data = response.data.data;\n          localStorage.setItem('token', data.token);\n          localStorage.setItem('user', JSON.stringify(data))\n          api.setLoggedInUser(data);\n          setAuthorization(data.token);\n          navigate('/');\n        })\n        .catch((error) => {\n          showToast('error', error || 'Terjadi kesalahan pada server');\n        }).finally(() => {\n          setLoading(false);\n        });\n    } catch (error) {\n      console.error(\"error\", error);\n      // showToast('error', 'Terjadi kesalahan pada server');\n    }\n  };\n\n  return (\n    <>\n\n\n      <AuthLayout\n        helpText={t(\n          \"Enter your email address and password to access admin panel.\"\n        )}\n      // bottomLinks={<BottomLink />}\n      >\n\n\n        <VerticalForm<UserData>\n          onSubmit={onSubmit}\n          resolver={schemaResolver}\n          defaultValues={{ email: \"test\", password: \"test\" }}\n        >\n          <FormInput\n            label={t(\"Email\")}\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            containerClass={\"mb-3\"}\n          />\n          <FormInput\n            label={t(\"Password\")}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            containerClass={\"mb-3\"}\n          ></FormInput>\n\n          <div className=\"text-center d-grid\">\n            <CustomButton type=\"submit\" label=\"Login\" loading={isLoading} />\n          </div>\n        </VerticalForm>\n\n        {/* <div className=\"text-center\">\n          <h5 className=\"mt-3 text-muted\">{t(\"Sign in with\")}</h5>\n          <SocialLinks />\n        </div> */}\n      </AuthLayout>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["api","APICore","Login","navigate","useNavigate","t","useTranslation","isLoading","setLoading","useState","schemaResolver","yupResolver","yup","shape","email","required","password","_jsx","_Fragment","children","AuthLayout","helpText","_jsxs","VerticalForm","onSubmit","async","apiServices","postData","formData","then","response","showToast","data","localStorage","setItem","token","JSON","stringify","setLoggedInUser","setAuthorization","catch","error","finally","console","resolver","defaultValues","FormInput","label","type","name","placeholder","containerClass","className","CustomButton","loading"],"sourceRoot":""}