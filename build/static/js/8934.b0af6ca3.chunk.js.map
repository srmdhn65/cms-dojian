{"version":3,"file":"static/js/8934.b0af6ca3.chunk.js","mappings":"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","sources":["components/NotificationDropdown.tsx","components/ProfileDropdown.tsx","layouts/Topbar.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\nimport classNames from \"classnames\";\n\n//interface\nimport { NotificationItem } from \"../layouts/Topbar\";\n\n// notifiaction continer styles\nconst notificationContainerStyle = {\n  maxHeight: \"300px\",\n  display: \"none\",\n};\n\nconst notificationShowContainerStyle = {\n  maxHeight: \"300px\",\n};\n\ninterface NotificationDropdownProps {\n  notifications: Array<NotificationItem>;\n}\n\ninterface NotificationContainerStyle {\n  maxHeight?: string;\n  display?: string;\n}\n\nconst NotificationDropdown = (props: NotificationDropdownProps) => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n  const [notificationContentStyle, setNotificationContentStyles] = useState<NotificationContainerStyle>(notificationContainerStyle);\n  let notifications = props.notifications\n\n  /*\n   * toggle notification-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n    setNotificationContentStyles(\n      notificationContentStyle === notificationContainerStyle\n        ? notificationShowContainerStyle\n        : notificationContainerStyle\n    );\n  };\n\n  const handleClearNotification = (index: number) => {\n    notifications.splice(index, 1);\n  }\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-notification\"\n        role=\"button\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link waves-effect waves-light arrow-none notification-list\", { show: dropdownOpen, })}\n      >\n        <i className=\"fe-bell noti-icon font-22\"></i>\n        <span className=\"badge bg-danger rounded-circle noti-icon-badge\">\n          9\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-menu-end dropdown-menu-animated dropdown-lg py-0\">\n        <div onClick={toggleDropdown}>\n          <div className=\"p-2 border-top-0 border-start-0 border-end-0 border-dashed border\">\n            <div className=\"row align-items-center\">\n              <div className=\"col\">\n                <h6 className=\"m-0 font-16 fw-semibold\">Notification</h6>\n              </div>\n              <div className=\"col-auto\">\n                <Link to=\"#\" className=\"text-dark text-decoration-underline\">\n                  <small>Clear All</small>\n                </Link>\n              </div>\n            </div>\n          </div>\n          <SimpleBar className=\"px-1\" style={notificationContentStyle}>\n            <h5 className=\"text-muted font-13 fw-normal mt-2\">Today</h5>\n            {(notifications || []).map((item, i) => {\n              return (\n                <Link to=\"#\" className=\"dropdown-item p-0 notify-item card unread-noti shadow-none mb-1\" key={i + \"-noti\"}                >\n                  {item.avatar ? (\n                    <div className=\"card-body\">\n                      <span className=\"float-end noti-close-btn text-muted\" onClick={() => handleClearNotification(i)}>\n                        <i className=\"mdi mdi-close\"></i>\n                      </span>\n                      <div className=\"d-flex align-items-center\">\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"notify-icon\">\n                            <img\n                              src={item.avatar}\n                              alt=\"\"\n                              className=\"img-fluid rounded-circle\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"flex-grow-1 text-truncate ms-2\">\n                          <h5 className=\"noti-item-title fw-semibold font-14\">\n                            {item.text}\n                            <small className=\"fw-normal text-muted ms-1\">\n                              {item.text}\n                            </small>\n                          </h5>\n                          <small className=\"noti-item-subtitle text-muted\">\n                            {item.subText}\n                          </small>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"card-body\">\n                      <span className=\"float-end noti-close-btn text-muted\" onClick={() => handleClearNotification(i)}>\n                        <i className=\"mdi mdi-close\" />\n                      </span>\n                      <div className={`notify-icon bg-${item.bgColor}`}>\n                        <i className={item.icon}></i>\n                      </div>\n                      <p className=\"notify-details\">\n                        {item.text}\n                        <small className=\"noti-item-subtitle text-muted\">\n                          {item.subText}\n                        </small>\n                      </p>\n                    </div>\n                  )}\n                </Link>\n              );\n            })}\n          </SimpleBar>\n\n          <Link\n            to=\"#\"\n            className=\"dropdown-item text-center text-primary notify-item notify-all\"\n          >\n            View All <i className=\"fe-arrow-right\"></i>\n          </Link>\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default NotificationDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\ninterface ProfileMenuItem {\n  label: string;\n  icon: string;\n  redirectTo: string;\n}\n\ninterface ProfileDropdownProps {\n  menuItems: Array<ProfileMenuItem>;\n  profilePic?: string;\n  username: string;\n  userTitle?: string;\n}\n\nconst ProfileDropdown = (props: ProfileDropdownProps) => {\n  const profilePic = props[\"profilePic\"] || null;\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle profile-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-profile\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\n          \"nav-link nav-user me-0 waves-effect waves-light\",\n          { show: dropdownOpen }\n        )}\n      >\n        <img src={profilePic!} className=\"rounded-circle\" alt=\"\" />\n        <span className=\"pro-user-name ms-1\">\n          {props[\"username\"]} <i className=\"mdi mdi-chevron-down\"></i>\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-menu-end profile-dropdown\">\n        <div onClick={toggleDropdown}>\n          <div className=\"dropdown-header noti-title\">\n            <h6 className=\"text-overflow m-0\">Welcome !</h6>\n          </div>\n          {(props.menuItems || []).map((item, i) => {\n            return (\n              <React.Fragment key={i}>\n                {i === props[\"menuItems\"].length - 1 && (\n                  <div className=\"dropdown-divider\"></div>\n                )}\n                <Link\n                  to={item.redirectTo}\n                  className=\"dropdown-item notify-item\"\n                  key={i + \"-profile-menu\"}\n                >\n                  <i className={`${item.icon} me-1`}></i>\n                  <span>{item.label}</span>\n                </Link>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default ProfileDropdown;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import classNames from 'classnames';\n\n// actions\nimport { showRightSidebar, changeSidebarType } from \"../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../redux/store\";\n\n//constants\nimport { LayoutTypes, SideBarTypes } from \"../constants/layout\";\n\n// components\nimport TopbarSearch from \"../components/TopbarSearch\";\nimport MaximizeScreen from \"../components/MaximizeScreen\";\nimport AppsDropdown from \"../components/AppsDropdown/\";\n// import SearchDropdown from '../components/SearchDropdown';\nimport LanguageDropdown from \"../components/LanguageDropdown\";\nimport NotificationDropdown from \"../components/NotificationDropdown\";\nimport ProfileDropdown from \"../components/ProfileDropdown\";\nimport CreateNew from \"../components/CreateNew\";\nimport MegaMenu from \"../components/MegaMenu\";\n\nimport profilePic from \"../assets/images/users/user-1.jpg\";\nimport avatar4 from \"../assets/images/users/user-4.jpg\";\nimport logoSm from \"../assets/images/logo-sm.png\";\nimport logoDark from \"../assets/images/logo-dark.png\";\nimport logoDark2 from \"../assets/images/logo-dark-2.png\";\nimport logoLight from \"../assets/images/logo-light.png\";\nimport logoLight2 from \"../assets/images/logo-light-2.png\";\nimport { useViewport } from \"../hooks/useViewPort\";\n\nexport interface NotificationItem {\n  id: number;\n  text: string;\n  subText: string;\n  icon?: string;\n  avatar?: string;\n  bgColor?: string;\n}\n\n// get the notifications\nconst Notifications: NotificationItem[] = [\n  {\n    id: 1,\n    text: \"Cristina Pride\",\n    subText: \"Hi, How are you? What about our next meeting\",\n    avatar: profilePic,\n  },\n  {\n    id: 2,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"mdi mdi-comment-account-outline\",\n    bgColor: \"primary\",\n  },\n  {\n    id: 3,\n    text: \"Karen Robinson\",\n    subText: \"Wow ! this admin looks good and awesome design\",\n    avatar: avatar4,\n  },\n  {\n    id: 4,\n    text: \"New user registered.\",\n    subText: \"5 hours ago\",\n    icon: \"mdi mdi-account-plus\",\n    bgColor: \"warning\",\n  },\n  {\n    id: 5,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"mdi mdi-comment-account-outline\",\n    bgColor: \"info\",\n  },\n  {\n    id: 6,\n    text: \"Carlos Crouch liked Admin\",\n    subText: \"13 days ago\",\n    icon: \"mdi mdi-heart\",\n    bgColor: \"secondary\",\n  },\n];\n\n// get the profilemenu\nconst ProfileMenus = [\n  {\n    label: \"My Account\",\n    icon: \"fe-user\",\n    redirectTo: \"#\",\n  },\n  {\n    label: \"Settings\",\n    icon: \"fe-settings\",\n    redirectTo: \"#\",\n  },\n  // {\n  //   label: \"Lock Screen\",\n  //   icon: \"fe-lock\",\n  //   redirectTo: \"/auth/lock-screen\",\n  // },\n  {\n    label: \"Logout\",\n    icon: \"fe-log-out\",\n    redirectTo: \"/auth/logout\",\n  },\n];\n\n\ninterface TopbarProps {\n  hideLogo?: boolean;\n  navCssClasses?: string;\n  openLeftMenuCallBack?: () => void;\n  topbarDark?: boolean;\n}\n\nconst Topbar = ({\n  hideLogo,\n  navCssClasses,\n  openLeftMenuCallBack,\n  topbarDark,\n}: TopbarProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { width } = useViewport();\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const username = user.fullname || 'Guest'\n\n  const navbarCssClasses: string = navCssClasses || \"\";\n  const containerCssClasses: string = !hideLogo ? \"container-fluid\" : \"\";\n\n  const { layoutType, leftSideBarType } = useSelector((state: RootState) => ({\n    layoutType: state.Layout.layoutType,\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n\n  /**\n   * Toggle the leftmenu when having mobile screen\n   */\n  const handleLeftMenuCallBack = () => {\n    if (width < 1140) {\n      if (leftSideBarType === 'full') {\n        showLeftSideBarBackdrop();\n        document.getElementsByTagName(\"html\")[0].classList.add(\"sidebar-enable\");\n      }\n      else {\n        dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_FULL));\n      }\n    } else if (leftSideBarType === \"condensed\") {\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n    } else if (leftSideBarType === 'full') {\n      showLeftSideBarBackdrop();\n      document.getElementsByTagName(\"html\")[0].classList.add(\"sidebar-enable\");\n    } else if (leftSideBarType === 'fullscreen') {\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n      // showLeftSideBarBackdrop();\n      document.getElementsByTagName(\"html\")[0].classList.add(\"sidebar-enable\");\n    }\n    else {\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n    }\n  };\n\n  // create backdrop for leftsidebar\n  function showLeftSideBarBackdrop() {\n    const backdrop = document.createElement(\"div\");\n    backdrop.id = \"custom-backdrop\";\n    backdrop.className = \"offcanvas-backdrop fade show\";\n    // backdrop.style.zIndex = '999'\n    document.body.appendChild(backdrop);\n\n    if (\n      document.getElementsByTagName(\"html\")[0]?.getAttribute(\"dir\") !== \"rtl\"\n    ) {\n      document.body.style.overflow = \"hidden\";\n      if (width > 1140) {\n        document.body.style.paddingRight = \"15px\";\n      }\n    }\n\n    backdrop.addEventListener(\"click\", function (e) {\n      document.getElementsByTagName(\"html\")[0].classList.remove(\"sidebar-enable\");\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_FULL));\n      hideLeftSideBarBackdrop();\n    });\n  }\n\n  function hideLeftSideBarBackdrop() {\n    var backdrop = document.getElementById(\"custom-backdrop\");\n    if (backdrop) {\n      document.body.removeChild(backdrop);\n      document.body.style.overflow = \"visible\";\n    }\n  }\n\n  /**\n   * Toggles the right sidebar\n   */\n  const handleRightSideBar = () => {\n    dispatch(showRightSidebar());\n  };\n\n  /**\n   * Toggles the left sidebar width\n   */\n  // const toggleLeftSidebarWidth = () => {\n  //   if (leftSideBarType === 'default' || leftSideBarType === 'compact')\n  //     dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n  //   if (leftSideBarType === 'condensed') dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n  // };\n\n  return (\n    <React.Fragment>\n      <div className={`navbar-custom ${navbarCssClasses}`}>\n        <div className={`topbar ${containerCssClasses}`}>\n          <div className=\"topbar-menu d-flex align-items-center gap-1\">\n            {!hideLogo && (\n              <div className=\"logo-box\">\n                <Link to=\"/\" className=\"logo logo-dark text-center\">\n                  <span className=\"logo-sm\">\n                    <img src={logoSm} alt=\"\" height=\"22\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img\n                      src={\n                        layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                          ? logoDark2\n                          : logoDark\n                      }\n                      alt=\"\"\n                      height=\"20\"\n                    />\n                  </span>\n                </Link>\n                <Link to=\"/\" className=\"logo logo-light text-center\">\n                  <span className=\"logo-sm\">\n                    <img src={logoSm} alt=\"\" height=\"22\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img\n                      src={\n                        layoutType === LayoutTypes.LAYOUT_TWO_COLUMN\n                          ? logoLight2\n                          : logoLight\n                      }\n                      alt=\"\"\n                      height=\"20\"\n                    />\n                  </span>\n                </Link>\n              </div>\n            )}\n\n            <button\n              className=\"button-toggle-menu\"\n              onClick={handleLeftMenuCallBack}\n            >\n              <i className=\"mdi mdi-menu\" />\n            </button>\n\n            {/* <div className=\"dropdown d-none d-xl-block\">\n              <CreateNew otherOptions={otherOptions} />\n            </div>\n\n            <div className=\"dropdown dropdown-mega d-none d-xl-block\">\n              <MegaMenu subMenus={MegaMenuOptions} />\n            </div> */}\n          </div>\n\n          <ul className=\"topbar-menu d-flex align-items-center\">\n            {/* <li className=\"app-search dropdown d-none d-lg-block\">\n              <TopbarSearch items={SearchResults} />\n            </li> */}\n            {/* <li className=\"dropdown d-inline-block d-lg-none\">\n              <SearchDropdown />\n            </li> */}\n            {/* <li className=\"dropdown d-none d-lg-inline-block\">\n              <MaximizeScreen />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <AppsDropdown />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <LanguageDropdown />\n            </li> */}\n            <li className=\"dropdown notification-list\">\n              <NotificationDropdown notifications={Notifications} />\n            </li>\n            <li className=\"dropdown\">\n              <ProfileDropdown\n                profilePic={profilePic}\n                menuItems={ProfileMenus}\n                username={username}\n                userTitle={\"\"}\n              />\n            </li>\n            <li>\n              <button\n                className=\"nav-link dropdown-toggle right-bar-toggle waves-effect waves-light btn btn-link shadow-none\"\n                onClick={handleRightSideBar}\n              >\n                <i className=\"fe-settings noti-icon font-22\"></i>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Topbar;\n"],"names":["notificationContainerStyle","maxHeight","display","notificationShowContainerStyle","props","dropdownOpen","setDropdownOpen","useState","notificationContentStyle","setNotificationContentStyles","notifications","toggleDropdown","handleClearNotification","index","splice","_jsxs","Dropdown","show","onToggle","children","Toggle","id","role","as","onClick","className","classNames","_jsx","Menu","Link","to","SimpleBar","style","map","item","i","avatar","src","alt","text","subText","concat","bgColor","icon","profilePic","menuItems","React","length","redirectTo","label","Notifications","avatar4","ProfileMenus","_ref","hideLogo","navCssClasses","openLeftMenuCallBack","topbarDark","dispatch","useDispatch","width","useViewport","username","JSON","parse","localStorage","getItem","fullname","navbarCssClasses","containerCssClasses","layoutType","leftSideBarType","useSelector","state","Layout","showLeftSideBarBackdrop","_document$getElements","backdrop","document","createElement","body","appendChild","getElementsByTagName","getAttribute","overflow","paddingRight","addEventListener","e","classList","remove","changeSidebarType","SideBarTypes","LEFT_SIDEBAR_TYPE_FULL","getElementById","removeChild","hideLeftSideBarBackdrop","logoSm","height","LayoutTypes","LAYOUT_TWO_COLUMN","logoDark2","logoDark","logoLight2","logoLight","handleLeftMenuCallBack","add","LEFT_SIDEBAR_TYPE_DEFAULT","LEFT_SIDEBAR_TYPE_CONDENSED","NotificationDropdown","ProfileDropdown","userTitle","handleRightSideBar","showRightSidebar"],"sourceRoot":""}